
var basic=null,digest=null,thru=null,noop=null,winston=null,jsdom=null;var logger=null;if(typeof(window)==='undefined'){basic=require("./lib/basic-wrapper");digest=require("./lib/digest-wrapper");thru=require("./lib/passthrough-wrapper");noop=require("./lib/noop");winston=require('winston');jsdom=require('jsdom');logger=new(winston.Logger)({transports:[new winston.transports.Console()],exceptionHandlers:[new winston.transports.Console()]});}else{noop=function(){};var cl=function(){this.loglevels=["debug","info","warn","error"];this.loglevel=0;};cl.prototype.setLogLevel=function(levelstring){var l=0;for(;l<this.loglevels.length;l++){if(this.loglevels[l]==levelstring){this.loglevel=l;l=this.loglevels.length;}}};cl.prototype.debug=function(msg){if(this.loglevel==0){console.log("DEBUG: "+msg);}};cl.prototype.info=function(msg){if(this.loglevel<=1){console.log("INFO:  "+msg);}};cl.prototype.warn=function(msg){if(this.loglevel<=2){console.log("WARN:  "+msg);}};cl.prototype.error=function(msg){if(this.loglevel<=3){console.log("ERROR: "+msg);}};logger=new cl();}
var defaultdboptions={host:"localhost",port:9090,adminport:8002,ssl:false,auth:"digest",username:"admin",password:"admin",database:"mldbtest",searchoptions:{},fastthreads:10,fastparts:100};function textToXML(text){var doc=null;if(typeof window==="undefined"){doc=jsdom.jsdom(text,null,{FetchExternalResources:false,ProcessExternalResources:false});}else{if(window.ActiveXObject){doc=new ActiveXObject('Microsoft.XMLDOM');doc.async='false';doc.loadXML(text);}else{var parser=new DOMParser();doc=parser.parseFromString(text,'text/xml');}}
return doc;};function xmlToText(xml){return(new XMLSerializer()).serializeToString(xml);};function xmlToJson(xml){if(typeof xml=="string"){throw new TypeError("XML parameter should be an XML Document. It is currently a string.");}
if(null==xml||undefined==xml){return{};}
var obj={};if(xml.nodeType==1){if(xml.attributes.length>0){for(var j=0;j<xml.attributes.length;j++){var attribute=xml.attributes.item(j);var nodeName=attribute.nodeName;var pos=nodeName.indexOf(":");if(-1!=pos){nodeName=nodeName.substring(pos+1);}
obj[nodeName]=attribute.value;}}}else if(xml.nodeType==3){obj=xml.nodeValue;}
if(undefined!=xml.childNodes){var justText=true;for(var i=0;i<xml.childNodes.length;i++){var item=xml.childNodes.item(i);var nodeName=item.nodeName.toLowerCase();var pos=nodeName.indexOf(":");if(-1!=pos){nodeName=nodeName.substring(pos+1);}
if(typeof(obj[nodeName])=="undefined"){obj[nodeName]=xmlToJson(item);}else{if(typeof(obj[nodeName].push)=="undefined"){var old=obj[nodeName];obj[nodeName]=[];obj[nodeName].push(old);}
obj[nodeName].push(xmlToJson(item));}
if(("#text"==nodeName)){if(Array.isArray(obj[nodeName])){var text="";for(var a=0;a<obj[nodeName].length;a++){text+=obj[nodeName][a];}
text=text.replace("\n","").replace("\t","").replace("\r","").trim();if(0!=text.length){obj[nodeName]=text;}else{obj[nodeName]=undefined;}}else if("string"==typeof obj[nodeName]){var text=obj[nodeName];text=text.replace("\n","").replace("\t","").replace("\r","").trim();if(0!=text.length){obj[nodeName]=text.replace("\"","").replace("\"","");}else{obj[nodeName]=undefined;}}}
if(undefined!=obj[nodeName]){justText=justText&&("#text"==nodeName);}}
if(justText&&undefined!=obj[nodeName]){var text="";for(var i=0;i<obj[nodeName].length;i++){if("string"==typeof obj[nodeName][i]){text+=obj[nodeName][i];}else if(Array.isArray(obj[nodeName][i])){}}
obj=text;}}
return obj;};function xmlToJsonSearchResults(xml){if(null==xml||xml==undefined){return{};}
var obj={};if(xml.nodeType==1){if(xml.attributes.length>0){for(var j=0;j<xml.attributes.length;j++){var attribute=xml.attributes.item(j);var nodeName=attribute.nodeName;var pos=nodeName.indexOf(":");if(-1!=pos){nodeName=nodeName.substring(pos+1);}
obj[nodeName]=attribute.value;}}}else if(xml.nodeType==3){obj=xml.nodeValue;}
if(undefined!=xml.childNodes){var justText=true;var isResultContent=false;if(null!=xml.parentNode){var ourName=xml.parentNode.nodeName;var pos=ourName.indexOf(":");if(-1!=pos){ourName=ourName.substring(pos+1);}
if("result"==ourName){isResultContent=true;}}
if(isResultContent){obj.content=xmlToText(xml);}else{for(var i=0;i<xml.childNodes.length;i++){var item=xml.childNodes.item(i);var nodeName=item.nodeName;if(typeof(obj[nodeName])=="undefined"){obj[nodeName]=xmlToJson(item);}else{if(typeof(obj[nodeName].push)=="undefined"){var old=obj[nodeName];obj[nodeName]=[];obj[nodeName].push(old);}
obj[nodeName].push(xmlToJson(item));}
if(("#text"==nodeName)){if(Array.isArray(obj[nodeName])){var text="";for(var a=0;a<obj[nodeName].length;a++){text+=obj[nodeName][a];}
text=text.replace("\n","").replace("\t","").replace("\r","").trim();if(0!=text.length){obj[nodeName]=text;}else{obj[nodeName]=undefined;}}else if("string"==typeof obj[nodeName]){var text=obj[nodeName];text=text.replace("\n","").replace("\t","").replace("\r","").trim();if(0!=text.length){obj[nodeName]=text.replace("\"","").replace("\"","");}else{obj[nodeName]=undefined;}}}
if(undefined!=obj[nodeName]){justText=justText&&("#text"==nodeName);}}
if(justText&&undefined!=obj[nodeName]){var text="";for(var i=0;i<obj[nodeName].length;i++){if("string"==typeof obj[nodeName][i]){text+=obj[nodeName][i];}else if(Array.isArray(obj[nodeName][i])){}}
obj=text;}}}
return obj;};function xmlToJsonStrict(xml){if(null==xml||undefined==typeof xml){return{};}
var obj={};if(xml.nodeType==1){if(xml.attributes.length>0){obj["@attributes"]={};for(var j=0;j<xml.attributes.length;j++){var attribute=xml.attributes.item(j);obj["@attributes"][attribute.nodeName]=attribute.value;}}}else if(xml.nodeType==3){obj=xml.nodeValue;}
if(xml.hasChildNodes()){for(var i=0;i<xml.childNodes.length;i++){var item=xml.childNodes.item(i);var nodeName=item.nodeName;if(typeof(obj[nodeName])=="undefined"){obj[nodeName]=xmlToJsonStrict(item);}else{if(typeof(obj[nodeName].push)=="undefined"){var old=obj[nodeName];obj[nodeName]=[];obj[nodeName].push(old);}
obj[nodeName].push(xmlToJsonStrict(item));}}}
return obj;};var self;var mljs=function(){this.configure();};var m=mljs;mljs.prototype.configure=function(dboptions){self=this;if(undefined==this.logger){this.logger=logger;}
this.dboptions=defaultdboptions;if(undefined!=dboptions){for(var a in dboptions){this.dboptions[a]=dboptions[a];}}
this._version=null;this._forceVersion=null;this._optionsCache={};this.dboptions.wrappers=new Array();if(!(typeof window==="undefined")){if(!(typeof jQuery=='undefined')&&(!(undefined==mljs.bindings||undefined==mljs.bindings.jquery))){logger.debug("Wrapper: jQuery, Version: "+jQuery.fn.jquery);if(undefined==mljs.bindings||undefined==mljs.bindings.jquery){logger.debug("ERROR SEVERE: mljs.bindings.jquery is not defined. Included mljs-jquery.js ?");}else{this.dboptions.wrapper=new mljs.bindings.jquery();}}else if(!(typeof Prototype=='undefined')&&!(undefined==mljs.bindings||undefined==mljs.bindings.prototypejs)){logger.debug("Wrapper: Prototype, Version: "+Prototype.Version);if(undefined==mljs.bindings||undefined==mljs.bindings.prototypejs){logger.debug("ERROR SEVERE: mljs.bindings.prototypejs is not defined. Included mljs-prototype.js ?");}else{this.dboptions.wrapper=new mljs.bindings.prototypejs();}}else{logger.debug("Wrapper: Falling back to XMLHttpRequest");if(undefined==mljs.bindings){logger.debug("ERROR SEVERE: mljs.bindings.xhr or xhr2 is not defined. Included mljs-xhr(2).js ?");}else{if(undefined==mljs.bindings.xhr){logger.debug("Wrapper: Using XmlHttpRequest 2");this.dboptions.wrapper=new mljs.bindings.xhr2();}else{logger.debug("Wrapper: Using XmlHttpRequest");this.dboptions.wrapper=new mljs.bindings.xhr();}}}
if(undefined==m.defaultconnection){m.defaultconnection=this;}
this.__doreq_impl=this.__doreq_wrap;}else{if(this.dboptions.auth=="basic"){this.dboptions.wrapper=new basic();}else if(this.dboptions.auth=="digest"){this.dboptions.wrapper=new digest();}else if(this.dboptions.auth=="none"){this.dboptions.wrapper=new thru();}else if(this.dboptions.auth=="basicdigest"||this.dboptions.auth=="basic+digest"){}
this.__doreq_impl=this.__doreq_node;}
this.dboptions.wrapper.configure(this.dboptions.username,this.dboptions.password,this.logger);};mljs.prototype.forceVersion=function(ver){this._forceVersion=ver;};mljs.prototype.setLogger=function(newlogger){this.logger=newlogger;if(this.dboptions.wrapper!=undefined){this.dboptions.wrapper.logger=newlogger;}};mljs.prototype.__d=function(msg){this.logger.debug(msg);};mljs.prototype.__i=function(msg){this.logger.info(msg);};mljs.prototype.__w=function(msg){this.logger.warn(msg);};mljs.prototype.__e=function(msg){this.logger.error(msg);};if(typeof window==='undefined'){module.exports=function(){return new mljs()};}else{}
mljs.prototype.__genid=function(){return m.__dogenid();};m.__dogenid=function(){return""+((new Date()).getTime())+"-"+Math.ceil(Math.random()*100000000);}
mljs.prototype.__doreq_wrap=function(reqname,options,content,callback_opt){this.dboptions.wrapper.request(reqname,options,content,function(result){(callback_opt||noop)(result);});};mljs.prototype.__doreq_node=function(reqname,options,content,callback_opt){var self=this;var wrapper=this.dboptions.wrapper;if(options.host!=this.dboptions.host||options.port!=this.dboptions.port){var name=options.host+":"+options.port;this.logger.debug("WARNING: Not accessing same host as REST API. Accessing: "+name);if(undefined==this.dboptions.wrappers[name]){this.logger.debug("Creating new wrapper");var nw=new digest();nw.configure(this.dboptions.username,this.dboptions.password,this.logger);this.dboptions.wrappers[name]=nw;wrapper=nw;}else{this.logger.debug("Reusing saved wrapper");wrapper=this.dboptions.wrappers[name];}}
var completeRan=false;options.headers["Connection"]="keep-alive";var ct=options.contentType;if(undefined==ct){self.logger.debug("XHR2: *********** CT UNDEFINED *************");ct="application/json";}
if(undefined!=content){options.headers["Content-Type",ct];}
var httpreq=wrapper.request(options,function(res){var body="";res.on('data',function(data){body+=data;});var complete=function(){if(!completeRan){completeRan=true;if(res.statusCode.toString().substring(0,1)==("4")){self.logger.error(reqname+" error: "+body);var details=body;if("string"==typeof body){details=textToXML(body);}
if(undefined!=details.nodeType){details=xmlToJson(details);}
(callback_opt||noop)({statusCode:res.statusCode,error:body,inError:true,details:details});}else{var jsonResult={body:body,statusCode:res.statusCode,inError:false};if(options.method=="GET"&&undefined!=body&&""!=body){try{jsonResult.doc=JSON.parse(body);jsonResult.format="json";}catch(err){jsonResult.doc=textToXML(body);jsonResult.format="xml";}}
if(res.statusCode==303){self.logger.debug("303 result headers: "+JSON.stringify(res.headers));var loc=res.headers["location"];if((options.method=="PUT"||options.method=="POST")&&loc!=undefined){jsonResult.location=loc;}}
(callback_opt||noop)(jsonResult);}}};res.on('end',function(){complete();});res.on('close',function(){complete();});res.on("error",function(){completeRan=true;(callback_opt||noop)({statusCode:res.statusCode,error:body,inError:true});});if(options.method=="PUT"||options.method=="DELETE"){complete();}});httpreq.on("error",function(e){completeRan=true;self.logger.debug("__doreq: REQUEST ERROR: "+e);(callback_opt||noop)({inError:true,error:e});});if(undefined!=content&&null!=content){if("string"==typeof(content)){httpreq.write(content);}else if("object"==typeof(content)){if(undefined!=content.nodeType){httpreq.write((new XMLSerializer()).serializeToString(content));}else{httpreq.write(JSON.stringify(content));}}}
httpreq.end();};mljs.prototype.__doreq=function(reqname,options,content,callback_opt){this.logger.debug("__doreq: reqname: "+reqname+", method: "+options.method+", uri: "+options.path);if(undefined==options.host){options.host=this.dboptions.host;}
if(undefined==options.port){options.port=this.dboptions.port;}
if(undefined==options.headers){options.headers={};}else{}
var pos=options.path.indexOf("format=json");if(-1!=pos){if(options.method!=="GET"){if(undefined!==typeof options.headers["Content-type"]){options.headers["Content-type"]="application/json";}}
if(undefined!==typeof options.headers["Accept"]){options.headers["Accept"]="application/json";}}
this.__doreq_impl(reqname,options,content,callback_opt);};mljs.prototype.do=function(options_opt,content_opt,callback_opt){if((callback_opt==undefined)&&(typeof(content_opt)==='function')){callback_opt=content_opt;content_opt=undefined;}
this.__doreq("DO",options_opt,content_opt,callback_opt);};mljs.prototype.exists=function(callback){var options={host:this.dboptions.host,port:this.dboptions.adminport,path:"/v1/rest-apis?database="+encodeURI(this.dboptions.database)+"&format=json",method:"GET"};var self=this;this.__doreq("EXISTS",options,null,function(result){self.logger.debug("EXISTS callback called... "+JSON.stringify(result));if(result.inError){self.logger.debug("exists: inError: "+JSON.stringify(result));result.exists=false;result.inError=false;callback(result);}else{self.logger.debug("Returned rest api info: "+JSON.stringify(result.doc));var ex=false;if(undefined!=result.doc["rest-apis"]&&result.doc["rest-apis"].length>0&&result.doc["rest-apis"][0].database==self.dboptions.database){ex=true;}
self.logger.debug("exists:? "+ex);callback({inError:false,exists:ex});}});};mljs.prototype.test=mljs.prototype.exists;mljs.prototype.create=function(callback_opt){var json={"rest-api":{"name":this.dboptions.database,"database":this.dboptions.database,"modules-database":this.dboptions.database+"-modules",port:this.dboptions.port}};var options={host:this.dboptions.host,port:this.dboptions.adminport,path:'/v1/rest-apis',method:'POST',headers:{"Content-Type":"application/json","Content-Length":JSON.stringify(json).length}};this.__doreq("CREATE",options,json,callback_opt);};mljs.prototype.destroy=function(callback_opt){var self=this;var dodestroy=function(){var getoptions={host:self.dboptions.host,port:self.dboptions.adminport,path:"/v1/rest-apis?database="+encodeURI(self.dboptions.database)+"&format=json",method:"GET"};self.__doreq("DESTROY-EXISTS",getoptions,null,function(result){self.logger.debug("Returned rest api info: "+JSON.stringify(result.doc));var ex=!(undefined==result.doc["rest-apis"]||undefined==result.doc["rest-apis"][0]||self.dboptions.database!=result.doc["rest-apis"][0].database);if(!ex){self.logger.debug("Rest server for database "+this.dboptions.database+" does not exist already. Returning success.");(callback_opt||noop)({inError:false,statusCode:200});}else{var restapi=result.doc["rest-apis"][0].name;var options={host:self.dboptions.host,port:self.dboptions.adminport,path:'/v1/rest-apis/'+encodeURI(restapi)+"?include="+encodeURI("content"),method:'DELETE'};self.__doreq("DESTROY",options,null,callback_opt);}});}
if(undefined!=this.__transaction_id){this.rollbackTransaction(function(result){dodestroy();});}else{dodestroy();}};mljs.prototype.get=function(docuri,options_opt,callback_opt){if(undefined==callback_opt&&typeof(options_opt)==='function'){callback_opt=options_opt;options_opt=undefined;}
var options={path:'/v1/documents?uri='+encodeURI(docuri),method:'GET'};if(undefined!=options_opt&&undefined!=options_opt.path){options.path=this._applyTransformProperties(options_opt.path);}
this.__doreq("GET",options,null,function(result){result.docuri=docuri;(callback_opt||noop)(result);});};mljs.prototype.metadata=function(docuri,callback_opt){var options={path:'/v1/documents?uri='+encodeURI(docuri)+"&format=json&category=metadata",method:'GET'};this.__doreq("METADATA",options,null,function(result){result.docuri=docuri;(callback_opt||noop)(result);});};mljs.prototype.properties=function(docuri,callback_opt){var options={path:'/v1/documents?uri='+encodeURI(docuri)+"&format=json&category=properties",method:'GET'};this.__doreq("PROPERTIES",options,null,function(result){result.docuri=docuri;(callback_opt||noop)(result);});};mljs.prototype.saveProperties=function(docuri,properties,callback_opt){var options={path:'/v1/documents?uri='+encodeURI(docuri)+"&format=json&category=properties",method:'PUT',contentType:"application/json"};this.__doreq("SAVEPROPERTIES",options,properties,function(result){result.docuri=docuri;(callback_opt||noop)(result);});};mljs.prototype.save=function(jsonXmlBinary,docuri_opt,props_opt,callback_opt){if(undefined==callback_opt){if(undefined!=props_opt){if(typeof(props_opt)==='function'){if(typeof(docuri_opt)==='string'){this.logger.debug("json,docuri,,callback");callback_opt=props_opt;props_opt=undefined;}else{this.logger.debug("json,,props,callback");callback_opt=props_opt;props_opt=docuri_opt;docuri_opt=undefined;}}else{this.logger.debug("json,docuri,props,");}}else{if(undefined==docuri_opt){this.logger.debug("json,,,");}else{if(typeof(docuri_opt)=="function"){this.logger.debug("json,,,callback");callback_opt=docuri_opt;docuri_opt=undefined;}else{if(typeof(docuri_opt)==="string"){this.logger.debug("son,docuri,,");}else{this.logger.debug("json,,props,");props_opt=docuri_opt;docuri_opt=undefined;}}}}}else{this.logger.debug("json,docuri,props,callback");}
if(undefined==docuri_opt){docuri_opt=this.__genid();}
var format="json";var contentType=null;var url="/v1/documents?uri="+encodeURI(docuri_opt);if(undefined!=props_opt){if(undefined!=props_opt.collection){var cols=props_opt.collection.split(",");for(var c=0;c<cols.length;c++){url+="&collection="+encodeURI(cols[c]);}}
if(undefined!=props_opt.contentType){format=null;contentType=props_opt.contentType;}
if(undefined!=props_opt.format){format=props_opt.format;}
if(undefined!=props_opt.permissions){for(var p=0;p<props_opt.permissions.length;p++){url+="&perm:"+props_opt.permissions[p].role+"="+props_opt.permissions[p].permission;}}}
var options={path:url,method:'PUT'};if(null!=contentType){options.contentType=contentType;}else{if("object"==typeof jsonXmlBinary){if(undefined!=jsonXmlBinary.nodeType){options.contentType="text/xml";format=null;}else{this.logger.debug("MLJS.save: No contentType specified, falling back to application/json");options.contentType="application/json";format=null;}}else{if("string"==typeof jsonXmlBinary){options.contentType="text/plain";format=null;}else{throw new Exception("Unsupported file save type. Throwing error. typeof: "+(typeof(jsonXmlBinary)));}}}
this.logger.debug("mljs.save(): Content Type now: "+options.contentType);if(undefined!=this.__transaction_id){options.path+="&txid="+encodeURI(this.__transaction_id);}
this.__doreq("SAVE",options,jsonXmlBinary,function(result){result.docuri=docuri_opt;(callback_opt||noop)(result);});};mljs.prototype.merge=function(json,docuri,callback_opt){var self=this;this.get(docuri,function(result){var merged=result.doc;var res={};res=self.__merge(merged,json);self.save(res,docuri,callback_opt);});};mljs.prototype.__merge=function(json1,json2){if(undefined==json1&&undefined!=json2){return json2;}else if(undefined==json2&&undefined!=json1){return json1;}else if(typeof(json1)==='object'&&typeof(json2)==='object'){var merged={};for(var k in json1){if(json1.hasOwnProperty(k)&&'function'!=typeof(json1[k])){merged[k]=json1[k];}}
for(var k in json2){if(json2.hasOwnProperty(k)&&'function'!=typeof(json2[k])){merged[k]=this.__merge(merged[k],json2[k]);}}
return merged;}else if(undefined==json1&&undefined==json2){return undefined;}else{return json2;}}
mljs.prototype.__mergeold=function(json1,json2){if(undefined==json1&&undefined!=json2){return json2;}else if(undefined==json2&&undefined!=json1){return json1;}else if(typeof(json1)==='object'&&typeof(json2)==='object'){var merged={};for(var k in json1){if(json1.hasOwnProperty(k)){merged[k]=json1[k];}}
for(var k in json2){if(json2.hasOwnProperty(k)){merged[k]=this.__merge(merged[k],json2[k]);}}
return merged;}else if(undefined==json1&&undefined==json2){return undefined;}else{return json2;}};mljs.prototype.replaceProperty=function(docuri,elementSelectJSON,content,callback_opt){var s="<rapi:patch xmlns:rapi=\"http://marklogic.com/rest-api\"";if(undefined!=elementSelectJSON.namespaces){for(var i=0,max=elementSelectJSON.namespaces.length;i<max;i++){s+=" xmlns:"+elementSelectJSON.namespaces[i].prefix+"=\""+elementSelectJSON.namespaces[i].ns+"\"";}}
var theContent=content;if(content instanceof object){theContent=this.db.xmlToText(content);}
s+=">";s+="  <rapi:replace-insert context=\""+elementSelectJSON.context+"\" select=\"";s+=elementSelectJSON.select+"\">"+theContent+"</rapi:replace>";s+="</rapi:patch>";var url="/v1/documents?uri="+encodeURI(docuri_opt)+"&category=properties";var options={path:url,method:'POST',contentType:"application/xml",headers:{"X-HTTP-Method-Override":"PATCH"}};if(undefined!=this.__transaction_id){options.path+="&txid="+encodeURI(this.__transaction_id);}
this.__doreq("REPLACEPROPERTY",options,s,function(result){result.docuri=docuri;(callback_opt||noop)(result);});};mljs.prototype.delete=function(docuri,callback_opt){var url='/v1/documents?uri='+encodeURI(docuri);if(undefined!=this.__transaction_id){url+="&txid="+encodeURI(this.__transaction_id);}
var options={path:url,method:'DELETE'};this.__doreq("DELETE",options,null,callback_opt);};mljs.prototype.remove=mljs.prototype.delete;mljs.prototype.collect=function(collection,fields_opt,callback_opt){if(callback_opt==undefined&&typeof(fields_opt)==='function'){callback_opt=fields_opt;fields_opt=undefined;}
var options={path:"/v1/search?collection="+encodeURI(collection)+"&format=json&view=results",method:"GET"};this.__doreq("COLLECT",options,null,callback_opt);};mljs.prototype.list=function(directory,callback_opt){var options={path:"/v1/search?directory="+encodeURI(directory)+"&format=json&view=results",method:"GET"};this.__doreq("LIST",options,null,callback_opt);};mljs.prototype.keyvalue=function(key,value,keytype_opt,callback_opt){if(undefined==callback_opt&&typeof(keytype_opt)==='function'){callback_opt=keytype_opt;keytype_opt=undefined;}
if(undefined==keytype_opt){keytype_opt="key";}
var url="/v1/keyvalue?"+keytype_opt+"="+encodeURI(key)+"&value="+encodeURI(value)+"&format=json";if(undefined!=this.__transaction_id){url+="&txid="+encodeURI(this.__transaction_id);}
var options={path:url,method:"GET"};this.__doreq("KEYVALUE",options,null,callback_opt);};mljs.prototype.search=function(query_opt,options_opt,start_opt,sprops_opt,callback){this.logger.debug("*** start_opt: "+start_opt);if(callback==undefined&&typeof(sprops_opt)==='function'){callback=sprops_opt;sprops_opt=undefined;}else{if(callback==undefined&&typeof(start_opt)==='function'){callback=start_opt;start_opt=undefined;}else{if(callback==undefined&&typeof(options_opt)==='function'){callback=options_opt;options_opt=undefined;}}}
var self=this;var v6func=function(){var content=null;var method="GET";var url="/v1/search?q="+encodeURI(query_opt);if(options_opt!=undefined){if(typeof options_opt==="string"){url+="&options="+encodeURI(options_opt);}}
url=self._applySearchProperties(url,sprops_opt);if(undefined!=start_opt){url+="&start="+start_opt;}
url+="&view=all";if(undefined!=self.__transaction_id){url+="&txid="+encodeURI(self.__transaction_id);}
var options={path:url,method:method};self.__doreq("SEARCHV6",options,content,function(result){(callback||noop)(result);});};this.v7check(v6func,function(){var optionsdoc=self._optionsCache[options_opt||"all"];if(undefined==optionsdoc){v6func();}else{var url="/v1/search?q="+encodeURI(query_opt);url=self._applySearchProperties(url,sprops_opt);if(undefined!=start_opt){url+="&start="+start_opt;}
url+="&view=all";if(undefined!=self.__transaction_id){url+="&txid="+encodeURI(self.__transaction_id);}
var query={search:{options:optionsdoc.options,qtext:query_opt}};var options={path:url,method:"POST"};self.__doreq("SEARCHV7",options,query,function(result){(callback||noop)(result);});}});};mljs.prototype.searchCollection=function(collection_opt,query_opt,options_opt,sprops_opt,callback){if(callback==undefined&&typeof(options_opt)==='function'){if(undefined==sprops_opt){callback=options_opt;options_opt=undefined;}else{callback=sprops_opt;sprops_opt=undefined;}}
var self=this;var v6func=function(){var url="/v1/search?q="+encodeURI(query_opt);if(undefined!=collection_opt){url+="&collection="+encodeURI(collection_opt);}
if(options_opt!=undefined){url+="&options="+encodeURI(options_opt);}
url=self._applySearchProperties(url,sprops_opt);if(undefined!=self.__transaction_id){url+="&txid="+encodeURI(self.__transaction_id);}
var options={path:url,method:"GET"};self.__doreq("SEARCHCOLLECTIONV6",options,null,callback);};this.v7check(v6func,function(){var optionsdoc=self._optionsCache[options_opt];if(undefined==optionsdoc){v6func();}else{var url="/v1/search";var gotQuestionMark=false;if(undefined!=collection_opt){gotQuestionMark=true;url+="?collection="+encodeURI(collection_opt);}
url=self._applySearchProperties(url,sprops_opt);if(undefined!=self.__transaction_id){if(gotQuestionMark){url+="&";}else{url+="?";}
url+="txid="+encodeURI(self.__transaction_id);}
var query={search:{options:optionsdoc.options,qtext:query_opt}};var options={path:url,method:"POST"};self.__doreq("SEARCHCOLLECTIONV7",options,query,callback);}});};mljs.prototype._applyTransformProperties=function(url,sprops_opt){if(undefined!=sprops_opt){if(undefined!=sprops_opt.transform){url+="&transform="+sprops_opt.transform;if(undefined!=sprops_opt.transformParameters){for(var pname in sprops_opt.transformParameters){url+="&trans:"+pname+"="+encodeURI(sprops_opt.transformParameters[pname]);}}}}
return url;};mljs.prototype._applySearchProperties=function(url,sprops_opt){var gotQM=(-1!=url.indexOf("?"));var prepend=function(param){if(gotQM){return"&"+param;}else{gotQM=true;return"?"+param;}};if(undefined!=sprops_opt){if(undefined!=sprops_opt.collection){var cols=sprops_opt.collection.split(",");for(var c=0;c<cols.length;c++){url+=prepend("collection="+encodeURI(cols[c]));}}
if(undefined!=sprops_opt.directory){url+=prepend("directory="+sprops_opt.directory);}
if(undefined!=sprops_opt.transform){url=this._applyTransformProperties(url,sprops_opt);}
if(undefined!=sprops_opt.format){url+=prepend("format="+sprops_opt.format);}else{url+=prepend("format=json");}
if(undefined!=sprops_opt.start_opt){url+=prepend("start="+sprops_opt.start_opt);}
if(undefined!=sprops_opt.start){this.logger.debug("mljs._applySearchProperties: start prop: "+sprops_opt.start);url+=prepend("start="+sprops_opt.start);}}else{url+=prepend("format=json");}
return url;};mljs.prototype.structuredSearch=function(query_opt,options_opt,sprops_opt,callback){if(callback==undefined){if(typeof(options_opt)==='function'){callback=options_opt;options_opt=undefined;}else{if(typeof(sprops_opt)==='function'){callback=sprops_opt;sprops_opt=undefined;}}}
var self=this;var v6func=function(){var url="/v1/search?structuredQuery="+encodeURI(JSON.stringify(query_opt));if(options_opt!=undefined){url+="&options="+encodeURI(options_opt);}
url=self._applySearchProperties(url,sprops_opt);if(undefined!=self.__transaction_id){url+="&txid="+encodeURI(self.__transaction_id);}
var options={path:url,method:"GET"};self.__doreq("STRUCTUREDSEARCHV6",options,null,callback);};this.v7check(v6func,function(){var optionsdoc=self._optionsCache[options_opt||"all"];if(undefined==optionsdoc){v6func();}else{self.combinedQuery(query_opt,null,optionsdoc,sprops_opt,callback);}});};mljs.prototype.structuredQuery=mljs.prototype.structuredSearch;mljs.prototype.combined=function(structuredQuery_opt,textQuery_opt,optionsdoc,sprops_opt,callback){var self=this;var q=structuredQuery_opt||{query:{}};var query={"search":{"query":q.query,"qtext":textQuery_opt,"options":optionsdoc.options}};var url="/v1/search";url=self._applySearchProperties(url,sprops_opt);if(undefined!=self.__transaction_id){url+="&txid="+encodeURI(self.__transaction_id);}
var options={path:url,method:"POST"};self.__doreq("COMBINEDQUERY",options,query,callback);};mljs.prototype.combinedQuery=mljs.prototype.combined;mljs.prototype.combinedSearch=mljs.prototype.combined;mljs.prototype.v7check=function(v6func,v7func){var self=this;var doit=function(){if(null==self._version||false===self._version||self._version.substring(0,self._version.indexOf("."))<7){v6func();}else{v7func();}};if((this._version==null||false===this._version)&&null!=this._forceVersion){this.logger.debug("v7check: Forcing version: "+this._forceVersion);this._version=this._forceVersion;}
if(this._version==null){try{this.version(doit);}catch(err){this.db.logger.debug("mljs.v7check: Failed to get version. Extension not installed? Assume V6.");}}else{doit();}};mljs.prototype.saveSearchOptions=function(name,searchoptions,callback_opt){var options={path:"/v1/config/query/"+name+"?format=json",method:"PUT"};this._optionsCache[name]=searchoptions;this.__doreq("SAVESEARCHOPTIONS",options,searchoptions,callback_opt);};mljs.prototype.saveSearchOptionsCheck=function(name,searchoptions,callback_opt){var self=this;var v6func=function(){self.saveSearchOptions(name,searchoptions,callback_opt);};this.v7check(v6func,function(){self._optionsCache[name]=searchoptions;(callback_opt||noop)({error:false});});};mljs.prototype.searchOptions=function(name,callback){var options={path:"/v1/config/query/"+name+"?format=json",method:"GET"};this.__doreq("SEARCHOPTIONS",options,null,callback);};mljs.prototype.searchoptions=mljs.prototype.searchOptions;mljs.prototype.suggest=function(q,options_opt,additional_properties_opt,callback){var options={path:"/v1/suggest?format=json&partial-q="+encodeURI(q)+"&options="+encodeURI(options_opt),method:"GET"};if(undefined!=additional_properties_opt){for(var name in additional_properties_opt){var val=additional_properties_opt[name];options.path+="&"+name+"="+encodeURI(val);}}
this.__doreq("SUGGEST",options,null,callback);};mljs.prototype.values=function(query,tuplesname,optionsname,sprops_opt,callback_opt){if(undefined==callback_opt&&'function'===typeof(sprops_opt)){callback_opt=sprops_opt;sprops_opt=undefined;}
var self=this;var v6func=function(){var options={path:"/v1/values/"+tuplesname+"?options="+encodeURI(optionsname),method:"GET"};if(typeof query=="string"){options.path+="&q="+encodeURI(query);}else if(typeof query=="object"){options.path+="&structuredQuery="+encodeURI(JSON.stringify(query));}
options.path=self._applySearchProperties(options.path,sprops_opt);self.__doreq("VALUESV6",options,null,callback_opt);};this.v7check(v6func,function(){var optionsdoc=self._optionsCache[optionsname];if(undefined==optionsdoc){v6func();}else{var options={path:"/v1/values/"+tuplesname,method:"POST"};var search={search:{options:optionsdoc.options}};if(typeof query=="string"){search.qtext=query;}else if(typeof query=="object"){search.query=query.query;}
options.path=self._applySearchProperties(options.path,sprops_opt);self.__doreq("VALUESV7",options,search,callback_opt);}});};mljs.prototype.valuesCombined=function(search,callback){var options={path:"/v1/values/shotgun?direction=ascending&view=values",method:"POST"};this.__doreq("VALUESCOMBINED",options,search,callback);};mljs.prototype.collections=function(parenturi_opt,callback){var parenturi="/";if(undefined==callback){callback=parenturi_opt;parenturi_opt=undefined;}
if(undefined!=parenturi_opt){parenturi=parenturi_opt;}
var values={search:{"query":{"collection-query":{uri:[parenturi]}},"options":{"values":[{"name":"childcollectionsvalues","constraint":[{"name":"childcollections","collection":{"prefix":parenturi}}]}]}}};var self=this;this.valuesCombined(values,function(result){self.logger.debug("collection values result: "+JSON.stringify(result));if(result.inError){callback(result);}else{var list=result["values-response"].value;var values=new Array();for(var i=0;i<list.length;i++){values.push(list[i][0]._value);}
result.doc={values:values};callback(result);}});};mljs.prototype.subcollections=mljs.prototype.collections;mljs.prototype.saveGraph=function(triples,uri_opt,callback_opt){if(undefined==callback_opt&&"function"===typeof uri_opt){callback_opt=uri_opt;uri_opt=undefined;}
var options={path:"/v1/graphs",contentType:"text/plain",method:"PUT"}
if(undefined!=uri_opt){options.path+="?graph="+encodeURI(uri_opt);}else{options.path+="?default";}
var graphdoc="";if("object"===typeof triples){for(var i=0;i<triples.length;i++){graphdoc+="<"+triples[i].subject+"> <"+triples[i].predicate+"> ";if(undefined!=triples[i].object){graphdoc+="<"+triples[i].object+">";}else if(undefined!=triples[i].string){graphdoc+="\""+triples[i].string+"\"";if(undefined!=triples[i].locale){graphdoc+="@"+triples[i].locale;}}else if(undefined!=triples[i].number){graphdoc+="\""+triples[i].number+"\"";}else{throw new Exception("Triples does not have an object, string or number value: "+JSON.stringify(triples[i]));}
graphdoc+=" .\n";}}else{graphdoc=triples;}
this.__doreq("SAVEGRAPH",options,graphdoc,callback_opt);};mljs.prototype.mergeGraph=function(triples,uri_opt,callback_opt){if(undefined==callback_opt&&"function"===typeof uri_opt){callback_opt=uri_opt;uri_opt=undefined;}
var options={path:"/v1/graph",contentType:"text/plain",method:"POST"}
if(undefined!=uri_opt){options.path+="?graph="+encodeURI(uri_opt);}else{options.path+="?default";}
var graphdoc="";if("object"===typeof triples){for(var i=0;i<triples.length;i++){graphdoc+="<"+triples[i].subject+"> <"+triples[i].predicate+"> <"+triples[i].object+"> .\n";}}else{graphdoc=triples;}
this.__doreq("MERGEGRAPH",options,graphdoc,callback_opt);};mljs.prototype.graph=function(uri_opt,callback_opt){if(undefined==callback_opt&&"function"===typeof uri_opt){callback_opt=uri_opt;uri_opt=undefined;}
var options={path:"/v1/graph",method:"GET"}
if(undefined!=uri_opt){options.path+="?graph="+encodeURI(uri_opt);}else{options.path+="?default";}
this.__doreq("GETGRAPH",options,null,function(result){if(result.inError){(callback_opt||noop)(result);}else{var lines=result.doc.split("\n");var triples=new Array();var spos,ppos,opos,send,pend,oend,line;for(var l=0;l<lines.length;l++){line=lines[l];spos=line.indexOf("<");send=line.indexOf(">",spos+1);ppos=line.indexOf("<",send+1);pend=line.indexOf(">",ppos+1);opos=line.indexOf("<",pend+1);oend=line.indexOf(">",opos+1);triples.push({subject:line.substring(spos+1,send),predicate:line.substring(ppos+1,pend),object:line.substring(opos+1,oend)});}
result.triples=triples;(callback||noop)(result);}});};mljs.prototype.deleteGraph=function(uri,callback_opt){var options={path:"/v1/graph?graph="+encodeURI(uri),method:"DELETE"};this.__doreq("DELETEGRAPH",options,null,callback_opt);};mljs.prototype.sparql=function(sparql,callback){var options={path:"/v1/graphs/sparql",method:"POST",contentType:"text/plain",headers:[]};options.headers["Accept"]="application/sparql-results+json";this.__doreq("SPARQL",options,sparql,callback);};mljs.prototype.saveTransform=function(name,transformbinary,type,properties_opt,callback){if(undefined==callback&&'function'==typeof(properties_opt)){callback=properties_opt;properties_opt=undefined;}
var type=type||"xslt";if("xslt"==type){type="application/xslt+xml";}else if("xquery"==type){type="application/xquery";}
if("application/xquery"!=type&&"application/xslt+xml"!=type){throw new TypeError("type should be either 'xquery' or 'xslt' or 'application/xquery' or 'application/xslt+xml'");}
var options={path:"/v1/config/transforms/"+encodeURI(name),method:"PUT",contentType:type};var first=true;for(var prop in properties_opt){if(first){options.path+="?";first=false;}else{options.path+="&";}
options.path+=prop+"="+encodeURI(properties_opt[prop]);}
this.__doreq("SAVETRANSFORM",options,transformbinary,callback);};mljs.prototype.deleteTransform=function(name,callback_opt){var options={path:"/v1/config/transforms/"+encodeURI(name),method:"DELETE"};this.__doreq("DELETETRANSFORM",options,null,callback_opt);};mljs.prototype.getTransform=function(name,callback){var options={path:"/v1/config/transforms/"+encodeURI(name),method:"GET"};this.__doreq("GETTRANSFORM",options,null,callback);};mljs.prototype.listTransforms=function(callback){var options={path:"/v1/config/transforms?format=json",method:"GET"};this.__doreq("LISTTRANSFORMS",options,null,callback);};mljs.prototype.beginTransaction=function(name_opt,callback){if(undefined==callback&&typeof(name_opt)==='function'){callback=name_opt;name_opt=undefined;}
if(undefined!=this.__transaction_id){var result={inError:true,error:"This DB instance has an open transaction. Multiple transactions not supported in this version of mljs."};(callback||noop)(result);}else{if(undefined==name_opt){name_opt="client-txn";}
var url="/v1/transactions";if(undefined!=name_opt){url+="?name="+encodeURI(name_opt);}
var options={path:url,method:"POST"};var self=this;this.__doreq("BEGINTRANS",options,null,function(result){if(result.inError){self.__transaction_id=undefined;}else{self.__transaction_id=result.location.substring(17);self.logger.debug("Created transaction id: "+result.location);}
result.txid=self.__transaction_id;(callback||noop)(result);});}};mljs.prototype.begin=mljs.prototype.beginTransaction;mljs.prototype.commitTransaction=function(callback){var options={path:"/v1/transactions/"+this.__transaction_id+"?result=commit",method:"POST"};this.__transaction_id=undefined;this.__doreq("COMMITTRANS",options,null,callback);};mljs.prototype.commit=mljs.prototype.commitTransaction;mljs.prototype.rollbackTransaction=function(callback){var options={path:"/v1/transactions/"+this.__transaction_id+"?result=rollback",method:"POST"};this.__transaction_id=undefined;this.__doreq("ABANDONTRANS",options,null,callback);};mljs.prototype.rollback=mljs.prototype.rollbackTransaction;mljs.prototype.indexes=function(callback){var options={path:"/v1/config/indexes?format=json",method:"GET"};this.__transaction_id=undefined;this.__doreq("INDEXES",options,null,callback);};mljs.prototype.fast=function(callback_opt){this.__fast=true;(callback_opt||noop)({inError:false,fast:true});};mljs.prototype.ingestcsv=function(csvdata,docid_opt,callback_opt){};mljs.prototype.saveAll=function(doc_array,uri_array_opt,callback_opt){if(callback_opt==undefined&&typeof(uri_array_opt)==='function'){callback_opt=uri_array_opt;uri_array_opt=undefined;}
if(undefined==uri_array_opt){uri_array_opt=new Array();for(var i=0;i<doc_array.length;i++){uri_array_opt[i]=this.__genid();}}
var error=null;for(var i=0;null==error&&i<doc_array.length;i++){this.save(doc_array[i],uri_array_opt[i],function(result){if(result.inError){error=result;}});}
if(null==error){(callback_opt||noop)({inError:false,docuris:uri_array_opt});}else{(callback_opt||noop)(error);}};var rv=function(totalruns,maxrunning,start_func,finish_func,complete_func){this.running=0;this.runnercount=0;this.cancelled=false;this.maxrunning=maxrunning;this.sf=start_func;this.ff=finish_func;this.cf=complete_func;this.totalruns=totalruns;};rv.prototype.run=function(){this.cancelled=false;for(var i=0;i<this.maxrunning;i++){this._start();}};rv.prototype.cancel=function(){this.cancelled=true;}
rv.prototype._start=function(){this.running++;var that=this;var mc=this.runnercount++;this.sf(mc,function(mc,result){that.callback(mc,result,that);});};rv.prototype.callback=function(mc,result,that){that.running--;that.ff(mc,result);if(that.runnercount==that.totalruns){that.cf();that.runnercount++;}else if(!that.cancelled&&that.running<that.maxrunning&&that.runnercount<that.totalruns){that._start();}};mljs.prototype.saveAll2=function(doc_array,uri_array_opt,callback_opt){if(callback_opt==undefined&&typeof(uri_array_opt)==='function'){callback_opt=uri_array_opt;uri_array_opt=undefined;}
if(undefined==uri_array_opt){uri_array_opt=new Array();for(var i=0;i<doc_array.length;i++){uri_array_opt[i]=this.__genid();}}
var error=null;var that=this;var start_func=function(mc,callback){that.save(doc_array[mc],uri_array_opt[mc],callback);};var finish_func=function(result){if(result.inError){error=result;}};var complete_func=function(){if(null==error){(callback_opt||noop)({inError:false,docuris:uri_array_opt});}else{(callback_opt||noop)(error);}};var myrv=new rv(doc_array.length,this.dboptions.fastparts,start_func,finish_func,complete_func);myrv.run();};mljs.prototype.saveBasicSearch=function(searchname,shared,query,callback_opt){this._doSaveBasicSearch(searchname,shared,query,"search",null,callback_opt);};mljs.prototype._doSaveBasicSearch=function(searchname,shared,query,createmode,notificationurl,callback_opt){var url="/v1/resources/subscribe?notificationurl="+encodeURI(notificationurl)+"&format=json&searchname="+encodeURI(searchname)+"&create="+encodeURI(createmode)+"&shared="+encodeURI(shared)+"&query="+encodeURI(query)+"&querytype=basic";if("both"==createmode){url+="&notificationurl="+encodeURI(notificationurl);}
var options={path:url,method:"PUT"};this.__doreq("SAVEBASICSEARCH",options,null,callback_opt);};mljs.prototype.saveCollectionSearch=function(searchname,shared,collection,callback_opt){this._doSaveCollectionSearch(searchname,shared,collection,"search",null,callback_opt);};mljs.prototype._doSaveCollectionSearch=function(searchname,shared,collection,createmode,notificationurl,callback_opt){var url="/v1/resources/subscribe?notificationurl="+encodeURI(notificationurl)+"&format=json&searchname="+encodeURI(searchname)+"&create="+encodeURI(createmode)+"&shared="+encodeURI(shared)+"&collection="+encodeURI(collection)+"&querytype=collection";if("both"==createmode){url+="&notificationurl="+encodeURI(notificationurl);}
var options={path:url,method:"PUT"};this.__doreq("SAVECOLLECTIONSEARCH",options,null,callback_opt);};mljs.prototype.saveGeoNearSearch=function(searchname,shared,latitude,longitude,radiusmiles,callback_opt){this._doSaveGeoNearSearch(searchname,shared,latitude,longitude,radiusmiles,"search",null,callback_opt);};mljs.prototype._doSaveGeoNearSearch=function(searchname,shared,latitude,longitude,radiusmiles,createmode,notificationurl,callback_opt){var url="/v1/resources/subscribe?notificationurl="+encodeURI(notificationurl)+"&format=json&searchname="+encodeURI(searchname)+"&create="+encodeURI(createmode)+"&shared="+encodeURI(shared)+"&lat="+encodeURI(latitude)+"&lon="+encodeURI(longitude)+"&radiusmiles="+encodeURI(radiusmiles)+"&querytype=geonear";if("both"==createmode){url+="&notificationurl="+encodeURI(notificationurl);}
var options={path:url,method:"PUT"};this.__doreq("SAVEGEONEARSEARCH",options,null,callback_opt);};mljs.prototype.saveExistingSearch=function(searchname,shared,searchdocuri,callback_opt){this._doSaveExistingSearch(searchname,shared,searchdocuri,"search",null,callback_opt)};mljs.prototype._doSaveExistingSearch=function(searchname,shared,searchdocuri,createmode,notificationurl,callback_opt){var url="/v1/resources/subscribe?notificationurl="+encodeURI(notificationurl)+"&format=json&searchname="+encodeURI(searchname)+"&create="+encodeURI(createmode)+"&shared="+encodeURI(shared)+"&searchdocuri="+encodeURI(searchdocuri)+"&querytype=uri";if("both"==createmode){url+="&notificationurl="+encodeURI(notificationurl);}
var options={path:url,method:"PUT"};this.__doreq("SAVEEXISTINGSEARCH",options,null,callback_opt);};mljs.prototype.subscribe=function(notificationurl,searchname,detail,contenttype,callback_opt){var url="/v1/resources/subscribe?notificationurl="+encodeURI(notificationurl)+"&format=json&searchname="+encodeURI(searchname)+"&detail="+encodeURI(detail)+"&contenttype="+encodeURI(contenttype);var options={path:url,method:"POST"};this.__doreq("SUBSCRIBE",options,null,callback_opt);};mljs.prototype.unsubscribe=function(notificationurl,searchname,callback_opt){var url="/v1/resources/subscribe?notificationurl="+encodeURI(notificationurl)+"&format=json&searchname="+encodeURI(searchname)+"&delete=search";var options={path:url,method:"DELETE"};this.__doreq("UNSUBSCRIBE",options,null,callback_opt);};mljs.prototype.unsubscribeAndDelete=function(notificationurl,searchname,callback_opt){var url="/v1/resources/subscribe?notificationurl="+encodeURI(notificationurl)+"&format=json&searchname="+encodeURI(searchname)+"&delete=both";var options={path:url,method:"DELETE"};this.__doreq("UNSUBSCRIBE",options,null,callback_opt);};mljs.prototype.deleteSavedSearch=function(searchname,callback_opt){var url="/v1/resources/subscribe?format=json&searchname="+encodeURI(searchname)+"&delete=search";var options={path:url,method:"DELETE"};this.__doreq("DELETESAVEDSEARCH",options,null,callback_opt);};mljs.prototype.whoami=function(callback){var options={path:"/v1/resources/whoami",method:"GET"};this.__doreq("WHOAMI",options,null,callback);};mljs.prototype.dlsdeclare=function(uri_or_uris,collection,callback){};mljs.prototype.dlscollections=function(callback){var options={path:"/v1/resources/dls",method:"GET"};this.__doreq("DLSCOLLECTIONS",options,null,callback);};mljs.prototype.dlscollection=function(collection,callback){var options={path:"/v1/resources/dls?rs:collection="+encodeURI(collection),method:"GET"};this.__doreq("DLSCOLLECTION",options,null,callback);};mljs.prototype.dlsrules=function(callback){var options={path:"/v1/resources/dlsrules",method:"GET"};this.__doreq("DLSRULES",options,null,callback);};mljs.prototype.dlsrule=function(name,callback){var options={path:"/v1/resources/dlsrules?rs:rulename="+encodeURI(name),method:"GET"};this.__doreq("DLSRULE",options,null,callback);};mljs.prototype.version=function(callback){var options={path:"/v1/resources/version",method:"GET",headers:{Accept:"application/json"}};var that=this;this.__doreq("VERSION",options,null,function(result){if(!result.inError){that._version=result.doc.version;}else{that._version=false;}
callback(result);});};mljs.prototype.getVersion=function(){return this._version;};mljs.prototype.samListSchema=function(samurl,callback){var options={path:"/v1/resources/rdb2rdf?rs:samurl="+encodeURI(samurl),method:"GET",headers:{Accept:"application/json"}};this.__doreq("SAMLISTSCHEMA",options,null,callback);};mljs.prototype.samSchemaInfo=function(samurl,schema,callback){var options={path:"/v1/resources/rdb2rdf?rs:samurl="+encodeURI(samurl)+"&rs:schema="+encodeURI(schema),method:"GET",headers:{Accept:"application/json"}};this.__doreq("SAMSCHEMAINFO",options,null,callback);};mljs.prototype.samRdb2Rdf=function(config,callback){var options={path:"/v1/resources/rdb2rdf",method:"POST",headers:{Accept:"application/json"}};this.__doreq("SAMRDB2RDF",options,config,callback);};mljs.prototype.createOptions=function(name,callback){var obj=new this.options(name,callback);obj.db=this;return obj;};mljs.prototype.createQuery=function(){var obj=new this.query();obj.db=this;return obj;};mljs.prototype.createSearchContext=function(){var obj=new this.searchcontext();obj.db=this;return obj;};mljs.prototype.createGeoContext=function(){var obj=new this.geocontext();obj.db=this;return obj;};mljs.prototype.createDocumentContext=function(){var obj=new this.documentcontext();obj.db=this;return obj;};mljs.prototype.createTripleConfig=function(){var obj=new com.marklogic.semantic.tripleconfig();obj.db=this;return obj;};mljs.prototype.createSemanticContext=function(){var obj=new this.semanticcontext();obj.db=this;return obj;};mljs.prototype.options=function(){this.options={};this.options["concurrency-level"]=undefined;this.options.debug=false;this.options["extract-metadata"]=undefined;this.options.forest=undefined;this.options["fragment-scope"]=undefined;this.options["searchable-expression"]=undefined;this.options.term=undefined;this.options.tuples=undefined;this.options.values=undefined;this.JSON="http://marklogic.com/xdmp/json/basic";this.defaults={};this.defaults.datatype="xs:string";this.defaults.collation="http://marklogic.com/collation/";this.defaults.namespace="http://marklogic.com/xdmp/json/basic";this.defaults.sortDirection="ascending";this.defaults.facetOption=undefined;this.text={};this.text.facets={};};mljs.prototype.options.prototype.setFacetValueStrings=function(facetname,valuehash){this.text.facets[facetname]=valuehash;};mljs.prototype.options.prototype.getFacetValueString=function(facetname,facetvalue){var fvs=this.text.facets[facetname];if(undefined!=fvs){var val=fvs[facetvalue];return val;}else{return null;}};mljs.prototype.options.prototype._includeSearchDefaults=function(){if(undefined==this.options["page-length"]||undefined==this.options.constraint){if(undefined==this.options["transform-results"]||undefined==this.options["transform-results"].apply){this.options["transform-results"]={apply:"raw"};}
this.options.constraint=new Array();this.options["default-suggestion-source"]=new Array();this.options["additional-query"]=new Array();this.options.grammar=undefined;this.options.operator=new Array();this.options["page-length"]=10;this.options["quality-weight"]=undefined;this.options["return-metrics"]=true;this.options["return-qtext"]=true;this.options["return-query"]=false;this.options["return-results"]=true;this.options["return-similar"]=false;this.options["search-option"]=new Array();this.options["sort-order"]=new Array();this.options["suggestion-source"]=new Array();this._buckets={};this._computedBuckets={};this.sortOrderScore();}};mljs.prototype.options.prototype._findConstraint=function(cname){var con=null;this.__d("checking "+this.options.constraint.length+" constraints");for(var i=0,max=this.options.constraint.length,c;i<max;i++){c=this.options.constraint[i];this.__d("Checking constraint with name: "+c.name);if(c.name==cname){this.__d("Name matches: "+cname+"!!!");return c;}}
return null;};mljs.prototype.options.prototype.toJson=function(){for(var cname in this._buckets){var buckets=this._buckets[cname];var constraint=this._findConstraint(cname);var nb=[];for(var i=0,max=buckets._list.length,bucket;i<max;i++){bucket=buckets._list[i];nb[i]=bucket;}
constraint.range.bucket=nb;}
for(var cname in this._computedBuckets){var buckets=this._computedBuckets[cname];var constraint=this._findConstraint(cname);var nb=[];for(var i=0,max=buckets._list.length,bucket;i<max;i++){bucket=buckets._list[i];nb[i]=bucket;}
constraint.range["computed-bucket"]=nb;}
return{options:this.options};};mljs.prototype.options.prototype.additionalQuery=function(str){this._includeSearchDefaults();this.options["additional-query"]=str;return this;};mljs.prototype.options.prototype.noDLSVersions=function(){this._includeSearchDefaults();this.options["additional-query"]="<cts:or-query xmlns:cts='http://marklogic.com/cts'><cts:not-query><cts:or-query><cts:properties-query><cts:registered-query><cts:id>17524193535823153377</cts:id></cts:registered-query></cts:properties-query>  <cts:properties-query><cts:not-query><cts:element-value-query><cts:element xmlns:dls='http://marklogic.com/xdmp/dls'>dls:annotation</cts:element></cts:element-value-query> </cts:not-query></cts:properties-query></cts:or-query></cts:not-query><cts:properties-query><cts:registered-query><cts:id>17524193535823153377</cts:id></cts:registered-query></cts:properties-query></cts:or-query>";return this;};mljs.prototype.options.prototype.concurrencyLevel=function(level){this.options["concurrency-level"]=level;return this;};mljs.prototype.options.prototype.debug=function(dbg){this.options.debug=dbg;return this;};mljs.prototype.options.prototype.forest=function(forests){if(Array.isArray(forests)){this.options.forest=forests;}else{this.options.forest=[forest];}
return this;};mljs.prototype.options.prototype.fragmentScope=function(scope){this.options["fragment-scope"]=scope;return this;};mljs.prototype.options.prototype.qualityWeight=function(weight){this.options["quality-weight"]=weight;return this;};mljs.prototype.options.prototype.returnAggregates=function(ret){if(undefined==ret){ret=true;}
this.options["return-aggregates"]=ret;return this;};mljs.prototype.options.prototype.returnConstraints=function(ret){if(undefined==ret){ret=true;}
this.options["return-constraints"]=ret;return this;};mljs.prototype.options.prototype.returnFacets=function(ret){if(undefined==ret){ret=true;}
this.options["return-facets"]=ret;return this;};mljs.prototype.options.prototype.returnFrequencies=function(ret){if(undefined==ret){ret=true;}
this.options["return-frequencies"]=ret;return this;};mljs.prototype.options.prototype.returnMetrics=function(ret){if(undefined==ret){ret=true;}
this.options["return-metrics"]=ret;return this;};mljs.prototype.options.prototype.returnPlan=function(ret){if(undefined==ret){ret=true;}
this.options["return-plan"]=ret;return this;};mljs.prototype.options.prototype.returnQtext=function(ret){if(undefined==ret){ret=true;}
this.options["return-qtext"]=ret;return this;};mljs.prototype.options.prototype.returnQuery=function(ret){if(undefined==ret){ret=true;}
this.options["return-query"]=ret;return this;};mljs.prototype.options.prototype.returnResults=function(ret){if(undefined==ret){ret=true;}
this.options["return-results"]=ret;return this;};mljs.prototype.options.prototype.returnSimilar=function(ret){if(undefined==ret){ret=true;}
this.options["return-similar"]=ret;return this;};mljs.prototype.options.prototype.returnValues=function(ret){if(undefined==ret){ret=true;}
this.options["return-values"]=ret;return this;};mljs.prototype.options.prototype.defaultCollation=function(col){this.defaults.collation=col;return this;};mljs.prototype.options.prototype.defaultSortOrder=function(sort){this.defaults.sortDirection=sort;return this;};mljs.prototype.options.prototype.defaultType=function(type){this.defaults.datatype=type;return this;};mljs.prototype.options.prototype.defaultNamespace=function(ns){this.defaults.namespace=ns;return this;};mljs.prototype.options.prototype.thesaurusConstraint=function(constraint_name,annotation_opt,additional_properties_opt){this.customConstraint(constraint_name||"thes","parse","http://marklogic.com/xdmp/thesaurus","/app/models/lib-thesaurus.xqy",null,null,null,null,null,null,annotation_opt,additional_properties_opt);return this;};mljs.prototype.options.prototype.extractJsonMetadata=function(strings){this.options["extract-metadata"]=this.options["extract-metadata"]||{};if(!Array.isArray(strings)){strings=[strings];}
var news=[];if(undefined!=this.options["extract-metadata"]["json-key"]){for(var i=0;i<this.options["extract-metadata"]["json-key"].length;i++){news.push(this.options["extract-metadata"]["json-key"][i]);}}
for(var i=0;i<strings.length;i++){news.push(strings[i]);}
this.options["extract-metadata"]["json-key"]=news;return this;};mljs.prototype.options.prototype.extractConstraintMetadata=function(constraint_name){this.options["extract-metadata"]=this.options["extract-metadata"]||{};if(undefined==this.options["extract-metadata"]["constraint-value"]){this.options["extract-metadata"]["constraint-value"]=[];}
this.options["extract-metadata"]["constraint-value"].push({"ref":constraint_name});return this;};mljs.prototype.options.prototype.extractElementMetadata=function(elementname,elementns){this.options["extract-metadata"]=this.options["extract-metadata"]||{};if(undefined==this.options["extract-metadata"]["qname"]){this.options["extract-metadata"]["qname"]=[];}
this.options["extract-metadata"]["qname"].push({"elem-ns":elementns,"elem-name":elementname});return this;};mljs.prototype.options.prototype.extractAttributeMetadata=function(elementname,elementns,attributename,attributens_opt){this.options["extract-metadata"]=this.options["extract-metadata"]||{};if(undefined==this.options["extract-metadata"]["qname"]){this.options["extract-metadata"]["qname"]=[];}
this.options["extract-metadata"]["qname"].push({"elem-ns":elementns,"elem-name":elementname,"attr-ns":attributens_opt||elementns,"attr-name":attributename});return this;};mljs.prototype.options.prototype.elementQuery=function(constraint_name,elementname,elementns,annotation_opt){this._includeSearchDefaults();var con={name:constraint_name,"element-query":{name:elementname,ns:elementns}};if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
this.addConstraint(con);return this;};mljs.prototype.options.prototype.customConstraint=function(constraint_name,parsefunction,parsenamespace,parselibrary,startfunction,startnamespace,startlibrary,finishfunction,finishnamespace,finishlibrary,annotation_opt,additional_properties_opt){this._includeSearchDefaults();var con={name:constraint_name,"custom":{}};if(null!=parsefunction){con.custom.parse={apply:parsefunction,ns:parsens,at:parselibrary};}
if(null!=startfunction){con.custom.start={apply:startfunction,ns:startns,at:startlibrary};}
if(null!=finishfunction){con.custom.finish={apply:finishfunction,ns:finishns,at:finishlibrary};}
if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
for(var n in additional_properties_opt){con["custom"][n]=additional_properties_opt[n];}
this.addConstraint(con);this.suggest(constraint_name);return this;};mljs.prototype.options.prototype.pathConstraint=function(constraint_name,xpath,namespaces,type_opt,collation_opt,facet_opt,facet_options_opt,annotation_opt){var range={name:constraint_name,range:{type:type_opt||this.defaults.datatype,"path-index":{text:xpath,namespaces:namespaces}}};if("xs:string"==type_opt){range.range.collation=collation_opt||this.defaults.collation;}
if(undefined!=facet_opt||undefined!=facet_options_opt){range.range.facet=facet_opt||true;}
if(undefined!=facet_options_opt){range.range["facet-option"]=facet_options_opt;}
if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
range.annotation=annotation_opt;}
this.addConstraint(range);this.suggest(constraint_name);return this;};mljs.prototype.options.prototype.path=mljs.prototype.options.prototype.pathConstraint;mljs.prototype.options.prototype.elemattrRangeConstraint=function(constraint_name,element,namespace,attr,type_opt,collation_opt,facet_opt,facet_options_opt,annotation_opt){var range={name:constraint_name,range:{type:type_opt||this.defaults.datatype,element:{name:element,ns:namespace||this.defaults.namespace},attribute:{name:attr,ns:namespace||this.defaults.namespace}}};if("xs:string"==type_opt){range.collation=collation_opt||this.defaults.collation;}
if(undefined!=facet_opt||undefined!=facet_options_opt){range.range.facet=true;}
if(undefined!=facet_options_opt){range.range["facet-option"]=facet_options_opt;}
if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
range.annotation=annotation_opt;}
var elspec={element:range.range.element.name,elementns:range.range.element.ns,attribute:range.range.attribute.name,attributens:range.range.attribute.ns}
this.sortOrder(this.defaultSortDirection,type_opt||this.defaults.datatype,elspec,collation_opt||this.defaults.collation);this.addConstraint(range);this.suggest(constraint_name);return this;};mljs.prototype.options.prototype.jsonRangeConstraint=function(name_or_key,type_opt,collation_opt,facet_opt,facet_options_opt,fragmentScope_opt,annotation_opt){if(Array.isArray(type_opt)){facet_options_opt=type_opt;type_opt=undefined;}else if(Array.isArray(collation_opt)){facet_options_opt=collation_opt;collation_opt=undefined;}else if(Array.isArray(facet_opt)){facet_options_opt=facet_opt;facet_opt=undefined;}
return this.rangeConstraint(name_or_key,name_or_key,"http://marklogic.com/xdmp/json/basic",type_opt||"xs:string",collation_opt,facet_opt||true,facet_options_opt,fragmentScope_opt,annotation_opt);};mljs.prototype.options.prototype.rangeConstraint=function(constraint_name_opt,name_or_key,ns_opt,type_opt,collation_opt,facet_opt,facet_options_opt,fragmentScope_opt,annotation_opt){this._includeSearchDefaults();if(undefined==name_or_key){if(undefined!=constraint_name_opt){name_or_key=constraint_name_opt;}}
if(undefined==constraint_name_opt){constraint_name_opt=name_or_key;}
var thens=ns_opt;if(undefined==ns_opt){thens=this.defaults.namespace;}
var thetype=type_opt;if(undefined==type_opt){thetype=this.defaults.datatype;}
this.__d("rangeConstraint(): cName: "+constraint_name_opt+", name_or_key: "+name_or_key+", ns_opt: "+ns_opt+", type_opt: "+type_opt+", collation_opt: "+collation_opt+", facet_opt: "+facet_opt+", facet_options_opt: "+facet_options_opt);var range={name:constraint_name_opt,range:{type:thetype,element:{name:name_or_key,ns:thens}}};if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
range.annotation=annotation_opt;}
if(range.range.type=="xs:string"){range.range.collation=collation_opt||this.defaults.collation;}
if((undefined!=facet_opt&&true===facet_opt)||undefined!=facet_options_opt){range.range.facet=true;}
if(undefined!=facet_options_opt){range.range["facet-option"]=facet_options_opt;}
if(undefined!=fragmentScope_opt){range.range["fragment-scope"]=fragmentScope_opt;}
var elspec=name_or_key;if(undefined!=ns_opt){elspec={element:range.range.element.name,elementns:range.range.element.ns};}
this.sortOrder("ascending",type_opt||this.defaults.datatype,elspec,collation_opt||this.defaults.collation);this.sortOrder("descending",type_opt||this.defaults.datatype,elspec,collation_opt||this.defaults.collation);this.addConstraint(range);this.suggest(constraint_name_opt);return this;};mljs.prototype.options.prototype.range=mljs.prototype.options.prototype.rangeConstraint;mljs.prototype.options.prototype.valueConstraint=function(constraint_name_opt,name_or_key,ns_opt,fragmentScope_opt,annotation_opt){this._includeSearchDefaults();if(undefined==name_or_key){if(undefined!=constraint_name_opt){name_or_key=constraint_name_opt;}}
if(undefined==constraint_name_opt){constraint_name_opt=name_or_key;}
var thens=ns_opt;if(undefined==ns_opt){thens=this.defaults.namespace;}
var con={name:constraint_name_opt,value:{element:{name:name_or_key,ns:thens}}};if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
if(undefined!=fragmentScope_opt){con.value["fragment-scope"]=fragmentScope_opt;}
this.__d("valueConstraint(): Constraint JSON: "+JSON.stringify(con));this.addConstraint(con);return this;};mljs.prototype.options.prototype.value=mljs.prototype.options.prototype.valueConstraint;mljs.prototype.options.prototype.fieldRangeConstraint=function(constraint_name,name,type_opt,collation_opt,facet_opt,facet_options_opt,fragmentScope_opt,annotation_opt){var range={name:constraint_name,range:{type:type_opt||this.defaults.datatype,field:{name:name},collation:collation_opt||this.defaults.collation}};if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
range.annotation=annotation_opt;}
if((undefined!=facet_opt&&true===facet_opt)||undefined!=facet_options_opt){range.range.facet=true;}
if(undefined!=facet_options_opt){range.range["facet-option"]=facet_options_opt;}
if(undefined!=fragmentScope_opt){range.range["fragment-scope"]=fragmentScope_opt;}
var elspec={field:range.range.field.name,collation:range.range.collation};this.sortOrder("ascending",type_opt||this.defaults.datatype,elspec,collation_opt||this.defaults.collation);this.sortOrder("descending",type_opt||this.defaults.datatype,elspec,collation_opt||this.defaults.collation);this.addConstraint(range);this.suggest(constraint_name);return this;};mljs.prototype.options.prototype.field=mljs.prototype.options.prototype.fieldRangeConstraint;mljs.prototype.options.prototype.buckets=function(constraint_name){var bs={_list:new Array(),bucket:function(ge,lt,name_opt,label_opt){var b={lt:lt,ge:ge};b.name=name_opt||(ge+"-"+lt);b.label=label_opt||b.name;bs._list.push(b);return bs;}};this._buckets[constraint_name]=bs;return bs;};mljs.prototype.options.prototype.annotate=function(constraint_name,annotation){if("string"==typeof(annotation)){annotation=[annotation];}
this._findConstraint(constraint_name).annotation=annotation;return this;};mljs.prototype.options.prototype.computedBuckets=function(constraint_name){var bs={_list:new Array(),bucket:function(ge,lt,anchor,name_opt,label_opt){var b={lt:lt,ge:ge,anchor:anchor};b.name=name_opt||(ge+"-"+lt);b.label=label_opt||b.name;bs._list.push(b);return bs;}};this._computedBuckets[constraint_name]=bs;return bs;};mljs.prototype.options.prototype.addConstraint=function(con){if(undefined==this.options.constraint){this.options.constraint=new Array();this._includeSearchDefaults();}
this.options.constraint.push(con);};mljs.prototype.options.prototype.collectionConstraint=function(constraint_name_opt,prefix_opt,facet_option_opt,annotation_opt){this._includeSearchDefaults();var con={name:constraint_name_opt||"collection",collection:{}};if(undefined!=prefix_opt&&null!=prefix_opt){con.collection.prefix=prefix_opt;}else{con.collection.prefix="";}
if(undefined!=facet_option_opt&&null!=facet_option_opt){con.collection["facet-option"]=facet_option_opt;}else if(undefined!=this.defaults.facetOption){con.collection["facet-option"]=this.defaults.facetOption;}
if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
this.addConstraint(con);return this;};mljs.prototype.options.prototype.collection=mljs.prototype.options.prototype.collectionConstraint;mljs.prototype.options.prototype.geoElementConstraint=function(constraint_name,parent,ns_opt,element,ns_el_opt,annotation_opt,additional_properties_opt){this._includeSearchDefaults();if(undefined==element){if(undefined==ns_opt){element=parent;parent=constraint_name;constraint_name_opt=undefined;}else{element=ns_opt;ns_opt=parent;parent=constraint_name;constraint_name_opt=undefined;}}
var con={name:constraint_name,"geo-elem":{parent:{ns:ns_opt||this.defaults.namespace,name:parent},element:{ns:ns_el_opt||this.defaults.namespace,name:element}}};if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
for(var n in additional_properties_opt){con["geo-elem"][n]=additional_properties_opt[n];}
this.addConstraint(con);return this;};mljs.prototype.options.prototype.geoelem=mljs.prototype.options.prototype.geoElementConstraint;mljs.prototype.options.prototype.geoelemConstraint=mljs.prototype.options.prototype.geoElementConstraint;mljs.prototype.options.prototype.geoElementPairConstraint=function(constraint_name,parentelement,parentns,latelement,latns,lonelement,lonns,heatmap_opt,geo_options_opt,facet_opt,facet_options_opt,annotation_opt,additional_properties_opt){var con={name:constraint_name,"geo-elem-pair":{parent:{name:parentelement,ns:parentns},lat:{name:latelement,ns:latns},lon:{name:lonelement,ns:lonns}}};if(undefined!=heatmap_opt&&null!=heatmap_opt){con["geo-elem-pair"].heatmap=heatmap_opt;}
if(undefined!=geo_options_opt){con["geo-elem-pair"]["geo-option"]=geo_options_opt;}
if(undefined!=facet_opt&&true===facet_opt){}
if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
for(var n in additional_properties_opt){con["geo-elem-pair"][n]=additional_properties_opt[n];}
this.addConstraint(con);return this;};mljs.prototype.options.prototype.geoelempair=mljs.prototype.options.prototype.geoElementPairConstraint;mljs.prototype.options.prototype.geoElemPair=mljs.prototype.options.prototype.geoElementPairConstraint;mljs.prototype.options.prototype.geoAttributePairConstraint=function(constraint_name,parentelement,parentns,latattr,latns,lonattr,lonns,heatmap_opt,geo_options_opt,facet_opt,facet_options_opt,annotation_opt,additional_properties_opt){var con={name:constraint_name,"geo-attr-pair":{parent:{name:parentelement,ns:parentns},lat:{name:latattr,ns:latns},lon:{name:lonattr,ns:lonns}}};if(undefined!=heatmap_opt&&null!=heatmap_opt){con["geo-attr-pair"].heatmap=heatmap_opt;}
if(undefined!=geo_options_opt){con["geo-attr-pair"]["geo-option"]=geo_options_opt;}
if(undefined!=facet_opt&&true===facet_opt){}
if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
for(var n in additional_properties_opt){con["geo-attr-pair"][n]=additional_properties_opt[n];}
this.addConstraint(con);return this;};mljs.prototype.options.prototype.geoattr=mljs.prototype.options.prototype.geoAttributePairConstraint;mljs.prototype.options.prototype.geoattrpair=mljs.prototype.options.prototype.geoAttributePairConstraint;mljs.prototype.options.prototype.geoPathConstraint=function(constraint_name,path,namespace_json,annotation_opt,additional_properties_opt){var con={name:constraint_name,"geo-path":{"path-index":{text:path,namespaces:namespace_json}}};if(undefined!=annotation_opt){if("string"==typeof(annotation_opt)){annotation_opt=[annotation_opt];}
con.annotation=annotation_opt;}
for(var n in additional_properties_opt){con["geo-path"][n]=additional_properties_opt[n];}
this.addConstraint(con);return this;};mljs.prototype.options.prototype.geoPath=mljs.prototype.options.prototype.geoPathConstraint;mljs.prototype.options.prototype.geopath=mljs.prototype.options.prototype.geoPathConstraint;mljs.prototype.options.prototype.propertiesConstraint=function(constraint_name_opt){var con={name:"just-props","properties":null};if(undefined!=constraint_name_opt){con.name=constraint_name_opt;}
this.addConstraint(con);this.suggest(constraint_name_opt);return this;};mljs.prototype.options.prototype.properties=mljs.prototype.options.prototype.propertiesConstraint;mljs.prototype.options.prototype._includeGrammar=function(){if(undefined==this.options.grammar){this.options.grammar={starter:[],joiner:[],quotation:"\"","implicit":"<cts:and-query strength=\"20\" xmlns=\"http:\/\/marklogic.com\/appservices\/search\" xmlns:cts=\"http:\/\/marklogic.com\/cts\"\/>"};}};mljs.prototype.options.prototype.starter=function(label,apply,strength,additional_properties_opt){this._includeGrammar();var st={label:label,apply:apply,strength:strength};for(var n in additional_properties_opt){st[n]=additional_properties_opt[n];}
this.options.grammar.start.push(st);return this;};mljs.prototype.options.prototype.prefix=function(label,element,strength,additional_properties_opt){var json={"element":element};for(var n in additional_properties_opt){json[n]=additional_properties_opt[n];}
return this.starter(label,"prefix",strength,json);};mljs.prototype.options.prototype.grouping=function(label,delimiter,strength,additional_properties_opt){var json={"delimiter":delimiter};for(var n in additional_properties_opt){json[n]=additional_properties_opt[n];}
return this.starter(label,"grouping",strength,json);};mljs.prototype.options.prototype.joiner=function(label,apply,strength,additional_properties_opt){this._includeGrammar();var joiner={label:label,apply:apply,strength:strength};for(var n in additional_properties_opt){joiner[n]=additional_properties_opt[n];}
this.options.grammar.joiner.push(joiner);return this;};mljs.prototype.options.prototype.quotation=function(quotation){this._includeGrammar();this.options.grammar.quotation=quotation;return this;};mljs.prototype.options.prototype.implicit=function(ctsquery){this._includeGrammar();this.options.grammar.implicit=ctsquery;return this;};mljs.prototype.options.prototype.implicitAnd=function(){return this.implicit("<cts:and-query strength=\"20\" xmlns=\"http:\/\/marklogic.com\/appservices\/search\" xmlns:cts=\"http:\/\/marklogic.com\/cts\"\/>");};mljs.prototype.options.prototype.implicitOr=function(){return this.implicit("<cts:or-query strength=\"20\" xmlns=\"http:\/\/marklogic.com\/appservices\/search\" xmlns:cts=\"http:\/\/marklogic.com\/cts\"\/>");};mljs.prototype.options.prototype.searchOptions=function(searchOptions){this._includeSearchDefaults();if(!Array.isArray(searchOptions)){searchOptions=[searchOptions];}
this.options["search-option"]=searchOptions;return this;};mljs.prototype.options.prototype.searchableExpression=function(xpath,namespace_json){this._includeSearchDefaults();this.options["searchable-expression"]={text:path,namespaces:namespace_json};return this;};mljs.prototype.options.prototype.pageLength=function(length){this._includeSearchDefaults();this.options["page-length"]=length;return this;};mljs.prototype.options.prototype.transformResults=function(apply,ns_opt,at_opt){this._includeSearchDefaults();this.options["transform-results"].apply=apply;if(undefined!=ns_opt&&undefined!=at_opt){this.options["transform-results"].ns=ns_opt;this.options["transform-results"].at=at_opt;}
return this;};mljs.prototype.options.prototype.raw=function(){this._includeSearchDefaults();this.options["transform-results"].apply="raw";this.options["transform-results"].ns=undefined;this.options["transform-results"].at=undefined;return this;};mljs.prototype.options.prototype.snippet=function(ns_opt,at_opt,additional_opt){this._includeSearchDefaults();this.options["transform-results"].apply="snippet";this.options["transform-results"].ns=ns_opt;this.options["transform-results"].at=at_opt;if(undefined!=additional_opt){for(var p in additional_opt){this.options["transform-results"][p]=additional_opt[p];}}
return this;};mljs.prototype.options.prototype.empty=function(){this._includeSearchDefaults();this.options["transform-results"].apply="empty-snippet";this.options["transform-results"].ns=undefined;this.options["transform-results"].at=undefined;return this;};mljs.prototype.options.prototype.metadata=function(){this._includeSearchDefaults();this.options["transform-results"].apply="metadata-snippet";this.options["transform-results"].ns=undefined;this.options["transform-results"].at=undefined;return this;};mljs.prototype.options.prototype.sortOrderClear=function(){this._includeSearchDefaults();this.options["sort-order"]=new Array();return this;};mljs.prototype.options.prototype.sortOrderScore=function(){this._includeSearchDefaults();this.options["sort-order"].push({"direction":"descending",score:null,"annotation":["Relevancy (Desc)"]});return this;};mljs.prototype.options.prototype.relevance=mljs.prototype.options.prototype.sortOrderScore;mljs.prototype.options.prototype.searchableExpression=function(expression,namespaces_opt){this._includeSearchDefaults();this.options["searchable-expression"]={text:expression};if(undefined!=namespaces_opt){this.options["searchable-expression"].namespaces=namespaces_opt;}
return this;};mljs.prototype.options.prototype.sortOrder=function(direction_opt,type_opt,keyOrJSON,collation_opt){this._includeSearchDefaults();var so={direction:direction_opt||this.defaults.sortDirection,type:type_opt||this.defaults.datatype};if("string"===typeof(keyOrJSON)){so["json-key"]=keyOrJSON;}else{if(undefined!=keyOrJSON.element){so["element"]={name:keyOrJSON.element};if(undefined!=keyOrJSON.elementns){so["element"].ns=keyOrJSON.elementns;}else{so["element"].ns=this.defaults.namespace;}}
if(undefined!=keyOrJSON.attribute){so["attribute"]={name:keyOrJSON.attribute};if(undefined!=keyOrJSON.attributens){so["attribute"].ns=keyOrJSON.attributens||so["element"].ns;}else{so["attribute"].ns="";}}
if(undefined!=keyOrJSON.field){so["field"]={name:keyOrJSON.field,collation:keyOrJSON.collation};}
if(undefined!=keyOrJSON.key){so["json-key"]=keyOrJSON.key;}
if(undefined!=keyOrJSON.annotation){if("string"==typeof(keyOrJSON.annotation)){so["annotation"]=[keyOrJSON.annotation];}else{so["annotation"]=keyOrJSON.annotation;}}}
if("xs:string"==type_opt){so.collation=collation_opt||this.defaults.collation;}
this.options["sort-order"].push(so);return this;};mljs.prototype.options.prototype._quickRange=function(el){if(typeof el=="string"){return{type:this.defaults.datatype,element:{ns:this.defaults.namespace,name:el}};}else{return el;}};mljs.prototype.options.prototype.tuples=function(name){var tuples={name:name,range:new Array()};if(undefined==this.options.tuples){this.options.tuples=new Array();}
for(var i=1;i<arguments.length;i++){tuples.range.push(this._quickRange(arguments[i]));}
this.options.tuples.push(tuples);return this;};mljs.prototype.options.prototype.values=function(name){var values={name:name,range:new Array()};this.options["return-values"]=true;if(undefined==this.options.values){this.options.values=new Array();}
for(var i=1;i<arguments.length;i++){values.range.push(this._quickRange(arguments[i]));}
this.options.values.push(values);return this;};mljs.prototype.options.prototype.suggest=function(constraint,options_opt){this.options["suggestion-source"].push({ref:constraint,"suggestion-option":options_opt});};mljs.prototype.query=function(){this._query={};this.defaults={};};mljs.prototype.query.prototype.toJson=function(){return{query:this._query};};mljs.prototype.query.prototype.query=function(query_opt){for(var name in query_opt){this._query[name]=query_opt[name];}
return this;};mljs.prototype.query.prototype.and=function(query_opt){if(Array.isArray(query_opt)){return{"and-query":query_opt};}else{return{"and-query":[query_opt]};}};mljs.prototype.query.prototype.or=function(query_opt){if(Array.isArray(query_opt)){return{"or-query":query_opt};}else{return{"or-query":[query_opt]};}};mljs.prototype.query.prototype.collection=function(uri_opt,depth_opt){if(undefined==uri_opt){return{"collection-query":{uri:""}};}else if("string"==typeof uri_opt){return{"collection-query":{uri:uri_opt}}}else if(Array.isArray(uri_opt)){}else{this.__d("WARNING: query.collection(): uri_opt not an array or string, but instead a '"+(typeof uri_opt)+"'");}
return undefined;};mljs.prototype.query.prototype.geoRadius=function(constraint_name,lat,lon,radius,radiusmeasure_opt){var self=this;var circ=this.circleDef(lat,lon,radius,radiusmeasure_opt);return{"geospatial-constraint-query":{"constraint-name":constraint_name,"circle":circ.circle}}};mljs.prototype.query.prototype.georadius=mljs.prototype.query.prototype.geoRadius;mljs.prototype.query.prototype.circleDef=function(lat,lon,radius,radiusmeasure_opt){var radiusactual=this._convertRadius(radius,radiusmeasure_opt);return{"circle":{"radius":radiusactual,point:[{"latitude":lat,"longitude":lon}]}};};mljs.prototype.query.prototype._convertRadius=function(radius,radiusmeasure_opt){var radiusactual=radius;if(undefined!=radiusmeasure_opt){if("km"==radiusmeasure_opt){radiusactual=radiusactual*0.621371192;}else if("m"==radiusmeasure_opt){radiusactual=radiusactual*0.000621371192;}else if("nm"==radiusmeasure_opt){radiusactual=radiusactual*1.15078;}else if("degrees"==radiusmeasure_opt){radiusactual=radiusactual*69.0468;}}
return radiusactual;};mljs.prototype.query.prototype.geoBox=function(constraint_name,north,east,south,west){return{"geospatial-constraint-query":{"constraint-name":constraint_name,"box":{north:north,east:east,south:south,west:west}}}};mljs.prototype.query.prototype.geoPolygon=function(constraint_name,points){return{"geospatial-constraint-query":{"constraint-name":constraint_name,"polygon":{point:points}}}};mljs.prototype.query.prototype.geoElementPairPoint=function(parentelement,parentns,latelement,latns,lonelement,lonns,pointlat,pointlon,scoring_method_opt){if(undefined==scoring_method_opt){scoring_method_opt="zero";}
return{"geo-elem-pair-query":{"parent":{"name":parentelement,"ns":parentns},"lat":{"name":latelement,"ns":latns},"lon":{"name":lonelement,"ns":lonns},"geo-option":["score-function="+scoring_method_opt],"point":[{"latitude":pointlat,"longitude":pointlon}]}};};mljs.prototype.query.prototype.geoElementPairRadius=function(parentelement,parentns,latelement,latns,lonelement,lonns,pointlat,pointlon,radius,radius_unit_opt,scoring_method_opt){if(undefined==scoring_method_opt){scoring_method_opt="zero";}
var radiusactual=this._convertRadius(radius,radius_unit_opt);return{"geo-elem-pair-query":{"parent":{"name":parentelement,"ns":parentns},"lat":{"name":latelement,"ns":latns},"lon":{"name":lonelement,"ns":lonns},"geo-option":["score-function="+scoring_method_opt,"units="+radius_unit_opt],"circle":{radius:radiusactual,"point":[{"latitude":pointlat,"longitude":pointlon}]}}};};mljs.prototype.query.prototype.dynamic=function(query){var func=null;if(undefined!=query["geo-elem-pair-query"]&&undefined!=query["geo-elem-pair-query"]["point"]){func=function(vars){query["geo-elem-pair-query"].point.latitude=vars.latitude;query["geo-elem-pair-query"].point.longitude=vars.longitude;var opts=query["geo-elem-pair-query"]["geo-option"];for(var i=0,max=opts.length,opt;i<max;i++){opt=opts[i];if(undefined!=vars["score-function"]&&opt.indexOf("score-function=")==0){opt="score-function="+vars["score-function"];}
opts[i]=opt;}
query["geo-elem-pair-query"]["geo-option"]=opts;return query;};}
if(undefined!=query["geo-elem-pair-query"]&&undefined!=query["geo-elem-pair-query"]["circle"]){func=function(vars){query["geo-elem-pair-query"].circle.point.latitude=vars.latitude;query["geo-elem-pair-query"].circle.point.longitude=vars.longitude;query["geo-elem-pair-query"].circle.radius=vars.radius;var opts=query["geo-elem-pair-query"]["geo-option"];for(var i=0,max=opts.length,opt;i<max;i++){opt=opts[i];if(undefined!=vars["units"]&&opt.indexOf("units=")==0){opt="units="+vars.units;}
if(undefined!=vars["score-function"]&&opt.indexOf("score-function=")==0){opt="score-function="+vars["score-function"];}
opts[i]=opt;}
query["geo-elem-pair-query"]["geo-option"]=opts;return query;};}
return func;};mljs.prototype.query.prototype.range=function(constraint_name,val,range_operator_opt,options_opt){var query={"range-constraint-query":{"value":val,"constraint-name":constraint_name}};if(undefined!=range_operator_opt){query["range-constraint-query"]["range-operator"]=range_operator_opt;}
if(undefined!=options_opt){query["range-constraint-query"]["range-option"]=options_opt;}
return query;};mljs.prototype.query.prototype.value=function(constraint_name,val){var query={"value-constraint-query":{"text":val,"constraint-name":constraint_name}};return query;};mljs.prototype.query.prototype.uris=function(constraint_name,uris){return{"document-query":{"uri":uris}}};mljs.prototype.query.prototype.term=function(wordOrPhrase){var tq={"term-query":{"text":[wordOrPhrase]}};return tq;};if(typeof(window)==='undefined'){com={};com.marklogic={};com.marklogic.events={};com.marklogic.semantic={};var XMLSerializer=require('xmldom').XMLSerializer;}else{com=window.com||{};com.marklogic=window.com.marklogic||{};com.marklogic.events=window.com.marklogic.events||{};com.marklogic.semantic=window.com.marklogic.semantic||{};}
com.marklogic.events={};com.marklogic.events.Event=function(type,data){this.type=type;this.data=data;};com.marklogic.events.Publisher=function(){this.listeners=new Array();};com.marklogic.events.Publisher.prototype.subscribe=function(listener){this.listeners.push(listener);};com.marklogic.events.Publisher.prototype.unsubscribe=function(listener){var newArr=new Array();for(var i=0;i<this.listeners.length;i++){if(listener!=this.listeners[i]){newArr.push(this.listeners[i]);}}
this.listeners=newArr;};com.marklogic.events.Publisher.prototype.publish=function(event){for(var i=0;i<this.listeners.length;i++){this.listeners[i](event);}};mljs.prototype.searchcontext=function(){this.sortWord="sort";this.defaultQuery="";this.optionsName=mljs.__dogenid();this._options={options:{"return-results":true,"page-length":10,"transform-results":{apply:"raw"},constraint:[{"name":"collection","collection":{"prefix":""}}]}};this.collection=null;this.directory=null;this.transform=null;this.transformParameters={};this.format=null;this._optionsbuilder=new mljs.prototype.options();this._querybuilder=new mljs.prototype.query();this._query={};this.simplequery="";this._lastSearchFunction="simple";this._searchEndpoint="search";this._customEndpointFunction=null;this._tuples=new Array();this.defaultSort=[];this.optionsExist=false;this.structuredContrib={};this._selectedResults=new Array();this._highlightedResults=new Array();this._facetSelection=new Array();this._nextRequestId=1;this.optionsPublisher=new com.marklogic.events.Publisher();this.resultsPublisher=new com.marklogic.events.Publisher();this.valuesPublisher=new com.marklogic.events.Publisher();this.facetsPublisher=new com.marklogic.events.Publisher();this.sortPublisher=new com.marklogic.events.Publisher();this.errorPublisher=new com.marklogic.events.Publisher();this.simpleQueryPublisher=new com.marklogic.events.Publisher();this.selectionPublisher=new com.marklogic.events.Publisher();this.highlightPublisher=new com.marklogic.events.Publisher();this.suggestionPublisher=new com.marklogic.events.Publisher();};mljs.prototype.searchcontext.getConfigurationDefinition=function(){};mljs.prototype.searchcontext.prototype.setConfiguration=function(config){this._options=config.options;this.optionsName=config.optionsName;this.defaultQuery=config.defaultQuery;this.sortWord=config.sortWord;this.collection=config.collection;this.directory=config.directory;this.transform=config.transform;this.transformParameters=config.transformParameters||{};this.format=config.format;};mljs.prototype.searchcontext.prototype.setTransform=function(t){this.transform=t;};mljs.prototype.searchcontext.prototype.setTransform=function(tps){this.transformParameters=tps;};mljs.prototype.searchcontext.prototype.searchEndpoint=function(){this._searchEndpoint="search";};mljs.prototype.searchcontext.prototype.valuesEndpoint=function(){this._searchEndpoint="values";for(var i=0;i<arguments.length;i++){this._tuples.push(arguments[i]);}};mljs.prototype.searchcontext.prototype.customEndpoint=function(searchHandler){this._searchEndpoint="custom";this._lastSearchFunction="custom";this._customEndpointFunction=searchHandler;};mljs.prototype.searchcontext.prototype.setFormat=function(f){this.format=f;};mljs.prototype.searchcontext.prototype.setCollection=function(col){this.collection=col;};mljs.prototype.searchcontext.prototype.setDirectory=function(dir){this.directory=dir;};mljs.prototype.searchcontext.prototype.setOptions=function(name,options){this.optionsName=name;var ob=null;if(undefined!=options.toJson){this.__d("searchcontext.setOptions: Got an options builder instead of options JSON");ob=options;options=ob.toJson();}
this._optionsbuilder=ob;this._options={options:options};if(undefined!=options.options){this._options=options;}
this.optionsExist=false;this.defaultSort=this._options.options["sort-order"];this.optionsPublisher.publish(this._options.options);this.structuredContrib={};var self=this;};mljs.prototype.searchcontext.prototype.getOptionsBuilder=function(){return this._optionsbuilder;};mljs.prototype.searchcontext.prototype.getOptions=function(){var opts=this._options;opts._findConstraint=function(cname){var con=null;for(var i=0,max=opts.options.constraint.length,c;i<max;i++){c=opts.options.constraint[i];if(c.name==cname){return c;}}
return null;};return opts;};mljs.prototype.searchcontext.prototype.setDefaultQuery=function(defQuery){this.defaultQuery=defQuery;if(null==this.simplequery||undefined==this.simplequery||"".equals(this.simplequery.trim())){this.simpleQueryPublisher.publish(this.defaultQuery);}else{this.simpleQueryPublisher.publish(this.simplequery);}};mljs.prototype.searchcontext.prototype.setConnection=function(connection){this.db=connection;};mljs.prototype.searchcontext.prototype.register=function(searchWidget){if('function'===typeof(searchWidget.setSearchContext)){searchWidget.setSearchContext(this);}
if('function'===typeof(searchWidget.updatePage)){this.resultsPublisher.subscribe(function(results){searchWidget.updatePage(results);});}
if('function'===typeof(searchWidget.updateResults)){this.resultsPublisher.subscribe(function(results){searchWidget.updateResults(results);});}
if('function'===typeof(searchWidget.updateSort)){this.sortPublisher.subscribe(function(sort){searchWidget.updateSort(sort);});}
if('function'===typeof(searchWidget.updateSimpleQuery)){this.simpleQueryPublisher.subscribe(function(q){searchWidget.updateSimpleQuery(q);});}
if('function'===typeof(searchWidget.updateFacets)){this.resultsPublisher.subscribe(function(results){searchWidget.updateFacets(results);});}
if('function'===typeof(searchWidget.updateOptions)){this.optionsPublisher.subscribe(function(options){searchWidget.updateOptions(options);});}
if('function'===typeof(searchWidget.updateDocumentSelection)){this.selectionPublisher.subscribe(function(selectionArray){searchWidget.updateDocumentSelection(selectionArray);});}
if('function'===typeof(searchWidget.updateResultHighlight)){this.highlightPublisher.subscribe(function(selectionArray){searchWidget.updateResultHighlight(selectionArray);});}
if('function'===typeof(searchWidget.updateResultSelection)){this.selectionPublisher.subscribe(function(selectionArray){searchWidget.updateResultSelection(selectionArray);});}
if('function'===typeof(searchWidget.updateValues)){this.valuesPublisher.subscribe(function(values){searchWidget.updateValues(values);});}
if('function'===typeof(searchWidget.updateSuggestions)){this.suggestionPublisher.subscribe(function(suggestions){searchWidget.updateSuggestions(suggestions);});}
var self=this;if('function'===typeof(searchWidget.addSortListener)){searchWidget.addSortListener(function(sort){self.updateSort(sort);});}
if('function'===typeof(searchWidget.addFacetSelectionListener)){searchWidget.addFacetSelectionListener(function(facet){self.updateFacets(facet);});}
if('function'===typeof(searchWidget.addPageListener)){searchWidget.addPageListener(function(page){self.updatePage(page);});}
if('function'===typeof(searchWidget.addResultSelectionListener)){searchWidget.addResultSelectionListener(function(selection){self.updateSelection(selection);});}
if('function'===typeof(searchWidget.addResultHighlightListener)){searchWidget.addResultHighlightListener(function(highlight){self.updateHighlight(highlight);});}
if('function'===typeof(searchWidget.addGeoSelectionListener)){searchWidget.addGeoSelectionListener(function(selection){self.updateGeoSelection(selection);});}};mljs.prototype.searchcontext.prototype._parseQuery=function(q){this.__d("searchcontext._parseQuery: q: "+q+" type: "+(typeof q));var text="";var facets=new Array();var sort=null;var parts=q.trim().split(" ");for(var i=0;i<parts.length;i++){this.__d("searchcontext._parseQuery: parts["+i+"]: "+parts[i]);var newIdx=i;var colonQuote=parts[i].indexOf(":\"");var finalQuote=parts[i].indexOf("\"",colonQuote+2);this.__d("searchcontext._parseQuery: colonQuote: "+colonQuote+", finalQuote: "+finalQuote);if(-1!=colonQuote&&-1==finalQuote){do{newIdx++;if(undefined!=parts[newIdx]){parts[i]=parts[i]+" "+parts[newIdx];}}while(newIdx<parts.length&&parts[newIdx].indexOf("\"")!=parts[newIdx].length-1);this.__d("searchcontext._parseQuery: parts["+i+"] now: "+parts[i]);}
if(0==parts[i].indexOf(this.sortWord+":")){sort=parts[i].substring(5);}else if(-1!=parts[i].indexOf(":")){this.__d("searchcontext._parseQuery: FOUND A FACET IN QUERY: "+parts[i]);var fv=parts[i].split(":");this.__d("searchcontext._parseQuery: Facet name: "+fv[0]+" value: "+fv[1]);if(0==fv[1].indexOf("\"")){fv[1]=fv[1].substring(1);if((fv[1].length-1)==fv[1].indexOf("\"")){fv[1]=fv[1].substring(0,fv[1].length-1);}}
this.__d("searchcontext._parseQuery: Facet info now name: "+fv[0]+" value: "+fv[1]);var found=false;for(var f=0;f<facets.length;f++){this.__d("searchcontext._parseQuery:  - testing FACET: "+facets[f].name+" = "+facets[f].value);if(facets[f].name==fv[0]&&facets[f].value==fv[1]){this.__d("searchcontext._parseQuery:  - facets match, marking as found");found=true;}}
if(!found){facets.push({name:fv[0],value:fv[1]});}}else{if(""!=text){text+=" ";}
text+=parts[i];}
i=newIdx;}
var last={q:text.trim(),facets:facets,sort:sort};this.lastParsed=last;return last;};mljs.prototype.searchcontext.prototype._queryToText=function(parsed){var q=""+parsed.q;if(null!=parsed.sort){q+=" "+this.sortWord+":"+parsed.sort;}
for(var i=0;i<parsed.facets.length;i++){if(i>0||q.length>0){q+=" ";}
if(undefined!=parsed.facets[i]){q+=parsed.facets[i].name+":\""+parsed.facets[i].value+"\"";}}
return q;};mljs.prototype.searchcontext.prototype.doSuggest=function(q,additional_properties_opt){var self=this;this.db.suggest(q,this.optionsName,additional_properties_opt,function(result){self._callbackOrDiscard(result,function(result){self.suggestionPublisher.publish(result.doc);},self._nextRequestId++)});};mljs.prototype.searchcontext.prototype._callbackOrDiscard=function(data,callback,requestId){if(this._nextRequestId-requestId!=1){this.__d("searchcontext._callbackOrDiscard: Discarding old callback. It's requestId: "+requestId+", nextRequestId: "+this._nextRequestId);}else{callback(data,requestId);}};mljs.prototype.searchcontext.prototype.promise=function(prom){var reqId=0;var self=this;var retProm=function(retObject,requestId){if(true===retObject){return;}
if(reqId!=requestId){self.__d("searchcontext.promise: Dropping return call - promiseId: "+reqId+", requestId: "+requestId);return;}
this.resultsPublisher.unsubscribe(retProm);this.valuesPublisher.unsubscribe(retProm);this.suggestionPublisher.unsubscribe(retProm);if(false===retObject){prom.reject(retObject);}else{prom.resolve(retObject);}};this.resultsPublisher.subscribe(retProm);this.valuesPublisher.subscribe(retProm);this.suggestionPublisher.subscribe(retProm);return{doStructuredQuery:function(args){reqId=self._nextRequestId;self.doStructuredQuery.apply(self,arguments);},doCombinedQuery:function(args){reqId=self._nextRequestId;self.doCombinedQuery.apply(self,arguments);},contributeStructuredQuery:function(args){reqId=self._nextRequestId;self.contributeStructuredQuery.apply(self,arguments);},updateGeoHeatmap:function(args){reqId=self._nextRequestId;self.updateGeoHeatmap.apply(self,arguments);},updateGeoSelection:function(args){reqId=self._nextRequestId;self.updateGeoSelection.apply(self,arguments);},doSimpleQuery:function(args){reqId=self._nextRequestId;self.doSimpleQuery.apply(self,arguments);},deselectFacet:function(args){reqId=self._nextRequestId;self.deselectFacet.apply(self,arguments);},contributeFacet:function(args){reqId=self._nextRequestId;self.contributeFacet.apply(self,arguments);},contributeFacets:function(args){reqId=self._nextRequestId;self.contributeFacets.apply(self,arguments);},updateFacets:function(args){reqId=self._nextRequestId;self.updateFacets.apply(self,arguments);},updateSelection:function(args){reqId=self._nextRequestId;self.updateSelection.apply(self,arguments);},updateHighlight:function(args){reqId=self._nextRequestId;self.updateHighlight.apply(self,arguments);},updatePage:function(args){reqId=self._nextRequestId;self.updatePage.apply(self,arguments);},updateSort:function(args){reqId=self._nextRequestId;self.updateSort.apply(self,arguments);}};};mljs.prototype.searchcontext.prototype.doStructuredQuery=function(q,start){var self=this;this._lastSearchFunction="structured";this._doQuery(q,null,null,start,null);};mljs.prototype.searchcontext.prototype.dostructuredquery=mljs.prototype.searchcontext.prototype.doStructuredQuery;mljs.prototype.searchcontext.prototype.doCombinedQuery=function(structured,text,optionsdoc,start_opt){this._lastSearchFunction="combined";this._doQuery(structured,text,optionsdoc,start_opt,"combined");};mljs.prototype.searchcontext.prototype._doQuery=function(structured_opt,text_opt,optionsdoc_opt,start_opt,endpoint_override_opt){var self=this;var ourstart=1;if(0!=start_opt&&undefined!=start_opt){ourstart=start_opt;}
this.__d("searchcontext._doQuery: "+JSON.stringify(structured_opt)+", ourstart: "+ourstart);var structuredF=function(){self.resultsPublisher.publish(true);self.facetsPublisher.publish(true);self.db.structuredSearch(structured_opt,self.optionsName,{start:ourstart},function(result){self._callbackOrDiscard(result,function(result,requestId){if(result.inError){self.__d(result.error);self.resultsPublisher.publish(false);self.facetsPublisher.publish(false);}else{self.resultsPublisher.publish(result.doc);self.facetsPublisher.publish(result.doc.facets);}},self._nextRequestId++)});};var valuesF=function(){self.valuesPublisher.publish(true);for(var i=0;i<self._tuples.length;i++){self.db.values(structured_opt,self._tuples[i],self.optionsName,null,function(result){self._callbackOrDiscard(result,function(result,requestId){if(result.inError){self.__d(result.error);self.valuesPublisher.publish(false);}else{self.valuesPublisher.publish(result.doc);}},self._nextRequestId++)});}};var combinedF=function(){self.resultsPublisher.publish(true);self.facetsPublisher.publish(true);self.db.combined(structured_opt,text_opt,self._options,{start:ourstart},function(result){self._callbackOrDiscard(result,function(result,requestId){if(result.inError){self.__d(result.error);self.resultsPublisher.publish(false);self.facetsPublisher.publish(false);}else{self.resultsPublisher.publish(result.doc);self.facetsPublisher.publish(result.doc.facets);}},self._nextRequestId++)});};var customF=function(){self._customEndpointFunction(self,null,q,self.optionsName,1,null);};var dos=function(){if(undefined!=endpoint_override_opt){if("search"==endpoint_override_opt){structuredF();}else if("values"==endpoint_override_opt){valuesF();}else if("combined"==endpoint_override_opt){combinedF();}else if("custom"==endpoint_override_opt){customF();}else{throw new TypeError("searchcontext._doQuery: endpoint_override_opt must be 'values', 'combined' or 'custom'");}}else{if("search"==self._searchEndpoint){structuredF();}else if("values"==self._searchEndpoint){valuesF();}else if("combined"==self._searchEndpoint){combinedF();}else{customF();}}};this._persistAndDo(dos);};mljs.prototype.searchcontext.prototype.contributeStructuredQuery=function(contributor,queryTerm,start_opt){var qb=this.db.createQuery();var self=this;var calcTerms=function(){var terms=new Array();for(var cont in self.structuredContrib){self.__d("searchcontext.contributeStructuredQuery: Adding contribution from: "+cont);if(null!=self.structuredContrib[cont]){terms.push(self.structuredContrib[cont]);}}
qb.query(qb.and(terms));return qb.toJson();};var doit=function(){var terms=calcTerms();self.doStructuredQuery(terms,start_opt);};if(null==queryTerm||undefined==queryTerm){self.__d("searchcontext.contributeStructuredQuery: Removing query term from contributor: "+contributor);this.structuredContrib[contributor]=undefined;doit();}else{if("string"==typeof(queryTerm)){this.db.v7check(function(){if(""==queryTerm.trim()){queryTerm=qb.and();}else{queryTerm=qb.term(queryTerm);}
self.structuredContrib[contributor]=qb.term(queryTerm);doit();},function(){var terms=calcTerms();self.doCombinedQuery(terms,queryTerm,self._options,start_opt);});}else{self.__d("searchcontext.contributeStructuredQuery: Setting query term from contributor: "+contributor+" to "+JSON.stringify(queryTerm));this.structuredContrib[contributor]=queryTerm;doit();}}};mljs.prototype.searchcontext.prototype.updateGeoHeatmap=function(constraint_name,heatmap){var con=null;for(var i=0,max=this._options.options.constraint.length;i<max&&null==con;i++){con=this._options.options.constraint[i];if(con.name==constraint_name){}else{con=null;}}
if(null!=con){if(undefined!=con["geo-elem"]){con["geo-elem"].heatmap=heatmap;}else if(undefined!=con["geo-elem-pair"]){con["geo-elem-pair"].heatmap=heatmap;}else if(undefined!=con["geo-attr-pair"]){con["geo-attr-pair"].heatmap=heatmap;}else if(undefined!=con["geo-path"]){con["geo-path"].heatmap=heatmap;}}
this.optionsExist=false;var qb=this.db.createQuery();this.contributeStructuredQuery("__heatmap",qb.and([]));};mljs.prototype.searchcontext.prototype.updateGeoSelection=function(selection){var cont=selection.contributor;var qb=this.db.createQuery();var term=null;if("circle"==selection.type){term=qb.georadius(selection["constraint-name"],selection.latitude,selection.longitude,selection.radiusmiles);}else{if("polygon"==selection.type){term=qb.geoPolygon(selection["constraint-name"],selection.polygon);}else if("box"==selection.type){term=qb.geoBox(selection["constraint-name"],selection.box.north,selection.box.east,selection.box.south,selection.box.west);}else if(null==selection.type){term=null;}}
if(undefined!=selection.heatmap){this.updateGeoHeatmap(selection["constraint-name"],selection.heatmap);}
var self=this;this._persistAndDo(function(){self.contributeStructuredQuery(cont,term)});};mljs.prototype.searchcontext.prototype.doSimpleQuery=function(q,start){if(null==q||undefined==q){q=this.defaultQuery;}
this._lastSearchFunction="simple";var self=this;var ourstart=1;if(0!=start&&undefined!=start){ourstart=start;}
this.__d("Query before: '"+q+"'");var parsed=self._parseQuery(q);this.__d("Query parsed: '"+JSON.stringify(parsed)+"'");var cq=self._queryToText(parsed);q=cq;this.__d("Query after: '"+cq+"'");if(""==cq.trim()){this.simplequery=this.defaultQuery;}else{this.simplequery=cq;}
this.simpleQueryPublisher.publish(this.simplequery);self.facetsPublisher.publish(parsed.facets);var dos=function(){var sprops={};if(null!=self.collection){sprops.collection=self.collection;}
if(null!=self.directory){sprops.directory=self.directory;}
if(null!=self.transform){sprops.transform=self.transform;sprops.transformParameters=self.transformParameters;}
if(null!=self.format){sprops.format=self.format;}
if("search"==self._searchEndpoint){self.resultsPublisher.publish(true);self.facetsPublisher.publish(true);self.db.search(q,self.optionsName,ourstart,sprops,function(result){self._callbackOrDiscard(result,function(result){if(result.inError){self.__d(result.error);self.resultsPublisher.publish(false);self.facetsPublisher.publish(false);}else{self.resultsPublisher.publish(result.doc);self.facetsPublisher.publish(result.doc.facets);}},self._nextRequestId++)});}else if("values"==self._searchEndpoint){self.valuesPublisher.publish(true);for(var i=0;i<self._tuples.length;i++){self.db.values(q,self._tuples[i],self.optionsName,null,function(result){self._callbackOrDiscard(result,function(result){if(result.inError){self.__d(result.error);self.valuesPublisher.publish(false);}else{self.valuesPublisher.publish(result.doc);}},self._nextRequestId++)});}}else{self._customEndpointFunction(self,q,null,self.optionsName,ourstart||1,sprops);}};this._persistAndDo(dos);};mljs.prototype.searchcontext.prototype.dosimplequery=mljs.prototype.searchcontext.prototype.doSimpleQuery;mljs.prototype.searchcontext.prototype.updateResults=function(msg){this.resultsPublisher.publish(msg);};mljs.prototype.searchcontext.prototype._persistAndDo=function(callback){var self=this;var persistFunc=function(){self.__d("setOptions: saving search options: "+self.optionsName);if(self.optionsExist){callback();}else{self.db.saveSearchOptionsCheck(self.optionsName,self._options,function(result){if(result.inError){self.__d("Error saving Search options "+self.optionsName);}else{self.optionsExist=true;self.__d("Saved Search options "+self.optionsName);callback();}});}};persistFunc();};mljs.prototype.searchcontext.prototype.setSortWord=function(word){this.sortWord=word;};mljs.prototype.searchcontext.prototype.addResultsListener=function(rl){this.resultsPublisher.subscribe(rl);};mljs.prototype.searchcontext.prototype.removeResultsListener=function(rl){this.resultsPublisher.unsubscribe(rl);};mljs.prototype.searchcontext.prototype.addSortListener=function(sl){this.sortPublisher.subscribe(sl);};mljs.prototype.searchcontext.prototype.removeSortListener=function(sl){this.sortPublisher.unsubscribe(sl);};mljs.prototype.searchcontext.prototype.addFacetsListener=function(fl){this.facetsPublisher.subscribe(fl);};mljs.prototype.searchcontext.prototype.removeFacetsListener=function(fl){this.facetsPublisher.unsubscribe(fl);};mljs.prototype.searchcontext.prototype.addErrorListener=function(fl){this.errorPublisher.subscribe(fl);};mljs.prototype.searchcontext.prototype.removeErrorListener=function(fl){this.errorPublisher.unsubscribe(fl);};mljs.prototype.searchcontext.prototype.deselectFacet=function(facetName,facetValue_opt){var newFacetSelection=new Array();for(var i=0,fs;i<this._facetSelection.length;i++){fs=this._facetSelection[i];if(fs.facetName==facetName){if(undefined==facetValue_opt){}else{if(fs.facetValue=facetValue_opt){}else{newFacetSelection.push(fs);}}}else{newFacetSelection.push(fs);}}
this._facetSelection=newFacetSelection;this.updateFacets(this._facetSelection);};mljs.prototype.searchcontext.prototype.contributeFacet=function(facetName,facetValue){if(undefined==facetName||undefined==facetValue){return;}
this._facetSelection.push({name:facetName,value:facetValue});this.updateFacets(this._facetSelection);};mljs.prototype.searchcontext.prototype.contributeFacets=function(facetArray){if(undefined==facetArray){return;}
for(var i=0,max=facetArray.length,facet;i<max;i++){facet=facetArray[i];this._facetSelection.push(facet);}
this.updateFacets(this._facetSelection);};mljs.prototype.searchcontext.prototype.updateFacets=function(facetSelection){if("simple"==this._lastSearchFunction){var parsed=this._parseQuery(this.simplequery);parsed.facets=facetSelection;var q=this._queryToText(parsed);this.dosimplequery(q);}else{var qb=this.db.createQuery();var terms=[];for(var i=0;i<facetSelection.length;i++){terms[i]=qb.range(facetSelection[i].name,facetSelection[i].value);}
this.contributeStructuredQuery("__facets",qb.and(terms));}};mljs.prototype.searchcontext.prototype.updateSelection=function(resultSelection){if("append"==resultSelection.mode){var found=false;for(var i=0;i<this._selectedResults.length&&!found;i++){found=(this._selectedResults[i]==resultSelection.uri);}
if(!found){this._selectedResults.push(resultSelection.uri);}}else if("replace"==resultSelection.mode){this._selectedResults=new Array();if(null!=resultSelection.uri){this._selectedResults.push(resultSelection.uri);}}else{}
this.selectionPublisher.publish(this._selectedResults);};mljs.prototype.searchcontext.prototype.updateHighlight=function(resultHighlight){if("append"==resultHighlight.mode){var found=false;for(var i=0;i<this._highlightedResults.length&&!found;i++){found=(this._highlightedResults[i]==resultHighlight.uri);}
if(!found){this._highlightedResults.push(resultHighlight.uri);}}else if("replace"==resultHighlight.mode){this._highlightedResults=new Array();if(null!=resultHighlight.uri){this._highlightedResults.push(resultHighlight.uri);}}else{}
this.highlightPublisher.publish(this._highlightedResults);};mljs.prototype.searchcontext.prototype.updatePage=function(json){if(this._options.options["page-length"]!=json.show){this.optionsExist=false;this._options.options["page-length"]=json.show;}
if("simple"==this._lastSearchFunction){this.dosimplequery(this.simplequery,json.start);}else{var qb=this.db.createQuery();this.contributeStructuredQuery("__page",qb.and([]),json.start);}};mljs.prototype.searchcontext.prototype.updateSort=function(sortSelection){if(undefined!=sortSelection["json-key"]&&""==sortSelection["json-key"]){this._options.options["sort-order"]=this.defaultSort;}else{this._options.options["sort-order"]=[sortSelection];}
this.optionsExist=false;this.dosimplequery(this.simplequery);};mljs.prototype.searchcontext.prototype.reset=function(){this.resultsPublisher.publish(null);this.facetsPublisher.publish(null);this.sortPublisher.publish(null);this.simpleQueryPublisher.publish(this.defaultQuery);};mljs.prototype.searchcontext.prototype.getMetadataValue=function(result,fieldName){if(undefined==result.metadata)return null;for(var metai=0,maxi=result.metadata.length,meta;metai<maxi;metai++){meta=result.metadata[metai];for(var p in meta){if(p==fieldName){return meta[p];}}}
return null;};mljs.prototype.searchcontext.prototype.getMetadataValues=function(result,fieldName){if(undefined==result.metadata)return null;var values=new Array();for(var metai=0,maxi=result.metadata.length,meta;metai<maxi;metai++){meta=result.metadata[metai];for(var p in meta){if(p==fieldName){values.push(meta[p]);}}}
if(0==values.length){return null;}else{return values;}};mljs.prototype.searchcontext.defaultparser=function(config){this._config=config;this._root=new this.container("AND",[]);};mljs.prototype.searchcontext.defaultparser.prototype.parse=function(q){};mljs.prototype.searchcontext.defaultparser.prototype.container=function(type,children){this._type=type;this._clauses=children;};mljs.prototype.searchcontext.defaultparser.prototype.container.prototype.toString=function(){var s="";s+="(";for(var i=0,max=this._clauses.length,clause;i<max;i++){clause=this._clauses[i];if(i>0){s+=" ";}
s+=clause.toString();if("("!=this._type&&i<(max-1)){s+=" "+this._type;}}
s+=")";return s;};mljs.prototype.searchcontext.defaultparser.prototype.container.prototype.append=function(clause){this._clauses.push(clause);};mljs.prototype.searchcontext.defaultparser.prototype.container.prototype.getChildren=function(){return this._clauses;};mljs.prototype.searchcontext.defaultparser.prototype.container.prototype.getType=function(){return this._type;};mljs.prototype.searchcontext.defaultparser.prototype.near=function(distance,lhs,rhs){this._left=lhs;this._right=rhs;this._distance=distance;};mljs.prototype.searchcontext.defaultparser.prototype.near.prototype.toString=function(){return"("+this._left+" NEAR/"+this._distance+" "+this._right+")";};mljs.prototype.searchcontext.defaultparser.prototype.near.prototype.getLeft=function(){return this._left;};mljs.prototype.searchcontext.defaultparser.prototype.near.prototype.getRight=function(){return this._right;};mljs.prototype.searchcontext.defaultparser.prototype.near.prototype.getDistance=function(){return this._distance;};mljs.prototype.searchcontext.defaultparser.prototype.phrase=function(text){this._text=text;};mljs.prototype.searchcontext.defaultparser.prototype.phrase.prototype.toString=function(){return"\""+this._text+"\"";};mljs.prototype.searchcontext.defaultparser.prototype.phrase.prototype.getText=function(){return this._text;};mljs.prototype.searchcontext.defaultparser.prototype.value=function(constraint_name,value){this._constraint=constraint_name;this._value=value;};mljs.prototype.searchcontext.defaultparser.prototype.value.prototype.toString=function(){return this._constraint+":\""+this._value+"\"";};mljs.prototype.searchcontext.defaultparser.prototype.value.prototype.getConstraint=function(){return this._constraint;};mljs.prototype.searchcontext.defaultparser.prototype.value.prototype.getValue=function(){return this._value;};mljs.prototype.searchcontext.defaultparser.prototype.range=function(constraint_name,lowerBound,lowerBoundType,upperBound,upperBoundType){this._constraint=constraint_name;this._lowerBound=lowerBound;this._lowerBoundType=lowerBoundType;this._upperBound=upperBound;this._upperBoundType=upperBoundType;};mljs.prototype.searchcontext.defaultparser.prototype.range.prototype.getConstraint=function(){return this._constraint;};mljs.prototype.searchcontext.defaultparser.prototype.range.prototype.getLowerBound=function(){return this._lowerBound;};mljs.prototype.searchcontext.defaultparser.prototype.range.prototype.getLowerBoundType=function(){return this._lowerBoundType;};mljs.prototype.searchcontext.defaultparser.prototype.range.prototype.getUpperBound=function(){return this._upperBound;};mljs.prototype.searchcontext.defaultparser.prototype.range.prototype.getUpperBoundType=function(){return this._upperBoundType;};com.marklogic.semantic.tripleconfig=function(){this.errorPublisher=new com.marklogic.events.Publisher();this.validTriples=new Array();this._newentities=new Array();this._newPredicates=new Array();this.addFoaf();this.addMarkLogic();this.addPlaces();this.addFoafPlaces();this.addMovies();};com.marklogic.semantic.tripleconfig.prototype.addErrorListener=function(fl){this.errorPublisher.subscribe(fl);};com.marklogic.semantic.tripleconfig.prototype.removeErrorListener=function(fl){this.errorPublisher.unsubscribe(fl);};com.marklogic.semantic.tripleconfig.prototype.addMappings=function(mapname,entityJson,namedPredicateArray,validTriplesArray){this._newentities[mapname]=entityJson;for(var i=0;i<validTriplesArray.length;i++){this.validTriples.push(validTriplesArray[i]);}
for(var predname in namedPredicateArray){if("object"==typeof namedPredicateArray[predname]){this._newPredicates[predname]=namedPredicateArray[predname];}}};com.marklogic.semantic.tripleconfig.prototype.include=function(rdftype){var ent=rdftype._config;ent.properties=new Array();var hashPos=ent.iri.lastIndexOf("#");var slashPos=ent.iri.lastIndexOf("/");var pos=hashPos;if(slashPos>hashPos){pos=slashPos;}
var shortString=ent.iri.substring(pos+1).toLowerCase().replace("-","");ent.variable=shortString;for(var p=0,max=rdftype._predicates.length,pred;p<max;p++){pred=rdftype._predicates[p];var newpred=pred._config;mljs.defaultconnection.logger.debug("adding predicate: "+JSON.stringify(newpred));ent.properties.push(newpred);this._newPredicates[newpred.iri]=newpred;}
this._newentities[rdftype._config.iri]=ent;for(var p=0,max=rdftype._to.length,pred;p<max;p++){pred=rdftype._to[p];var predArray=pred.predicates;if(typeof predArray=="string"){predArray=[pred.predicates];}
this.validTriples.push({subjectType:ent.iri,objectType:pred.type,predicateArray:predArray});}
for(var p=0,max=rdftype._from.length,pred;p<max;p++){pred=rdftype._from[p];var predArray=pred.predicates;if(typeof predArray=="string"){predArray=[pred.predicates];}
this.validTriples.push({subjectType:pred.type,objectType:ent.iri,predicateArray:predArray});}};com.marklogic.semantic.tripleconfig.prototype.rdftype=function(rdfTypeIri,opt_commonNamePredicate){var self=this;var rdftype={_config:{title:null,iri:rdfTypeIri,name:rdfTypeIri,prefix:rdfTypeIri,iriPattern:rdfTypeIri+"/#VALUE#",commonNamePredicate:opt_commonNamePredicate||"http://www.w3.org/2000/01/rdf-schema#label"},_predicates:[],_to:[],_from:[],predicate:function(predIri,opt_type){var pred={_config:{iri:predIri,name:predIri,title:null,type:opt_type||"xs:string",locale:null},title:function(theTitle){pred._config.title=theTitle;return pred;},type:function(theType){pred._config.type=theType;return pred;},locale:function(theLocale){pred._config.locale=theLocale;return pred;},name:function(theName){pred._config.name=theName;return pred;}}
rdftype._predicates.push(pred);return pred;},title:function(theTitle){rdftype._config.title=theTitle;return rdftype;},to:function(type,predicateOrArray){rdftype._to.push({type:type,predicates:predicateOrArray});return rdftype;},from:function(type,predicateOrArray){rdftype._from.push({type:type,predicates:predicateOrArray});return rdftype;},prefix:function(thePrefix){rdftype._config.prefix=thePrefix;return rdftype;},pattern:function(thePattern){rdftype._config.iriPattern=thePattern;return rdftype;},name:function(theName){rdftype._config.name=theName;return rdftype;}};return rdftype;};com.marklogic.semantic.tripleconfig.prototype.addValidTriples=function(validTriplesArray){for(var i=0;i<validTriplesArray.length;i++){this.validTriples.push(validTriplesArray[i]);}};com.marklogic.semantic.tripleconfig.prototype.addPlaces=function(){var place=this.rdftype("http://schema.org/Place","http://www.geonames.org/ontology#name").title("Place").prefix("http://www.geonames.org/ontology#").pattern("http://marklogic.com/semantic/targets/organisation/#VALUE#").to("http://schema.org/Place",["http://www.marklogic.com/ontology/0.1/located_within","http://www.marklogic.com/ontology/0.1/contains_location"]);place.predicate("http://www.marklogic.com/ontology/0.1/studies_at").title("Studies at");place.predicate("http://www.marklogic.com/ontology/0.1/affiliated_with").title("Affiliated with");place.predicate("http://www.marklogic.com/ontology/0.1/has_meetings_near").title("Meets near");place.predicate("http://www.marklogic.com/ontology/0.1/located_within").title("Located within");place.predicate("http://www.marklogic.com/ontology/0.1/contains_location").title("Contains");this.include(place);};com.marklogic.semantic.tripleconfig.prototype.addMovies=function(){var movie=this.rdftype("http://marklogic.com/semantic/rdfTypes/movie","hastitle").title("Movie").prefix("http://marklogic.com/semantic/ns/movie").pattern("http://marklogic.com/semantic/targets/movies/#VALUE#").from("http://xmlns.com/foaf/0.1/Person","likesmovie");movie.predicate("likesmovie").title("Likes movie");movie.predicate("hastitle").title("Has Title");movie.predicate("hasactor").title("Has Actor");movie.predicate("hasgenre").title("Has Genre");movie.predicate("releasedin").title("Released In");this.include(movie);};com.marklogic.semantic.tripleconfig.prototype.addTest=function(){var foodstuff=this.rdftype("http://marklogic.com/semantic/rdfTypes/foodstuff","foodname").title("Foodstuff").from("http://xmlns.com/foaf/0.1/Person","likes");foodstuff.predicate("foodname").title("Named");foodstuff.predicate("likes").title("Likes");this.include(foodstuff);};com.marklogic.semantic.tripleconfig.prototype.addFoafPlaces=function(){this.validTriples.push({subjectType:"person",objectType:"placename",predicateArray:["based_near"]});this.validTriples.push({subjectType:"organisation",objectType:"placename",predicateArray:["based_near","has_meetings_near"]});};com.marklogic.semantic.tripleconfig.prototype.addFoaf=function(){var person=this.rdftype("http://xmlns.com/foaf/0.1/Person","http://xmlns.com/foaf/0.1/name").title("Person").prefix("http://xmlns.com/foaf/0.1/").pattern("http://marklogic.com/semantic/targets/person/#VALUE#").to("http://xmlns.com/foaf/0.1/Person",["http://xmlns.com/foaf/0.1/knows","http://xmlns.com/foaf/0.1/friendOf","http://xmlns.com/foaf/0.1/enemyOf","http://xmlns.com/foaf/0.1/childOf","http://xmlns.com/foaf/0.1/parentOf","http://xmlns.com/foaf/0.1/fundedBy"]).to("http://xmlns.com/foaf/0.1/Organization",["http://xmlns.com/foaf/0.1/member","http://www.marklogic.com/ontology/0.1/studies_at"]);person.predicate("http://xmlns.com/foaf/0.1/knows").title("Knows");person.predicate("http://xmlns.com/foaf/0.1/friendOf").title("Friend");person.predicate("http://xmlns.com/foaf/0.1/enemyOf").title("Enemy");person.predicate("http://xmlns.com/foaf/0.1/childOf").title("Is a child of");person.predicate("http://xmlns.com/foaf/0.1/parentOf").title("Is a parent of");person.predicate("http://xmlns.com/foaf/0.1/fundedBy").title("Funded by");person.predicate("http://xmlns.com/foaf/0.1/member").title("Is a member of");person.predicate("http://xmlns.com/foaf/0.1/based_near").title("I based near");person.predicate("http://xmlns.com/foaf/0.1/name").title("Name");mljs.defaultconnection.logger.debug("Person predicate: "+JSON.stringify(person));this.include(person);var org=this.rdftype("http://xmlns.com/foaf/0.1/Organization","http://xmlns.com/foaf/0.1/name").title("Organisation").prefix("http://xmlns.com/foaf/0.1/").pattern("http://marklogic.com/semantic/targets/organisation/#VALUE#").to("http://xmlns.com/foaf/0.1/Organization",["http://xmlns.com/foaf/0.1/member","http://xmlns.com/foaf/0.1/parentOf","http://www.marklogic.com/ontology/0.1/affiliated_with","http://xmlns.com/foaf/0.1/fundedBy"]);this.include(org);};com.marklogic.semantic.tripleconfig.prototype.addMarkLogic=function(){var doc=this.rdftype("http://marklogic.com/semantics/ontology/Document","http://marklogic.com/semantics/ontology/Document#uri").title("MarkLogic Document").prefix("http://marklogic.com/semantics/ontology/Document").pattern("http://marklogic.com/semantics/ontology/Document/#VALUE#").from("*","http://marklogic.com/semantics/ontology/Document#uri").from("*","http://www.w3.org/ns/prov#wasDerivedFrom").from("*","http://marklogic.com/semantics/ontology/mentioned_in").to("http://marklogic.com/semantics/ontology/Document",["http://www.w3.org/ns/prov#wasDerivedFrom","http://marklogic.com/semantics/ontology/mentioned_in"]);doc.predicate("http://marklogic.com/semantics/ontology/Document#uri").title("URI");doc.predicate("http://www.w3.org/ns/prov#wasDerivedFrom").title("Derived From");this.include(doc);};com.marklogic.semantic.tripleconfig.prototype.getValidPredicates=function(from,to){for(var i=0;i<this.validTriples.length;i++){this.__d("getValidPredicates: Checking validTriples: "+JSON.stringify(this.validTriples[i]));if((this.validTriples[i].subjectType==from||"*"==this.validTriples[i].subjectType)&&(this.validTriples[i].objectType==to||"*"==this.validTriples[i].objectType)){this.__d("getValidPredicates: got matching predicates: "+JSON.stringify(this.validTriples[i].predicateArray));return this.validTriples[i].predicateArray;}}
return new Array();};com.marklogic.semantic.tripleconfig.prototype.getNameProperty=function(entity){this.__d("getNameProperty: entity="+entity);var cnp=this._newentities[entity].commonNamePredicate;var self=this
self.__d("Common name property: "+cnp);for(var i=0;i<this._newentities[entity].properties.length;i++){self.__d("Property: "+i+" is: "+JSON.stringify(this._newentities[entity].properties[i]));self.__d(" - IRI: "+this._newentities[entity].properties[i].iri);if(cnp==this._newentities[entity].properties[i].iri){self.__d("MATCH: "+JSON.stringify(this._newentities[entity].properties[i]));return this._newentities[entity].properties[i];}}
self.__d("getNameProperty: RETURNING NULL for entity: "+entity);return null;};com.marklogic.semantic.tripleconfig.prototype.getEntityFromIRI=function(iri){return this._newentities[iri];};com.marklogic.semantic.tripleconfig.prototype.getEntityFromShortIRI=function(iri){for(var cn in this._newentities){var p=this._newentities[cn];if(p.rdfTypeIriShort==iri){return p;}}};com.marklogic.semantic.tripleconfig.prototype.getEntityFromName=function(name){for(var cn in this._newentities){var p=this._newentities[cn];if(p.name==name){return p;}}};com.marklogic.semantic.tripleconfig.prototype.getPredicateFromIRI=function(iri){return this._newPredicates[iri];};com.marklogic.semantic.tripleconfig.prototype.getPredicateFromShortIRI=function(iri){for(var cn in this._newPredicates){var p=this._newPredicates[cn];if(p.shortiri==iri){return p;}}};com.marklogic.semantic.tripleconfig.prototype.getPredicateFromName=function(name){for(var cn in this._newPredicates){var p=this._newPredicates[cn];if(p.name==name){return p;}}};com.marklogic.semantic.tripleconfig.prototype.getEntityProperty=function(entity,iri){self.__d("getEntityProperty: "+iri+" from entity: "+entity);for(var i=0;i<entity.properties.length;i++){if(iri==entity.properties[i].iri){return entity.properties[i];}}
self.__d("getEntityProperty: RETURNING NULL for "+iri+" from entity: "+entity);return null;};mljs.prototype.semanticcontext=function(){this._offset=0;this._limit=10;this._tripleconfig=null;this._subjectQuery="";this._subjectResults=null;this._selectedSubject="";this._subjectFacts=new Array();this._restrictSearchContext=null;this._contentSearchContext=null;this._contentMode="full";this._subjectResultsPublisher=new com.marklogic.events.Publisher();this._subjectFactsPublisher=new com.marklogic.events.Publisher();this._suggestionsPublisher=new com.marklogic.events.Publisher();this._factsPublisher=new com.marklogic.events.Publisher();this._errorPublisher=new com.marklogic.events.Publisher();};mljs.prototype.semanticcontext.prototype.setContentMode=function(mode){this._contentMode=mode;};mljs.prototype.semanticcontext.prototype.getContentMode=function(){return this._contentMode;};mljs.prototype.semanticcontext.prototype.setContentContext=function(ctx){this._contentSearchContext=ctx;};mljs.prototype.semanticcontext.prototype.getContentContext=function(){return this._contentSearchContext;};mljs.prototype.semanticcontext.prototype.hasContentContext=function(){return(null!=this._contentSearchContext);};mljs.prototype.semanticcontext.prototype.getConfiguration=function(){if(null==this._tripleconfig){this._tripleconfig=this.db.createTripleConfig();}
return this._tripleconfig;};mljs.prototype.semanticcontext.prototype.setConfiguration=function(conf){this._tripleconfig=conf;};mljs.prototype.semanticcontext.prototype.register=function(obj){var self=this;if(undefined!=obj.setSemanticContext){obj.setSemanticContext(this);}
if(undefined!=obj.updateSubjectResults){this._subjectResultsPublisher.subscribe(function(results){obj.updateSubjectResults(results)});}
if(undefined!=obj.updateSubjectFacts){this._subjectFactsPublisher.subscribe(function(facts){obj.updateSubjectFacts(facts)});}
if(undefined!=obj.updateFacts){this._factsPublisher.subscribe(function(facts){obj.updateFacts(facts)});}
if(undefined!=obj.updateSuggestions){this._suggestionsPublisher.subscribe(function(suggestions){obj.updateSuggestions(suggestions)});}
if(undefined!=obj.addSubjectSelectionListener){obj.addSubjectSelectionListener(function(subjectIri){self.subjectFacts(subjectIri)});}
if(null!=this._contentSearchContext){this._contentSearchContext.register(obj);}};mljs.prototype.semanticcontext.prototype.subjectQuery=function(sparql,offset_opt,limit_opt){this._subjectQuery=sparql;if(undefined!=offset_opt){this._offset=offset_opt;if(undefined!=limit_opt){this._limit=limit_opt;}}
this._doSubjectQuery();};mljs.prototype.semanticcontext.prototype.moveOffset=function(offset){this._offset=offset;this._doSubjectQuery();};mljs.prototype.semanticcontext.prototype._doSubjectQuery=function(){var self=this;var q=this._subjectQuery+" OFFSET "+this._offset+" LIMIT "+this._limit;this.db.sparql(q,function(result){self.__d("RESPONSE: "+JSON.stringify(result.doc));if(result.inError){self._subjectResultsPublisher.publish(false);self._errorPublisher.publish(result.error);}else{self._subjectResultsPublisher.publish(result.doc);}});};mljs.prototype.semanticcontext.prototype.subjectFacts=function(subjectIri){this._selectedSubject=subjectIri;this.getFacts(subjectIri,true);};mljs.prototype.semanticcontext.prototype.subjectContent=function(subjectIri,docSparql_opt){var self=this;if(null!=this._contentSearchContext){this._contentSearchContext.updateResults(true);var sparql="";if(undefined==docSparql_opt){sparql+="PREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n"+"SELECT ?docuri {\n  GRAPH ?graph {\n    ";if(self.reverse){sparql+="?obj ?pred <"+subjectIri+"> .";}else{sparql+="<"+subjectIri+"> ?pred ?obj .";}
sparql+="\n  }\n  ?graph <http://marklogic.com/semantics/ontology/derived_from> ?docuri .\n"+"}";}else{sparql=docSparql_opt;}
sparql+=" LIMIT 10";self.db.sparql(sparql,function(result){if(result.inError){self._contentSearchContext.updateResults(false);self.errorPublisher.publish(result.error);}else{var qb=self.db.createQuery();var uris=new Array();for(var b=0;b<result.doc.results.bindings.length;b++){var res=result.doc.results.bindings[b];uris.push(res.docuri.value);}
qb.query(qb.uris("uris",uris));var queryjson=qb.toJson();self.__d("SEMANTIC CONTENT JSON QUERY: "+JSON.stringify(queryjson));if(self._contentMode=="full"){self._contentSearchContext.dostructuredquery(queryjson,1);}else if(self._contentMode=="contribute"){self._contentSearchContext.contributeStructuredQuery("semanticcontext",queryjson.query);}}});}};mljs.prototype.semanticcontext.prototype.getFact=function(subjectIri,predicate,reload_opt){var facts=this._subjectFacts[subjectIri];var bindings
var self=this;var fireFact=function(){var results=[];for(var i=0;i<bindings.length;i++){if(undefined==bindings[i].predicate||predicate==bindings[i].predicate){results.push(bindings[i].predicate);}}
self._subjectFactsPublisher.publish({subject:subjectIri,predicate:predicate,facts:bindings})};if((true==reload_opt)||undefined==facts){var sparql="SELECT * WHERE {<"+subjectIri+"> <"+predicate+"> ?object .}";self.db.sparql(sparql,function(result){self.__d("RESPONSE: "+JSON.stringify(result.doc));if(result.inError){self._errorPublisher.publish(result.error);}else{bindings=result.doc.results.bindings;fireFact();}});}else{bindings=facts.results.bindings;fireFact();}};mljs.prototype.semanticcontext.prototype.getFacts=function(subjectIri,reload_opt){var self=this;var facts=this._subjectFacts[subjectIri];if((true==reload_opt)||undefined==facts){var sparql="SELECT * WHERE {";if(!(subjectIri.indexOf("_:")==0)){sparql+="<";}
sparql+=subjectIri;if(!(subjectIri.indexOf("_:")==0)){sparql+=">";}
sparql+=" ?predicate ?object .}";self.db.sparql(sparql,function(result){self.__d("RESPONSE: "+JSON.stringify(result.doc));if(result.inError){self._subjectFactsPublisher.publish(false);self._errorPublisher.publish(result.error);}else{self._subjectFacts[subjectIri]=result.doc;self._subjectFactsPublisher.publish({subject:subjectIri,facts:result.doc});}});}else{self._subjectFactsPublisher.publish({subject:subjectIri,facts:facts});}};mljs.prototype.semanticcontext.prototype.primeSimpleSuggest=function(){this.__d("primeSimpleSuggest");var sparql="SELECT DISTINCT ?suggestion WHERE {\n  ?s a <wibble> . \n  ?s <hasflibble> ?suggestion . \n  FILTER regex(?suggestion, \"Abc.*\", \"i\") \n} ORDER BY ASC(?suggestion) LIMIT 10";this.__d("primeSimpleSuggest: SPARQL: "+sparql);var self=this;this.db.sparql(sparql,function(result){self.__d("primeSimpleSuggest: RESPONSE: "+JSON.stringify(result.doc));});};mljs.prototype.semanticcontext.prototype.simpleSuggest=function(rdfTypeIri,predicateIri,startString_opt){this.__d("simpleSuggest");var sparql="SELECT DISTINCT ?suggestion WHERE {\n  ?s a <"+rdfTypeIri+"> . \n  ?s <"+predicateIri+"> ?suggestion . \n";if(undefined!=startString_opt){sparql+="  FILTER regex(?suggestion, \""+startString_opt+".*\", \"i\") \n";}
sparql+="} ORDER BY ASC(?suggestion) LIMIT 10";this.__d("simpleSuggest: SPARQL: "+sparql);var self=this;this.db.sparql(sparql,function(result){self.__d("RESPONSE: "+JSON.stringify(result.doc));if(result.inError){self._errorPublisher.publish(result.error);}else{self._suggestionsPublisher.publish({rdfTypeIri:rdfTypeIri,predicate:predicateIri,suggestions:result.doc});}});};mljs.prototype.semanticcontext.prototype.queryFacts=function(sparql){var self=this;self.db.sparql(sparql,function(result){self.__d("semanticcontext: _queryFacts: RESPONSE: "+JSON.stringify(result.doc));if(result.inError){self._errorPublisher.publish(result.error);}else{self._factsPublisher.publish(result.doc);}});};mljs.prototype.documentcontext=function(){this._highlighted=null;this._selected=null;this._allowableProperties=new Array();this._highlightedPublisher=new com.marklogic.events.Publisher();this._selectedPublisher=new com.marklogic.events.Publisher();this._contentPublisher=new com.marklogic.events.Publisher();this._propertiesPublisher=new com.marklogic.events.Publisher();this._errorPublisher=new com.marklogic.events.Publisher();this._confirmationPublisher=new com.marklogic.events.Publisher();this._facetsPublisher=new com.marklogic.events.Publisher();};mljs.prototype.documentcontext.prototype.addAllowableProperty=function(json){this._allowableProperties.push(json);};mljs.prototype.documentcontext.prototype.getAllowableProperty=function(propname){for(var i=0,max=this._allowableProperties.length,prop;i<max;i++){prop=this._allowableProperties[i];if(prop.name==propname){return prop;}}
return null;};mljs.prototype.documentcontext.prototype.getAllowableProperties=function(){return this._allowableProperties;};mljs.prototype.documentcontext.prototype.register=function(obj){var self=this;if(undefined!=obj.setDocumentContext){obj.setDocumentContext(this);}
if(undefined!=obj.updateDocumentContent){this._contentPublisher.subscribe(function(results){obj.updateDocumentContent(results)});}
if(undefined!=obj.updateDocumentProperties){this._propertiesPublisher.subscribe(function(results){obj.updateDocumentProperties(results)});}
if(undefined!=obj.updateOperation){this._confirmationPublisher.subscribe(function(msg){obj.updateOperation(msg)});}
if(undefined!=obj.updateDocumentFacets){this._facetsPublisher.subscribe(function(msg){obj.updateDocumentFacets(msg)});}
if(undefined!=obj.addDocumentSelectionListener){obj.addDocumentSelectionListener(function(docuri){self.select(docuri)});}
if(undefined!=obj.addDocumentHighlightListener){obj.addDocumentHighlightListener(function(docuri){self.highlight(docuri)});}};mljs.prototype.documentcontext.prototype.highlight=function(docuri){this._highlighted=docuri;this._highlightedPublisher.publish(docuri);};mljs.prototype.documentcontext.prototype.select=function(docuri){this._selected=docuri;this._selectedPublisher.publish(docuri);};mljs.prototype.documentcontext.prototype.getContent=function(docuri){var self=this;this.db.get(docuri,function(result){if(result.inError){self._errorPublisher.publish(result.detail);}else{self._contentPublisher.publish({docuri:docuri,doc:result.doc});}});};mljs.prototype.documentcontext.prototype.getProperties=function(docuri){var self=this;this.db.properties(docuri,function(result){if(result.inError){self._errorPublisher.publish(result.detail);}else{self._propertiesPublisher.publish({docuri:docuri,properties:result.doc});}});};mljs.prototype.documentcontext.prototype.setProperties=function(docuri,propertyJson){var self=this;this.db.saveProperties(docuri,propertyJson,function(result){self._confirmationPublisher.publish({docuri:docuri,operation:"setProperties",success:!result.inError,error:result.detail});self.getProperties(docuri);});};mljs.prototype.documentcontext.prototype.patchProperty=function(docuri,propertyXpath,propertXml){};mljs.prototype.documentcontext.prototype.getFacets=function(docuri,optionsName){var b=this.db.createQuery();b.query(b.uris("uriconstraint",docuri));var qj=b.toJson();var self=this;this.db.structuredSearch(qj,optionsName,function(result){if(undefined!=result.doc.facets){self._facetsPublisher.publish({docuri:docuri,facets:result.doc.facets});}});};mljs.prototype.sparqlbuilder=function(){this._exposedVariables=new Array();this._topTerms=new Array();this._allTerms=new Array();this._nextTermID=1;};mljs.prototype.sparqlbuilder.prototype.toSparql=function(){};mljs.prototype.sparqlbuilder.subject=function(rdftype){var tid=this._nextTermID++;return{termID:tid,sparql:"  ?s"+tid+" a <"+rdftype+"> .\n"};};mljs.prototype.sparqlbuilder.prototype.has=function(predicateIri){var tid=this._nextTermID++;return{termID:tid,sparql:"  ?s"+tid+" <"+predicateIri+"> ?o"+tid+" .\n"};};mljs.prototype.sparqlbuilder.prototype.with=function(childTerm){};mljs.prototype.geocontext=function(){this._localePublisher=new com.marklogic.events.Publisher();this._areas={};this._home=new Array();this._alwaysFallback=true;this._searchContexts=new Array();this._defaultConstraintName="location";};mljs.prototype.geocontext.prototype.register=function(widget){if(undefined!=widget.setGeoContext){widget.setGeoContext(this);}
if(undefined!=widget.updateLocale){this._localePublisher.subscribe(function(locale){widget.updateLocale(locale);});}};mljs.prototype.geocontext.prototype.inform=function(searchContext,name,constraint_opt){this._searchContexts.push({context:searchContext,name:name,constraint:constraint_opt});return this;};mljs.prototype.geocontext.prototype.clear=function(){this._searchContexts=new Array();return this;};mljs.prototype.geocontext.prototype.constraint=function(defaultConstraintName){this._defaultConstraintName=defaultConstraintName;return this;};mljs.prototype.geocontext.prototype.home=function(areaOrArray,alwaysFallback){this._home=areaOrArray;if(undefined!=alwaysFallback){this._alwaysFallback=alwaysFallback;}
return this;};mljs.prototype.geocontext.prototype.contributeArea=function(contributor,areaOrArray){if(null==areaOrArray||false===areaOrArray){this._areas[contributor]=[];}else{if(!Array.isArray(areaOrArray)){areaOrArray=[areaOrArray];}
this._areas[contributor]=areaOrArray;}
this._refresh();};mljs.prototype.geocontext.prototype._refresh=function(){for(var i=0,max=this._searchContexts.length,ctx;i<max;i++){ctx=this._searchContexts[i];var terms=new Array();var areas=this._areas;var addTerm=function(def){var t={"geospatial-constraint-query":{"constraint-name":ctx.constraint||this._defaultConstraintName}};for(var item in def){t["geospatial-constraint-query"][item]=def[item];}
terms.push(t);};for(var areaName in areas){var area=this._areas[areaName];for(var j=0,max=area.length,def;j<max;j++){def=area[j];addTerm(def);}}
if(0==terms.length&&this._alwaysFallback){addTerm(this._home);}
var query={"and-query":terms};ctx.context.contributeStructuredQuery(ctx.name,query);}
this._fireLocaleUpdate();};mljs.prototype.geocontext.prototype._fireLocaleUpdate=function(){var update={center:{latitude:0,longitude:0},bounds:{north:0,east:0,south:0,west:0},areas:[]};var areas=new Array();for(var areaName in this._areas){var area=this._areas[areaName];for(var i=0,max=area.length,def;i<max;i++){def=area[i];areas.push(def);}}
if(0==areas.length&&this._alwaysFallback){areas.push(this._home);}
update.areas=areas;var found=false;for(var i=0,max=areas.length,area;i<max&&!found;i++){area=areas[i];if(undefined!=area.circle){found=true;update.center=area.circle.point[0];}}
this._localePublisher.publish(update);};mljs.prototype.alertcontext=function(){this.supported=false;this.state="initialising";this.socket=null;this._alertPublisher=new com.marklogic.events.Publisher();this._statePublisher=new com.marklogic.events.Publisher();this._init();};mljs.prototype.alertcontext.prototype._init=function(){if("WebSocket"in window){this.supported=true;this._connect();}};mljs.prototype.alertcontext.prototype._connect=function(){try{var self=this;var host=window.location;var startPos=host.indexOf("://")+3;var colonPos=host.indexOf(":",startPos);var port=80;var slashPos=host.indexOf("/",startPos);if(-1!=colonPos){if(-1==slashPos){}else{port=1*host.substring(colonPos+1,slashPos);host=host.substring(startPos,colonPos);}}else{if(-1!=slashPos){host=host.substring(startPos,slashPos);}
else{host=host.substring(startPos);}}
host="ws://"+host+":"+port;this.socket=new WebSocket(host,"mljs-alerts");this.socket.onopen=function(){self.state="testing";self.socket.send(JSON.stringify({request:"test"}));};this.socket.onmessage=function(msg){var json=JSON.parse(msg.data);if(json.response=="test"){self._changeState("connected");}else{self._alertPublisher.publish(json);}};this.socket.onclose=function(){self._changeState("disconnected");};}catch(exception){self._changeState("connection_error");}};mljs.prototype.alertcontext.prototype.getState=function(){return this.state;};mljs.prototype.alertcontext.prototype._changeState=function(newState){this.state=newState;this._statePublisher.publish(newState);};mljs.prototype.alertcontext.prototype.register=function(wgt){if(undefined!=wgt.updateAlert){this._alertPublisher.subscribe(function(alert){wgt.updateAlert(alert);});}
if(undefined!=wgt.updateAlertState){this._statePublisher.subscribe(function(state){wgt.updateAlertState(state);});}};(function(){var asLogSink=(function(){function __d(msg){this.db.logger.debug(msg);};function __i(msg){this.db.logger.info(msg);};function __w(msg){this.db.logger.warn(msg);};function __e(msg){this.db.logger.error(msg);};return function(){this.__d=__d;this.__i=__i;this.__w=__w;this.__e=__e;return this;};})();asLogSink.call(mljs.prototype.options.prototype);asLogSink.call(mljs.prototype.query.prototype);asLogSink.call(mljs.prototype.searchcontext.prototype);asLogSink.call(mljs.prototype.geocontext.prototype);asLogSink.call(mljs.prototype.documentcontext.prototype);asLogSink.call(com.marklogic.semantic.tripleconfig.prototype);asLogSink.call(mljs.prototype.semanticcontext.prototype);})();mljs.prototype.textToXML=textToXML;mljs.prototype.xmlToJson=xmlToJson;mljs.prototype.xmlToText=xmlToText;