
com=window.com||{};com.marklogic=window.com.marklogic||{};com.marklogic.widgets=window.com.marklogic.widgets||{};com.marklogic.widgets.graphexplorer=function(container){this.container=container;this.documentContext=null;this.semanticContext=null;this.entities=new Array();this.properties=new Array();this.propertyCache=new Array();this.facetCache=new Array();this.drawWhenComplete=new Array();this.columnCount=new Array();this.searchOptionsName="default";this.columnWidths=new Array();this.rowHeights=new Array();this._existingPaths={};this._init();};com.marklogic.widgets.graphexplorer.prototype.checkColumnWidth=function(colnum,width){var curwidth=this.columnWidths[colnum];mljs.defaultconnection.logger.debug("checkColumnWidth: colnum: "+colnum+", curwidth: "+curwidth+", width: "+width);if(undefined==curwidth){curwidth=0;}
if(curwidth<width){this.columnWidths[colnum]=width;}};com.marklogic.widgets.graphexplorer.prototype.checkRowHeight=function(num,height){var cur=this.rowHeights[num];mljs.defaultconnection.logger.debug("checkRowHeight: rownum: "+num+", curheight: "+cur+", height: "+height);if(undefined==cur){cur=0;}
if(cur<height){this.rowHeights[num]=height;}};com.marklogic.widgets.graphexplorer.prototype.widthBefore=function(column){var width=0;for(var i=1;i<this.columnWidths.length&&i<column;i++){mljs.defaultconnection.logger.debug("widthBefore: i="+i+" => "+this.columnWidths[i]);width+=this.columnWidths[i];}
return width;};com.marklogic.widgets.graphexplorer.prototype.heightBefore=function(row){var height=0;for(var i=1;i<this.rowHeights.length&&i<row;i++){mljs.defaultconnection.logger.debug("heightBefore: i="+i+" => "+this.rowHeights[i]);height+=this.rowHeights[i];}
return height;};com.marklogic.widgets.graphexplorer.prototype.setSearchOptionsName=function(name){this.searchOptionsName=name;};com.marklogic.widgets.graphexplorer.prototype.getSearchOptionsName=function(){return this.searchOptionsName;};com.marklogic.widgets.graphexplorer.prototype.setDocumentContext=function(ctx){this.documentContext=ctx;};com.marklogic.widgets.graphexplorer.prototype.getDocumentContext=function(){return this.documentContext;};com.marklogic.widgets.graphexplorer.prototype.setSemanticContext=function(ctx){this.semanticContext=ctx;};com.marklogic.widgets.graphexplorer.prototype.getSemanticContext=function(){return this.semanticContext;};com.marklogic.widgets.graphexplorer.prototype._init=function(){var id=this.container+"-graphexplorer";var html="<div id='"+id+"' class='mljswidget panel panel-info graphexplorer'>";html+="  <div class='title panel-heading graphexplorer-title'>Graph Explorer</div>";html+="  <div id='"+id+"-content' class='panel-body graphexplorer-content'></div>";html+="</div>";document.getElementById(this.container).innerHTML=html;var chart=new Highcharts.Chart({chart:{renderTo:id+"-content",events:{load:function(){}},width:2000,height:2000}});var chartdiv=document.getElementById(this.container+"-graphexplorer-content").childNodes[0];chartdiv.style.overflow="scroll";chartdiv.style.width="100%";chartdiv.style.height="2050px";this.chart=chart;this.renderer=chart.renderer;};com.marklogic.widgets.graphexplorer.prototype._entityFromUI=function(elid){for(var i=0,max=this.entities.length,ent;i<max;i++){ent=this.entities[i];if(ent.htmlid==elid){return ent;}}
return null;};com.marklogic.widgets.graphexplorer.prototype._entityFromIRI=function(iri){for(var i=0,max=this.entities.length,ent;i<max;i++){ent=this.entities[i];if(ent.subjectiri==iri){return ent;}}
return null;};com.marklogic.widgets.graphexplorer.prototype._propertyFromUI=function(elid){for(var i=0,max=this.properties.length,prop;i<max;i++){prop=this.properties[i];if(prop.htmlid==elid){return prop;}}
return null;};com.marklogic.widgets.graphexplorer.prototype._loadSubjectInformation=function(iri){this.semanticContext.getFacts(iri,false);};com.marklogic.widgets.graphexplorer.prototype.updateSelectedSubject=function(subjectIri){};com.marklogic.widgets.graphexplorer.prototype._incrementColumnCount=function(column){var count=this._getColumnCount(column)+1;this.columnCount[column]=count;return count;};com.marklogic.widgets.graphexplorer.prototype._getColumnCount=function(column){var count=this.columnCount[column];if(undefined==count||"number"!==typeof(count)){count=0;this.columnCount[column]=count;}
return count;};com.marklogic.widgets.graphexplorer.prototype.drawSubject=function(subjectIri,parentIri,column,row){if(1==column&&1==row){this._incrementColumnCount(1);}
var x=20+(100*(column-1))+this.widthBefore(column);var y=40+(20*(row-1))+this.heightBefore(row);mljs.defaultconnection.logger.debug("drawSubject: x="+x+", y="+y);var ren=this.renderer;var colors=Highcharts.getOptions().colors;var box=ren.label('<b>Loading...</b>',x,y).attr({fill:"white",stroke:colors[0],'stroke-width':4,padding:6,r:8}).css({color:colors[0]}).add().shadow(true);var ent={parentiri:parentIri,subjectiri:subjectIri,docuri:null,subjectsfacts:new Array(),column:column,row:row,jswrapper:box,jslinkboxes:[]};this.entities.push(ent);this.semanticContext.getFacts(subjectIri,false);return ent;};com.marklogic.widgets.graphexplorer.prototype._drawSubjectDetail=function(subjectIri,facts){var ent=this._entityFromIRI(subjectIri);if(null==ent){mljs.defaultconnection.logger.debug("graphexplorer._drawSubjectDetail: No node for element: "+subjectIri+", so not drawing anything to represent it.");return;}
if(null!=ent.jswrapper){ent.jswrapper.destroy();var boxes=ent.jslinkboxes;for(var i=0,b,max=boxes.length;i<max;i++){boxes[i].destroy();}
ent.jslinkboxes=[];}
var ren=this.renderer;var colors=Highcharts.getOptions().colors;var column=ent.column;var row=ent.row;var x=20+(100*(column-1))+this.widthBefore(column);var y=40+(20*(row-1))+this.heightBefore(row);mljs.defaultconnection.logger.debug("_drawSubjectDetail: x="+x+", y="+y);var scfg=this.semanticContext.getConfiguration();var propValues=new Array();var props="";var title=subjectIri;var docuri=null;var type="Unknown";for(var b=0,bindings=facts.results.bindings,max=bindings.length,predicate,obj,binding;b<max;b++){binding=bindings[b];predicate=binding.predicate;var pinfo=scfg.getPredicateFromIRI(predicate.value);var obj=binding.object;if(predicate.value!="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"){var t=predicate.value;if(undefined!=pinfo){t=pinfo.title;}
var ttitle=t;if(ttitle==predicate.value){ttitle=this._shortenSubjectIri(predicate.value);}
propValues[predicate.value]={value:obj.value,title:ttitle,type:obj.type};if(predicate.value=="http://marklogic.com/semantics/ontology/Document#uri"){docuri=obj.value;}}else{type=obj.value;}}
var predEntity=scfg.getEntityFromIRI(type);var baseType=type;mljs.defaultconnection.logger.debug("***PREDENTITY: "+JSON.stringify(predEntity));if(undefined!=predEntity&&undefined!=predEntity.name){type=predEntity.title;var namepredicate=scfg.getNameProperty(predEntity.name).iri;if(undefined!=namepredicate){var predValue=propValues[namepredicate];if(undefined!=predValue){title=predValue.value;}else{}}}else{type=this._shortenSubjectIri(type);}
if(title==subjectIri){title=this._shortenSubjectIri(subjectIri);}
mljs.defaultconnection.logger.debug("Type Processing: "+type);mljs.defaultconnection.logger.debug("Base Type Processing: "+baseType);var loadingContent=false;if("http://marklogic.com/semantics/ontology/Document"==baseType){var uri=docuri;var facets=this.facetCache[uri];if(null==facets){mljs.defaultconnection.logger.debug("PROCESSING ML DOCUMENT SUBJECT: "+subjectIri);loadingContent=true;this.documentContext.getFacets(uri,this.searchOptionsName);}else{for(facet in facets){var values=facets[facet].facetValues;var max=values.length;var facetValues="";for(var v=0;v<max;v++){var fv=values[v];if(v>0){facetValues+=", ";}
facetValues+=fv.name;}
if(""!=facetValues){propValues[facet]={value:facetValues,title:facet,type:"facet"};}}}}
var summaries=new Array();var relnum=0;var self=this;var addshow=function(relbox,rn,left,top,piri,riri){var msgbox;relbox.on("mouseover",function(){msgbox=ren.label(rn,left+18,top-7).attr({fill:"white",stroke:colors[4],'stroke-width':4,padding:6,r:8}).css({color:colors[0]}).add().shadow(true);}).on("mouseout",function(){msgbox.destroy();}).on("click",function(){mljs.defaultconnection.logger.debug("RELATION CLICKED: piri: "+piri+", riri: "+riri);var existingent=self._entityFromIRI(riri);var targetrow=1;var targetcol=1;if(undefined==existingent){var newcol=ent.column+1;var newrow=self._incrementColumnCount(newcol);self.drawSubject(riri,piri,newcol,newrow);targetrow=newrow;targetcol=newcol;}else{targetrow=existingent.row;targetcol=existingent.column;if(undefined!=self._existingPaths[piri][riri]){return;}}
var starttop=top+5;var startleft=left+5;var endtop=27+5+(20*(targetrow-1))+self.heightBefore(targetrow);if(endtop<52){endtop=52;}
endtop+=25;var endleft=13+(100*(targetcol-1))+self.widthBefore(targetcol);var dy=1.0*(endtop-starttop);var dx=1.0*(endleft-startleft);var theta=1.0*Math.atan(dy/dx);var length=7.0;var fourtyfive=Math.PI*0.25;var beta=theta+fourtyfive;var alpha=fourtyfive-theta;mljs.defaultconnection.logger.debug("startleft: "+startleft+", starttop: "+starttop+", endleft: "+endleft+", endtop: "+endtop+", dy: "+dy+", dx: "+dx+", theta: "+theta+", alpha: "+alpha+", beta: "+beta+", length: "+length);var aLeftTop=(1.0*endtop)-(length*Math.cos(alpha));var aLeftLeft=(1.0*endleft)-(length*Math.sin(alpha));var aRightTop=(1.0*endtop)+(length*Math.cos(beta));var aRightLeft=(1.0*endleft)-(length*Math.sin(beta));var pth=ren.path(['M',startleft,starttop,'L',endleft,endtop,'L',aLeftLeft,aLeftTop,'M',aRightLeft,aRightTop,'L',endleft,endtop]).attr({'stroke-width':2,stroke:colors[0]}).add();self._existingPaths[piri]=self._existingPaths[piri]||{};self._existingPaths[piri][riri]=pth;});};var infos=new Array();for(var propname in propValues){if(propValues.hasOwnProperty(propname)){mljs.defaultconnection.logger.debug("PROPERTY TO LIST: "+propname);prop=propValues[propname];var propShow=prop.value;if("uri"==prop.type){var relname=this._generateNameLink(prop.value);if(null==relname){var propCount=this.propertyCount++;var elid=this.container+"-loadname-"+propCount;propShow="<span id='"+elid+"'>"+this._shortenSubjectIri(prop.value)+"</span>";summaries.push(prop.value);}else{propShow=relname;infos.push({relname:relname,propname:propname,propvalue:prop.value});}}
props+="<b>"+prop.title+":</b> "+propShow+"<br/>";}}
var drawrel=function(x,y,info){var left=x+5+6;var top=y+7+(17*relnum++);var relbox=ren.rect(left,top,10,10,2).attr({'stroke-width':4,stroke:colors[0],fill:colors[0]}).add();ent.jslinkboxes.push(relbox);addshow(relbox,info.relname,left,top,info.propname,info.propvalue);};var s="<b>"+title+"</b><br/><i>"+type+"</i><br/><br/>"+props;if(loadingContent){s+="<br/><b><i>Loading...</i></b>";}
var box=ren.label(s,x,y).attr({fill:"white",stroke:colors[0],'stroke-width':4,padding:6,r:8}).css({color:colors[0]}).add().shadow(true);ent.jswrapper=box;for(var i=0,max=infos.length,info;i<max;i++){info=infos[i];drawrel(x+box.width,y,info);}
this.checkColumnWidth(column,box.width);this.checkRowHeight(row,box.height);var exists=false;for(var i=0;!exists&&i<this.drawWhenComplete.length;i++){exists=(this.drawWhenComplete[i].subject==subjectIri);}
if(!exists){this.drawWhenComplete.push({subject:subjectIri,dependencies:summaries});for(var i=0,max=summaries.length,summary;i<max;i++){summary=summaries[i];this.semanticContext.getFacts(summary);}}};com.marklogic.widgets.graphexplorer.prototype._shortenSubjectIri=function(iri){var pos=iri.lastIndexOf("#");if(-1==pos){pos=iri.lastIndexOf("/");if(-1==pos){return iri;}}
return iri.substring(pos+1);};com.marklogic.widgets.graphexplorer.prototype._generateNameLink=function(subjectIri){var name=this._getSubjectName(subjectIri);if(null==name){return null;}else{return name;}};com.marklogic.widgets.graphexplorer.prototype._getSubjectName=function(subjectIri){var cache=this.propertyCache[subjectIri];mljs.defaultconnection.logger.debug("getSubjectName: properties for: "+subjectIri+" :- "+JSON.stringify(cache));if(null==cache){return null;}
var type=this._getSubjectPredicate(cache,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type");if(null==type){mljs.defaultconnection.logger.debug("getSubjectName: type null, returning shortened subject iri");return this._shortenSubjectIri(subjectIri);}
var scfg=this.semanticContext.getConfiguration();var predEntity=scfg.getEntityFromIRI(type);if(undefined==predEntity||undefined==predEntity.name){mljs.defaultconnection.logger.debug("getSubjectName: predEntity null, returning shortened subject iri");return this._shortenSubjectIri(subjectIri);}
var namepredicate=scfg.getNameProperty(predEntity.name).iri;if(undefined==namepredicate){mljs.defaultconnection.logger.debug("getSubjectName: namepredicate null, returning shortened subject iri");return this._shortenSubjectIri(subjectIri);}
var pred=this._getSubjectPredicate(cache,namepredicate);if(null==pred){mljs.defaultconnection.logger.debug("getSubjectName: Cached predicate null, returning shortened subject iri");return this._shortenSubjectIri(subjectIri);}
return pred;};com.marklogic.widgets.graphexplorer.prototype._getSubjectPredicate=function(cache,predIri){mljs.defaultconnection.logger.debug("_getSubjectPredicate: loading predicate from cache. Predicate: "+predIri+" cache:- "+JSON.stringify(cache));for(var b=0,bindings=cache.results.bindings,max=bindings.length,predicate,obj,binding;b<max;b++){binding=bindings[b];predicate=binding.predicate;if(predIri==predicate.value){return binding.object.value;}}
return null;};com.marklogic.widgets.graphexplorer.prototype.updateSubjectFacts=function(result){mljs.defaultconnection.logger.debug("graphexplorer.updateSubjectFacts: "+result.subject);this.propertyCache[result.subject]=result.facts;this._drawSubjectDetail(result.subject,result.facts);var newDrawWhenComplete=new Array();mljs.defaultconnection.logger.debug("graphexplorer.updateSubjectFacts: Entering drawWhenComplete loop...");for(var i=0,max=this.drawWhenComplete.length,doc;i<max;i++){doc=this.drawWhenComplete[i];mljs.defaultconnection.logger.debug("graphexplorer.updateSubjectFacts: drawWhenComplete subject: "+doc.subject);var gotall=true;for(var s=0,smax=doc.dependencies.length,dep;s<smax&&gotall;s++){dep=doc.dependencies[s];mljs.defaultconnection.logger.debug("graphexplorer.updateSubjectFacts: drawWhenComplete subject: "+doc.subject+" dependency: "+dep);if(null==this.propertyCache[dep]){gotall=false;}}
if(gotall){mljs.defaultconnection.logger.debug("graphexplorer.updateSubjectFacts: Got All for: "+doc.subject+", redrawing");this._drawSubjectDetail(doc.subject,this.propertyCache[doc.subject]);}else{mljs.defaultconnection.logger.debug("graphexplorer.updateSubjectFacts: Not got all for: "+doc.subject+" after loading facts for: "+result.subject);newDrawWhenComplete.push(doc);}}
mljs.defaultconnection.logger.debug("graphexplorer.updateSubjectFacts: Left drawWhenComplete loop.");this.drawWhenComplete=newDrawWhenComplete;};com.marklogic.widgets.graphexplorer.prototype.updateDocumentFacets=function(result){var uri=result.docuri;console.log("graphexplorer.updateDocumentFacets: URI: "+uri);this.facetCache[uri]=result.facets;var iri="http://marklogic.com/semantics/ontology/Document"+uri;var flen=0;if(undefined!=result.facets){flen=result.facets.length;}
console.log("graphexplorer.updateDocumentFacets: facet count: "+flen);var plen=0;if(undefined!=this.propertyCache[iri]){plen=this.propertyCache[iri].length;}
console.log("graphexplorer.updateDocumentFacets: prop count: "+plen);this._drawSubjectDetail(iri,this.propertyCache[iri]);};com.marklogic.widgets.graphexplorer.prototype._dropped=function(propelid){var prop=this._propertyFromUI(propelid);var entity=this._entityFromUI(prop.parentid);var scfg=this.semanticContext.getConfiguration();var predicate=scfg.getPredicateInfo(prop.predicate);};