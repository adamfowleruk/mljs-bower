
com=window.com||{};com.marklogic=window.com.marklogic||{};com.marklogic.widgets=window.com.marklogic.widgets||{};com.marklogic.widgets.semantichelper={};com.marklogic.widgets.semantichelper.summariseInto=function(ctx,iri,type,elid,iriHandler){mljs.defaultconnection.logger.debug("semantichelper.summariseInto: IRI: "+iri+", elid: "+elid+", ctx: "+ctx+", type: "+type+", iriHandler: "+iriHandler);var lookupIri=iri;var useSubjectAngle=true;if(type=="bnode"){lookupIri="_:"+iri;useSubjectAngle=false;}
var ts="SELECT ?rdftype WHERE {";if(useSubjectAngle){ts+="<";}
ts+=lookupIri;if(useSubjectAngle){ts+=">";}
var addClickHandler=function(el,chiri){mljs.defaultconnection.logger.debug("chel: "+el);mljs.defaultconnection.logger.debug("chiri: "+chiri);el.onclick=function(event){iriHandler(chiri);};};var sumsimple=function(subjectIri){var theel=document.getElementById(elid);if(undefined!=theel){var s="";if(null!=iriHandler){s+="<a href='#' id='"+elid+"-link'>";}
s+=subjectIri;if(null!=iriHandler){s+="</a>";}
theel.innerHTML=s;var el=document.getElementById(elid+"-link");mljs.defaultconnection.logger.debug("elid: "+elid);mljs.defaultconnection.logger.debug("el: "+el);mljs.defaultconnection.logger.debug("subjectIri: "+subjectIri);addClickHandler(el,subjectIri);}};ts+=" <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?rdftype . } LIMIT 1";mljs.defaultconnection.logger.debug("TS: "+ts);mljs.defaultconnection.sparql(ts,function(result){if(result.inError){sumsimple(lookupIri);}else{mljs.defaultconnection.logger.debug("semantichelper.summariseInto: TYPERESPONSE: "+JSON.stringify(result.doc));var firstbinding=result.doc.results.bindings[0];if(undefined!=firstbinding){var entityinfo=ctx.getConfiguration().getEntityFromIRI(firstbinding.rdftype.value);mljs.defaultconnection.logger.debug("semantichelper.summariseInto: entityInfo: "+JSON.stringify(entityinfo));var nameprop=ctx.getConfiguration().getNameProperty(entityinfo.iri).iri;mljs.defaultconnection.logger.debug("semantichelper.summariseInto: nameprop: "+nameprop);if(undefined==nameprop){sumsimple(lookupIri);}else{var ns="SELECT ?name WHERE {";if(useSubjectAngle){ns+="<";}
ns+=lookupIri;if(useSubjectAngle){ns+=">";}
ns+=" <"+nameprop+"> ?name . } LIMIT 1";mljs.defaultconnection.logger.debug("NS: "+ns);mljs.defaultconnection.sparql(ns,function(result2){if(result2.inError){sumsimple(lookupIri);}else{if(undefined!=result2.doc.results&&undefined!=result2.doc.results.bindings&&result2.doc.results.bindings.length>0){var el=document.getElementById(elid);if(undefined!=el){var cn=result2.doc.results.bindings[0].name.value;var s="";if(null!=iriHandler){s+="<a href='#' id='"+elid+"-link'>";}
s+=cn+" ("+entityinfo.title+")";if(null!=iriHandler){s+="</a>";}
el.innerHTML=s;if(null!=iriHandler){var el=document.getElementById(elid+"-link");addClickHandler(el,lookupIri);}}else{sumsimple(lookupIri);}}else{mljs.defaultconnection.logger.debug("This query returns no bindings (results): "+ts);mljs.defaultconnection.logger.debug("Result instead: "+JSON.stringify(result2.doc));sumsimple(lookupIri);}}});}}else{sumsimple(lookupIri);}}});};com.marklogic.widgets.sparqlbar=function(container){this.container=container;this.semanticcontext=mljs.defaultconnection.createSemanticContext();this._config={suggestionsEnabled:true,uggestionMinimumCharacters:3,suggestionRdfTypeIri:null,suggestionPredicateIri:null,suggestionDestinationElementId:null,lang:"en"};this.terms=0;this._hierarchy=new Array();this._allterms=new Array();this._parentterms=new Array();this.errorPublisher=new com.marklogic.events.Publisher();this.refresh();};com.marklogic.widgets.sparqlbar.getConfigurationDefinition=function(){return{suggestionsEnabled:{type:"boolean",default:"true",title:"Enabled",description:"Do we lookup suggestions for intrinsic fields?"},suggestionRdfTypeIri:{type:"string",default:null,title:"RDF Type IRI",description:"RDF Type to lookup suggestions from."},suggestionPredicateIri:{type:"string",default:null,title:"Predicate IRI",description:"Suggestion full predicate Iri."},suggestionDestinationElementId:{type:"string",default:null,title:"Destination Element Id",description:"Which element, if any, to send suggestion outputs to."},lang:{type:"string",default:"en",title:"Language",description:"Default 2 character language for string elements."}};};com.marklogic.widgets.sparqlbar.prototype.setConfiguration=function(config){for(var prop in config){this._config[prop]=config[prop];}
this.refresh();};com.marklogic.widgets.sparqlbar.prototype.setLang=function(lang){this._lang=lang;};com.marklogic.widgets.sparqlbar.prototype.setSemanticContext=function(sc){this.semanticcontext=sc;sc.primeSimpleSuggest();this.refresh();};com.marklogic.widgets.sparqlbar.prototype.updateSuggestions=function(suggestions){if(undefined!=suggestions&&suggestions.rdfTypeIri==this._config.suggestionRdfTypeIri&&suggestions.predicate==this._config.suggestionPredicateIri){var elss=document.getElementById(this.container+"-sparqlbar-suggestions");var arr=suggestions.suggestions.results.bindings;var len=arr.length;var s="";var links=new Array();for(var b=0;b<len;b++){var link={index:b,suggestion:arr[b].suggestion.value};links.push(link);s+="<p class='sparqlbar-suggestion' id='"+this.container+"-sparqlbar-suggestion-"+b+"'>"+link.suggestion+"</p>";}
if(""==s){s="<i id='"+this.container+"-sparqlbar-nosuggestion'>No Suggestions</i>";}
elss.innerHTML=s;var self=this;var addClickHandler=function(el,suggestion){el.onclick=function(event){if(null!=self._config.suggestionDestinationElementId&&""!=self._config.suggestionDestinationElementId){document.getElementById(self._config.suggestionDestinationElementId).value=suggestion;}
self._hidden(elss,true);self._config.suggestionRdfTypeIri=null;self._config.suggestionPredicateIri=null;self._config.suggestionDestinationElementId=null;e.stopPropagation();return false;}};for(var l=0,max=links.length;l<max;l++){addClickHandler(document.getElementById(this.container+"-sparqlbar-suggestion-"+links[l].index),links[l].suggestion);}
var nosug=document.getElementById(this.container+"-sparqlbar-nosuggestion");if(null!=nosug){nosug.onclick=function(e){self._hidden(elss,true);self._config.suggestionRdfTypeIri=null;self._config.suggestionPredicateIri=null;self._config.suggestionDestinationElementId=null;e.stopPropagation();return false;};}}};com.marklogic.widgets.sparqlbar.prototype.refresh=function(){var s="";s+="<div id='"+this.container+"-sparqlbar' class='mljswidget sparqlbar'><div class='well sparqlbar-inner'>";s+="  <div id='"+this.container+"-sparqlbar-suggestions' class='sparqlbar-suggestions hidden'><i>None</i></div>";s+="  <div class='sparqlbar-for'>Search for: ";s+="    <select class='sparqlbar-for-what' id='"+this.container+"-sparqlbar-what'>";s+="      <option value='_entities'>All Subjects</option>";var first=true;var ents=this.semanticcontext.getConfiguration()._newentities;for(var nom in ents){var ent=ents[nom];if(undefined!=ent&&"function"!=typeof ent){s+="    <option value='"+ent.name+"'";if(first){s+=" selected='selected'";first=false;}
s+=">"+ent.title+"</option>";}}
s+="</select> which <a class='sparqlbar-add-link' id='"+this.container+"-sparqlbar-add-link' href='#'><span title='Add child term' class='glyphicon glyphicon-plus sparqlbar-add'> </span></a></div>";s+="<div id='"+this.container+"-sparqlbar-terms' class='sparqlbar-terms'></div>";s+="<div><button type='submit' class='btn btn-primary sparqlbar-button' id='"+this.container+"-sparqlbar-button'>Search</button></div>";s+="</div></div>";document.getElementById(this.container).innerHTML=s;var self=this;document.getElementById(this.container+"-sparqlbar-button").onclick=function(e){self._doQuery();e.stopPropagation();return false;};document.getElementById(this.container+"-sparqlbar-add-link").onclick=function(e){self._addTerm();e.stopPropagation();return false;};document.getElementById(this.container+"-sparqlbar-what").onchange=function(e){for(var i=0;i<self._allterms.length;i++){self._updateTerm(self._allterms[i].tid);}};this._addTerm();};com.marklogic.widgets.sparqlbar.prototype._addTerm=function(parentid){var tid=this.terms++;var json={tid:tid,children:[]};if(undefined==parentid){this._hierarchy.push(json);}else{this._allterms[parentid].children.push(json);this._parentterms[tid]=parentid;}
this._allterms[tid]=json;var s="<div class='sparqlbar-term' id='"+this.container+"-sparqlbar-term-"+tid+"'>";s+="<select class='sparqlbar-term' id='"+this.container+"-sparqlbar-term-what-"+tid+"'><option selected='selected' value='*'>Are related to</option><option value='='>Have property</option></select>";s+="<select class='sparqlbar-term-relatedtype' id='"+this.container+"-sparqlbar-term-relatedtype-"+tid+"'>";var first=true;var ents=this.semanticcontext.getConfiguration()._newentities
for(var nom in ents){var ent=ents[nom];if(undefined!=ent&&"function"!==typeof ent){s+="<option value='"+ent.name+"'";if(first){s+=" selected='selected'";first=false;}
s+=">"+ent.title+"</option>";}}
s+=" [+]</select> ";s+="<span id='"+this.container+"-sparqlbar-term-asa-"+tid+"'>as a </span>";s+="<select class='sparqlbar-term-relationship' id='"+this.container+"-sparqlbar-term-relationship-"+tid+"'>";s+="</select> ";s+="<span id='"+this.container+"-sparqlbar-term-rel-"+tid+"'>relationship</span>";s+="<span class='hidden' id='"+this.container+"-sparqlbar-term-prop-"+tid+"'>with property </span>";s+="<select id='"+this.container+"-sparqlbar-term-properties-"+tid+"' class='hidden'>";s+="</select>";s+="<span class='hidden' id='"+this.container+"-sparqlbar-term-eq-"+tid+"'> equal to </span>";s+="<select class='hidden' id='"+this.container+"-sparqlbar-term-oper-"+tid+"'>";s+="<option value='='>equal to</option>";s+="<option value='!='>not equal to</option>";s+="<option value='lt'>less than</option>";s+="<option value='lte'>less than or equal to</option>";s+="<option value='gt'>greater than</option>";s+="<option value='gte'>greater than or equal to</option>";s+="</select>";s+="<input type='text' length='20'  class='sparqlbar-term-value hidden' id='"+this.container+"-sparqlbar-term-value-"+tid+"'/>";s+="<span class='sparlbar-term-and hidden' id='"+this.container+"-sparqlbar-term-"+tid+"-and'>; AND</span>";s+=" <a href='#' id='"+this.container+"-sparqlbar-term-"+tid+"-remove'><span class='glyphicon glyphicon-minus sparqlbar-term-remove' title='Remove term'> </span></a> ";s+="<a href='#' id='"+this.container+"-sparqlbar-term-"+tid+"-addchild'><span title='Add child term' id='"+this.container+"-sparqlbar-term-"+tid+"-addspan' class='glyphicon glyphicon-plus sparqlbar-term-addchild'> </span></a>";s+="<div id='"+this.container+"-sparqlbar-term-"+tid+"-children' class='sparqlbar-term'></div>";s+="</div>";if(undefined==parentid){com.marklogic.widgets.appendHTML(document.getElementById(this.container+"-sparqlbar-terms"),s);}else{com.marklogic.widgets.appendHTML(document.getElementById(this.container+"-sparqlbar-term-"+parentid+"-children"),s);}
this._updateRelationships(tid);this._updateProperties(tid);var self=this;document.getElementById(this.container+"-sparqlbar-term-what-"+tid).onchange=function(el){self._updateTerm(tid);self._updateRelationships(tid);self._updateProperties(tid);};document.getElementById(this.container+"-sparqlbar-term-relatedtype-"+tid).onchange=function(el){self._updateRelationships(tid);};document.getElementById(this.container+"-sparqlbar-term-value-"+tid).onkeyup=function(el){self._suggest(tid);};document.getElementById(this.container+"-sparqlbar-term-properties-"+tid).onchange=function(el){self._refreshOperation(tid);};document.getElementById(this.container+"-sparqlbar-term-"+tid+"-addchild").onclick=function(){self._addTerm(tid);};document.getElementById(this.container+"-sparqlbar-term-"+tid+"-remove").onclick=function(){self._removeTerm(tid);};};com.marklogic.widgets.sparqlbar.prototype._suggest=function(tid){mljs.defaultconnection.logger.debug("sparqlbar._suggest: tid: "+tid);var el=document.getElementById(this.container+"-sparqlbar-term-value-"+tid);var value=el.value;mljs.defaultconnection.logger.debug("sparqlbar._suggest: el.value: "+value);if(value.length>=this._suggestionMinimumCharacters){mljs.defaultconnection.logger.debug("sparqlbar._suggest: Firing suggest action");this._suggestionDestinationElementId=el.getAttribute("id");mljs.defaultconnection.logger.debug("sparqlbar._suggest: destination el id: "+this._suggestionDestinationElementId);var predicateName=document.getElementById(this.container+"-sparqlbar-term-properties-"+tid).value;mljs.defaultconnection.logger.debug("sparqlbar._suggest: predicateName: "+predicateName);var parentType=this._getParentType(tid);var scfg=this.semanticcontext.getConfiguration();mljs.defaultconnection.logger.debug("sparqlbar._suggest: parentType: "+parentType);var parentInfo=scfg.getEntityFromName(parentType);mljs.defaultconnection.logger.debug("sparqlbar._suggest: parentInfo: "+JSON.stringify(parentInfo));var predicateInfo=scfg.getEntityProperty(parentInfo,predicateName);mljs.defaultconnection.logger.debug("sparqlbar._suggest: predicateInfo: "+JSON.stringify(predicateInfo));this._suggestionRdfTypeIri=parentInfo.rdfTypeIri;this._suggestionPredicateIri=predicateInfo.iri;mljs.defaultconnection.logger.debug("sparqlbar._suggest: rdfTypeIri: "+this._suggestionRdfTypeIri+", predicateIri: "+this._suggestionPredicateIri+", suggestion el id: "+this._suggestionDestinationElementId);mljs.defaultconnection.logger.debug("sparqlbar._suggest: destination id value: "+value);var rect=el.getBoundingClientRect();var suggestel=document.getElementById(this.container+"-sparqlbar-suggestions");suggestel.setAttribute("style","left: "+el.offsetLeft+"px; top: "+(el.offsetTop+el.offsetHeight)+"px;");suggestel.innerHTML="<i>Loading suggestions...</i>";this._hidden(suggestel,false);this.semanticcontext.simpleSuggest(this._suggestionRdfTypeIri,this._suggestionPredicateIri,value);}};com.marklogic.widgets.sparqlbar.prototype._hidden=function(el,isHidden){if(isHidden){var found=false;var attr=el.getAttribute("class");if(undefined!=attr){var attrs=attr.split(" ");for(var i=0;!found&&i<attrs.length;i++){found=("hidden"==attrs[i]);}}
if(!found){el.setAttribute("class",attr+" hidden");}}else{var attr=el.getAttribute("class");var newClass="";if(undefined!=attr){var attrs=attr.split(" ");for(var i=0;!found&&i<attrs.length;i++){if("hidden"!=attrs[i]){newClass+=attrs[i]+" ";}}}
el.setAttribute("class",newClass);}};com.marklogic.widgets.sparqlbar.prototype._getRootType=function(){return document.getElementById(this.container+"-sparqlbar-what").value;};com.marklogic.widgets.sparqlbar.prototype._updateRelationships=function(tid){mljs.defaultconnection.logger.debug("_updateRelationships: tid: "+tid);var parentType=this._getParentType(tid);var s="";var me=document.getElementById(this.container+"-sparqlbar-term-relatedtype-"+tid).value;mljs.defaultconnection.logger.debug("_updateRelationships: RELATING PARENT: "+parentType+" TO ME: "+me);var config=this.semanticcontext.getConfiguration();var rels=config.getValidPredicates(parentType,me);for(var i=0,max=rels.length,rel;i<max;i++){rel=rels[i];var relinfo=config.getPredicateFromIRI(rel);s+="<option value='"+rel+"'";if(0==i){s+=" selected='selected'";}
s+=">"+relinfo.title+"</option>";}
document.getElementById(this.container+"-sparqlbar-term-relationship-"+tid).innerHTML=s;};com.marklogic.widgets.sparqlbar.prototype._updateProperties=function(tid){mljs.defaultconnection.logger.debug("_updateProperties: tid: "+tid);var parentType=this._getParentType(tid);if(parentType.indexOf("_")==0){return;}
var parentInfo=this.semanticcontext.getConfiguration().getEntityFromName(parentType);mljs.defaultconnection.logger.debug("_updateProperties: from PARENT: "+parentType);var s="";var props=parentInfo.properties;for(var i=0,max=props.length,propname;i<max;i++){propname=props[i].name;s+="<option value='"+propname+"'";if(0==i){s+=" selected='selected'";}
s+=">"+propname+"</option>";}
document.getElementById(this.container+"-sparqlbar-term-properties-"+tid).innerHTML=s;};com.marklogic.widgets.sparqlbar.prototype._getParentType=function(tid){var top=null;var parent=this._parentterms[tid];if(null!=parent&&undefined!=parent){top=document.getElementById(this.container+"-sparqlbar-term-relatedtype-"+parent).value;}
if(null==top){top=document.getElementById(this.container+"-sparqlbar-what").value;}
return top;};com.marklogic.widgets.sparqlbar.prototype._getParentPredicate=function(tid){var top=null;var parent=this._parentterms[tid];if(null!=parent&&undefined!=parent){top=document.getElementById(this.container+"-sparqlbar-term-relationship-"+parent).value;}
return top;};com.marklogic.widgets.sparqlbar.prototype._removeTerm=function(tid){mljs.defaultconnection.logger.debug("_removeTerm: tid: "+tid);var children=this._allterms[tid].children;for(var c=0,max=children.length;c<max;c++){this._removeTerm(children[c].tid);}
var parentid=this._parentterms[tid];if(undefined!=parentid){var newc=new Array();var childs=this._allterms[parentid].children;for(var nc=0,max=childs.length,child;nc<max;nc++){child=childs[nc];if(child.tid!=tid){newc.push(child);}
this._allterms[parentid].children=newc;}}
var el=document.getElementById(this.container+"-sparqlbar-term-"+tid);el.parentNode.removeChild(el);this._allterms[tid]=undefined;this._parentterms[tid]=undefined;};com.marklogic.widgets.sparqlbar.prototype._updateTerm=function(termid){var what=document.getElementById(this.container+"-sparqlbar-term-what-"+termid).value;if("*"==what){var rel=document.getElementById(this.container+"-sparqlbar-term-relationship-"+termid);this._hidden(rel,false);var rel=document.getElementById(this.container+"-sparqlbar-term-relatedtype-"+termid);this._hidden(rel,false);var rel=document.getElementById(this.container+"-sparqlbar-term-asa-"+termid);this._hidden(rel,false);var rel=document.getElementById(this.container+"-sparqlbar-term-rel-"+termid);this._hidden(rel,false);var addterm=document.getElementById(this.container+"-sparqlbar-term-"+termid+"-addspan");this._hidden(addterm,false);var val=document.getElementById(this.container+"-sparqlbar-term-value-"+termid);this._hidden(val,true);var val=document.getElementById(this.container+"-sparqlbar-term-properties-"+termid);this._hidden(val,true);var val=document.getElementById(this.container+"-sparqlbar-term-prop-"+termid);this._hidden(val,true);var val=document.getElementById(this.container+"-sparqlbar-term-eq-"+termid);this._hidden(val,true);var val=document.getElementById(this.container+"-sparqlbar-term-oper-"+termid);this._hidden(val,true);}else{var rel=document.getElementById(this.container+"-sparqlbar-term-relationship-"+termid);this._hidden(rel,true);var rel=document.getElementById(this.container+"-sparqlbar-term-relatedtype-"+termid);this._hidden(rel,true);var rel=document.getElementById(this.container+"-sparqlbar-term-asa-"+termid);this._hidden(rel,true);var rel=document.getElementById(this.container+"-sparqlbar-term-rel-"+termid);this._hidden(rel,true);var addterm=document.getElementById(this.container+"-sparqlbar-term-"+termid+"-addspan");this._hidden(addterm,true);var val=document.getElementById(this.container+"-sparqlbar-term-value-"+termid);this._hidden(val,false);var val=document.getElementById(this.container+"-sparqlbar-term-properties-"+termid);this._hidden(val,false);var val=document.getElementById(this.container+"-sparqlbar-term-prop-"+termid);this._hidden(val,false);this._refreshOperation(termid)}};com.marklogic.widgets.sparqlbar.prototype._refreshOperation=function(termid){mljs.defaultconnection.logger.debug("refreshOperation: termid: "+termid);var propvalue=document.getElementById(this.container+"-sparqlbar-term-properties-"+termid).value;mljs.defaultconnection.logger.debug("refreshOperation: propvalue: "+propvalue);var parentid=this._parentterms[termid];var parententityname="";if(undefined==parentid){parententityname=document.getElementById(this.container+"-sparqlbar-what").value;}else{parententityname=document.getElementById(this.container+"-sparqlbar-term-relatedtype-"+parentid).value;}
mljs.defaultconnection.logger.debug("Property Info: propvalue: "+propvalue+", parentid: "+parentid+", parententityname: "+parententityname);var scfg=this.semanticcontext.getConfiguration();var entity=scfg.getEntityFromName(parententityname);mljs.defaultconnection.logger.debug("Property Info: entity: "+JSON.stringify(entity));var predinfo=scfg.getEntityProperty(entity,propvalue);mljs.defaultconnection.logger.debug("Property Info: predinfo: "+JSON.stringify(predinfo));if(undefined==predinfo.type){var val=document.getElementById(this.container+"-sparqlbar-term-eq-"+termid);this._hidden(val,false);val=document.getElementById(this.container+"-sparqlbar-term-oper-"+termid);this._hidden(val,true);}else{var val=document.getElementById(this.container+"-sparqlbar-term-eq-"+termid);this._hidden(val,true);val=document.getElementById(this.container+"-sparqlbar-term-oper-"+termid);this._hidden(val,false);}};com.marklogic.widgets.sparqlbar.prototype._buildQuery=function(){var s="PREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX rdfs: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX so: <http://www.schema.org/>\n";var what=document.getElementById(this.container+"-sparqlbar-what").value;if("_content"==what){s+="SELECT distinct ?s, ?g {\n  GRAPH ?g {\n    ";s+=this._buildTerms("s",this._hierarchy,"",{tc:1});s+="\n  }\n  ?g <http://marklogic.com/semantics/ontology/derived_from> ?docuri .\n}";}else if("_entities"==what){s+=" SELECT distinct ?s WHERE {\n";s+="  ?s ?p ?o . \n";s+=this._buildTerms("s",this._hierarchy,"",{tc:1});s+="}";}else if("_facts"==what){s+=" SELECT ?s, ?p, ?o WHERE {\n?s ?p ?o .\n";s+=this._buildTerms("s",this._hierarchy,"",{tc:1});s+="}";}else if("_graphs"==what){s+="SELECT distinct ?g { GRAPH ?g {}}";}else{var entity=this.semanticcontext.getConfiguration().getEntityFromIRI(what);s+="SELECT distinct ?"+entity.variable+" WHERE {\n"+"  ?"+entity.variable+" rdfs:type <"+entity.iri+"> .\n";s+=this._buildTerms(entity.variable,this._hierarchy,"",{tc:1});s+="}";}
mljs.defaultconnection.logger.debug("Generated SPARQL: "+s);return s;};com.marklogic.widgets.sparqlbar.prototype._buildTerms=function(what,termArray,padding,counterObject){var s="";var scfg=this.semanticcontext.getConfiguration();for(var i=0,max=termArray.length,tjson,twel,termWhat,termType,termRel,termPref,c,propentity,propname,propvalue,propinfo,termTypeObject;i<max;i++){tjson=termArray[i];mljs.defaultconnection.logger.debug("_buildTerms: Got term json: "+JSON.stringify(tjson));twel=document.getElementById(this.container+"-sparqlbar-term-what-"+tjson.tid);if(undefined!=twel){termWhat=twel.value;mljs.defaultconnection.logger.debug("_buildTerms: Processing term type: "+termWhat);if("*"==termWhat){termType=document.getElementById(this.container+"-sparqlbar-term-relatedtype-"+tjson.tid).value;termTypeObject=scfg.getEntityFromIRI(termType);termRel=document.getElementById(this.container+"-sparqlbar-term-relationship-"+tjson.tid).value;mljs.defaultconnection.logger.debug("_buildTerms: termRel: "+termRel+", termType: "+termType);if(undefined!=termRel){termPred=scfg.getPredicateFromIRI(termRel);mljs.defaultconnection.logger.debug("_buildTerms: termPred: "+JSON.stringify(termPred));if(undefined!=termPred){c=counterObject.tc++;s+=padding+"    ?"+what+" <"+termPred.iri+"> ?"+termTypeObject.variable+c+" .\n";s+=padding+"      ?"+termTypeObject.variable+c+" rdfs:type <"+termTypeObject.iri+"> .\n";if(tjson.children.length>0){mljs.defaultconnection.logger.debug("_buildTerms: Processing term pred children");s+=this._buildTerms(termTypeObject.variable+c,tjson.children,padding+"  ",counterObject);}
s+=padding;}}}else{propentity=scfg.getEntityFromIRI(this._getParentType(tjson.tid));propname=document.getElementById(this.container+"-sparqlbar-term-properties-"+tjson.tid).value;propvalue=document.getElementById(this.container+"-sparqlbar-term-value-"+tjson.tid).value;propinfo=scfg.getEntityProperty(propentity,propname);var proptype="xs:string";if(undefined!=propinfo.type){proptype=propinfo.type;}
var eloper=document.getElementById(this.container+"-sparqlbar-term-oper-"+tjson.tid);if(eloper.getAttribute("class").split(" ").contains("hidden")){s+=padding+"    ?"+what+" <"+propinfo.iri+"> \""+propvalue+"\"";if("xs:string"==proptype){if(undefined!=this._config.lang){s+="@"+this._config.lang;}}else{s+="^^<"+proptype+">";}}else{var oper=eloper.value;var ouroper="=";if("!="==oper){ouroper="!=";}else if("lt"==oper){ouroper="<";}else if("lte"==oper){ouroper="<=";}else if("gt"==oper){ouroper=">";}else if("gte"==oper){ouroper=">=";}
var rnd="?a"+Math.floor(Math.random()*100000);s+=padding+"    ?"+what+" <"+propinfo.iri+"> "+rnd+" . \n";s+=padding+"    FILTER ("+rnd+" "+ouroper+" \""+propvalue+"\"^^<"+proptype+"> ) \n";}
s+=" .\n";}}}
return s;};com.marklogic.widgets.sparqlbar.prototype._doQuery=function(){var sparql=this._buildQuery();this.semanticcontext.subjectQuery(sparql);};com.marklogic.widgets.sparqlbar.prototype.addErrorListener=function(lis){this.errorPublisher.subscribe(lis);};com.marklogic.widgets.sparqlbar.prototype.removeErrorListener=function(lis){this.errorPublisher.unsubscribe(lis);};com.marklogic.widgets.sparqlresults=function(container){this.container=container;this.semanticcontext=mljs.defaultconnection.createSemanticContext();this.errorPublisher=new com.marklogic.events.Publisher();this.results=null;this._iriHandler=null;this._config={mode:"none"};this._refresh();};com.marklogic.widgets.sparqlresults.getConfigurationDefinition=function(){return{mode:{type:"enum",default:"none",title:"Mode",description:"What mode are we in? Determines next action/links on page.",options:[{value:"none",title:"None",description:"No links shown."},{value:"mentioned",title:"Mentioned In",description:"Show link to documents where this Subject was mentioned in."},{value:"versionRendered",title:"Rendered Version",description:"Show link to versioned rendered documents where this Subject was mentioned in."}]}};};com.marklogic.widgets.sparqlresults.prototype.setConfiguration=function(config){for(var prop in config){this._config[prop]=config[prop];}
this.refresh();};com.marklogic.widgets.sparqlresults.prototype.setSemanticContext=function(sc){this.semanticcontext=sc;};com.marklogic.widgets.sparqlresults.prototype.iriHandler=function(handler){this._iriHandler=handler;};com.marklogic.widgets.sparqlresults.prototype.explore=function(link){this._exploreLink=link;};com.marklogic.widgets.sparqlresults.prototype._refresh=function(){var s="<div id='"+this.container+"-sparqlresults' class='mljswidget panel panel-info sparqlresults'>";s+="<div class='title panel-heading sparqlresults-title'>Subject Search Results</div>";s+="<div class='panel-body sparqlresults-content'>";var irilinks=new Array();if(undefined!=this.results){if(typeof this.results=="boolean"){if(true==this.results){}else{s+=com.marklogic.widgets.bits.failure(this.container+"-failure");}
return;}else{if(undefined!=this.results.head&&undefined!=this.results.head.vars&&undefined!=this.results.results){var entities=this.results.head.vars;if(this._config.mode!="none"){s+="<div><a href='#' id='"+this.container+"-loadContent'>Load related content</a></div>";}
if(this._exploreLink!=null){s+="<div><a href='#' id='"+this.container+"-explore'>Explore</a></div>";}
var bindings=this.results.results.bindings;for(var b=0,max=bindings.length,binding;b<max;b++){binding=this.results.results.bindings[b];s+="<div id='"+this.container+"-sparqlresults-result-"+b+"' class='sparqlresults-result";if(null!=this._iriHandler){s+=" sparqlresults-navigable";}
s+="'><h3>"+(b+1)+". ";for(var et=0,maxent=entities.length,entityValue;et<maxent;et++){entityValue=binding[entities[et]];s+="<span id='"+this.container+"-sparqlresults-result-"+b+"-summary'><i>Loading...</i></span>";irilinks.push({iri:entityValue.value,type:binding[entities[et]].type,elid:this.container+"-sparqlresults-result-"+b+"-summary"});}
s+="</h3></div>";}}}}else{s+="<i>No results</i>";}
s+="</div></div>";document.getElementById(this.container).innerHTML=s;var sh=com.marklogic.widgets.semantichelper;for(var i=0,max=irilinks.length,link;i<max;i++){link=irilinks[i];sh.summariseInto(this.semanticcontext,link.iri,link.type,link.elid,this._iriHandler);}
if(this._config.mode!="none"){var contentLink=document.getElementById(this.container+"-loadContent");if(null!=contentLink){var self=this;contentLink.onclick=function(e){self._provenance();e.stopPropagation();return false;};}}
if(this._exploreLink!=null){var explore=document.getElementById(this.container+"-explore");if(null!=explore){var self=this;explore.onclick=function(e){window.location=self._exploreLink;e.stopPropagation();return false;};}}};com.marklogic.widgets.sparqlresults.prototype.updateSubjectResults=function(results){this.results=results;this._refresh();};com.marklogic.widgets.sparqlresults.prototype.addErrorListener=function(fl){this.errorPublisher.subscribe(fl);};com.marklogic.widgets.sparqlresults.prototype.removeErrorListener=function(fl){this.errorPublisher.unsubscribe(fl);};com.marklogic.widgets.sparqlresults.prototype.setProvenanceSparqlMentioned=function(){this._config.mode="mentioned";this._refresh();};com.marklogic.widgets.sparqlresults.prototype.setProvenanceVersionRendered=function(){this._config.mode="versionRendered";this._refresh();};com.marklogic.widgets.sparqlresults.prototype.setProvenanceNone=function(){this._config.mode="none";this._refresh();};com.marklogic.widgets.sparqlresults.prototype._provenance=function(){mljs.defaultconnection.logger.debug("sparqlresults._provenance called");var sparql="";if(undefined!=this.results){if(typeof this.results=="boolean"){return;}else{if(undefined!=this.results.head&&undefined!=this.results.head.vars&&undefined!=this.results.results){if(this._mode=="mentioned"){sparql="SELECT ?docuri WHERE {\n";var entities=this.results.head.vars;var first=true;var bindings=this.results.results.bindings;for(var b=0,max=bindings.length,binding;b<max;b++){binding=this.results.results.bindings[b];for(var et=0,maxent=entities.length,entityValue;et<maxent;et++){entityValue=binding[entities[et]];if(first){first=false;}else{sparql+=" UNION ";}
sparql+=" {<"+entityValue.value+"> <http://marklogic.com/semantics/ontology/mentioned_in> ?docuri . } \n";}}
sparql+="}";}else if("versionRendered"==this._mode){sparql="SELECT ?docuri WHERE {\n";var entities=this.results.head.vars;var first=true;var bindings=this.results.results.bindings;for(var b=0,max=bindings.length,binding;b<max;b++){binding=this.results.results.bindings[b];for(var et=0,maxent=entities.length,entityValue;et<maxent;et++){entityValue=binding[entities[et]];if(first){first=false;}else{sparql+=" UNION ";}
sparql+=" {<"+entityValue.value+"> <http://marklogic.com/ontology/has_version> ?ver . \n";sparql+="?ver <http://marklogic.com/ontology/xmlRendering> ?docuri . } \n";}}
sparql+="}";}
this.semanticcontext.subjectContent(null,sparql);}else{return;}}}};com.marklogic.widgets.entityfacts=function(container){this.container=container;this.semanticcontext=mljs.defaultconnection.createSemanticContext();this._config={iriHandler:null};this.loading=false;this.facts=null;this._options="";this._customIriHandlers=new Array();this.reverse=false;this._refresh();};com.marklogic.widgets.entityfacts.getConfigurationDefinition=function(){return{iriHandler:{type:"string",default:null,title:"IRI Handler",description:"The IRI Click handler. Use #IRI# in the URL to open that page with a IRI link when clicked."}};};com.marklogic.widgets.entityfacts.prototype.setConfiguration=function(config){for(var prop in config){this._config[prop]=config[prop];}
this.refresh();};com.marklogic.widgets.entityfacts.prototype.setSemanticContext=function(sc){this.semanticcontext=sc;};com.marklogic.widgets.entityfacts.prototype.updateSubjectFacts=function(factsJson){if("object"==typeof factsJson){mljs.defaultconnection.logger.debug("entityfacts.updateSubjectFacts: Facts: "+JSON.stringify(factsJson));this.facts=factsJson;this.iri=this.facts.subject;if(undefined==factsJson.predicate){this._refresh();}else{if(factsJson.predicate==""){}}}};com.marklogic.widgets.entityfacts.prototype.iriHandler=function(handler){this._config.iriHandler=handler;};com.marklogic.widgets.entityfacts.prototype._toggle=function(){this.reverse=!this.reverse;this._refresh();};com.marklogic.widgets.entityfacts.prototype._refresh=function(){var s="<div id='"+this.container+"-entityfacts' class='mljswidget panel panel-info entityfacts'>";if(this.reverse){s+="<div class='title panel-heading entityfacts-title'>Entity Links</div>";s+="<div id='"+this.container+"-entityfacts-facts' class='panel-body entityfacts-content'>";}else{s+="<div class='title panel-heading entityfacts-title'>Entity Facts</div>";s+="<div id='"+this.container+"-entityfacts-facts' class='panel-body entityfacts-content'>";}
if(this.loading==true){}
var irilinks=new Array();var scfg=this.semanticcontext.getConfiguration();if(this.facts!=null&&this.facts!=undefined){var type=null;for(var b=0,bindings=this.facts.facts.results.bindings,max=bindings.length,predicate,object,binding;(null==type)&&(b<max);b++){binding=bindings[b];predicate=binding.predicate;if(undefined==predicate){predicate={value:this.facts.predicate};}
object=binding.object;if(predicate.value=="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"){type=object.value;}}
mljs.defaultconnection.logger.debug("Got type: "+type);var entityInfo=scfg.getEntityFromIRI(type);mljs.defaultconnection.logger.debug("Got entity info: "+JSON.stringify(entityInfo));var entityName=entityInfo.name;mljs.defaultconnection.logger.debug("Got entity name: "+entityName);var namepredicate=scfg.getNameProperty(entityName).iri;mljs.defaultconnection.logger.debug("Got name predicate: "+namepredicate);var namevalue=null;for(var b=0,bindings=this.facts.facts.results.bindings,max=bindings.length,predicate,object,binding;(null==namevalue)&&(b<max);b++){binding=bindings[b];predicate=binding.predicate;if(undefined==predicate){predicate={value:this.facts.predicate};}
object=binding.object;if(predicate.value==namepredicate){namevalue=object.value;}}
mljs.defaultconnection.logger.debug("Got name value: "+namevalue);s+="<div class='h4'>"+namevalue+" <span class='small'>"+entityInfo.title+"</span>";if(this.semanticcontext.hasContentContext()){s+=" <a href='#' id='"+this.container+"-contentlink'><span class='glyphicon glyphicon-file' title='Load related content'> </span></a>";}
s+="</div>";for(var b=0,bindings=this.facts.facts.results.bindings,max=bindings.length,predicate,obj,binding;(b<max);b++){binding=bindings[b];predicate=binding.predicate;if(undefined==predicate){predicate={value:this.facts.predicate};}
mljs.defaultconnection.logger.debug("OUR PREDICATE: "+JSON.stringify(predicate));var pinfo=scfg.getPredicateFromIRI(predicate.value);mljs.defaultconnection.logger.debug("OUR PINFO: "+JSON.stringify(pinfo));var obj=binding.object;mljs.defaultconnection.logger.debug("OUR OBJECT: "+JSON.stringify(obj));mljs.defaultconnection.logger.debug("OUR BINDING: "+JSON.stringify(binding));if(predicate.value!=namepredicate&&predicate.value!="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"){var title=predicate.value;if(undefined!=pinfo){title=pinfo.title;}
s+="<p><b>"+title+":</b> ";if(undefined!=obj["xml:lang"]||obj.type!="uri"){s+=obj.value;}else{irilinks.push({iri:obj.value,elid:this.container+"-entityfacts-fact-"+b+"-summary"});s+="<span id='"+this.container+"-entityfacts-fact-"+b+"-summary'><i>Loading...</i></span>";}
s+="</p>";}}}
s+="</div>";document.getElementById(this.container).innerHTML=s;for(var i=0,max=irilinks.length,link;i<max;i++){link=irilinks[i];this._summariseInto(link.iri,link.elid);}
if(this.semanticcontext.hasContentContext()){var self=this;var el=document.getElementById(this.container+"-contentlink");mljs.defaultconnection.logger.debug("CONTENTLINK: "+el);if(null!=el){mljs.defaultconnection.logger.debug("ADDING CLICK HANDLER TO CONTENTLINK");el.onclick=function(){self._provenance();};}}};com.marklogic.widgets.entityfacts.prototype._summariseInto=function(iri,elid){com.marklogic.widgets.semantichelper.summariseInto(this.semanticcontext,iri,"uri",elid,this._config.iriHandler);};com.marklogic.widgets.entityfacts.prototype.updateEntity=function(iri){this.loading=true;this._refresh();var self=this;this.semanticcontext.getFacts(iri);this.errorPublisher=new com.marklogic.events.Publisher();};com.marklogic.widgets.entityfacts.prototype.addErrorListener=function(lis){this.errorPublisher.subscribe(lis);};com.marklogic.widgets.entityfacts.prototype.removeErrorListener=function(lis){this.errorPublisher.unsubscribe(lis);};com.marklogic.widgets.entityfacts.prototype.setProvenanceSparqlMentioned=function(){this.provenanceSparql="SELECT ?docuri WHERE {<#IRI#> <http://marklogic.com/semantics/ontology/mentioned_in> ?docuri .}";};com.marklogic.widgets.entityfacts.prototype._provenance=function(){mljs.defaultconnection.logger.debug("_provenance called for: "+this.facts.subjectIri);var sparql=this.provenanceSparql;if(undefined!=sparql){sparql=sparql.replace(/#IRI#/,this.iri);}
this.semanticcontext.subjectContent(this.iri,sparql);};